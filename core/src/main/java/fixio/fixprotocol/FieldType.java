
        /*
        * Copyright 2014 The FIX.io Project
        *
        * The FIX.io Project licenses this file to you under the Apache License,
        * version 2.0 (the "License"); you may not use this file except in compliance
        * with the License. You may obtain a copy of the License at:
        *
        * http://www.apache.org/licenses/LICENSE-2.0
        *
        * Unless required by applicable law or agreed to in writing, software
        * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
        * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
        * License for the specific language governing permissions and limitations
        * under the License.
        */
        package fixio.fixprotocol;

        import java.util.HashMap;
        import static fixio.fixprotocol.DataType.*;

        public enum FieldType {
        	
    	/* Custom tags for OEC */
        UUID(12003, STRING),
        FastHashCode(12004, STRING),
    	MaxRecords(12051, INT),
    	SymbolLookupMode(12052, CHAR),
    	ContractGroup(12054, STRING),
    	ContractType(12055, CHAR),
    	ByBaseContractsOnly(12056, BOOLEAN),
    	OptionsRequired(12057, BOOLEAN),
    	
    	LastSolicitedClOrdID(12073, STRING),
    	MassStatusReqResult(12074, INT), 
        	
        UNKNOWN(-1, STRING),
        Account(1,
        STRING
        ),
    AdvId(2,
        STRING
        ),
    AdvRefID(3,
        STRING
        ),
    AdvSide(4,
        CHAR
            ,new String[]{
        "B",//BUY
        "S",//SELL
        "T",//TRADE
        "X",//CROSS
            }
        
        ),
    AdvTransType(5,
        STRING
            ,new String[]{
        "N",//NEW
        "C",//CANCEL
        "R",//REPLACE
            }
        
        ),
    AvgPx(6,
        PRICE
        ),
    BeginSeqNo(7,
        SEQNUM
        ),
    BeginString(8,
        STRING
        ),
    BodyLength(9,
        LENGTH
        ),
    CheckSum(10,
        STRING
        ),
    ClOrdID(11,
        STRING
        ),
    Commission(12,
        AMT
        ),
    CommType(13,
        CHAR
            ,new String[]{
        "1",//PER_UNIT
        "2",//PERCENT
        "3",//ABSOLUTE
        "4",//PERCENTAGE_WAIVED_4
        "5",//PERCENTAGE_WAIVED_5
        "6",//POINTS_PER_BOND_OR_CONTRACT
            }
        
        ),
    CumQty(14,
        QTY
        ),
    Currency(15,
        CURRENCY
        ),
    EndSeqNo(16,
        SEQNUM
        ),
    ExecID(17,
        STRING
        ),
    ExecInst(18,
        MULTIPLECHARVALUE
            ,new String[]{
        "0",//STAY_ON_OFFER_SIDE
        "1",//NOT_HELD
        "2",//WORK
        "3",//GO_ALONG
        "4",//OVER_THE_DAY
        "5",//HELD
        "6",//PARTICIPATE_DONT_INITIATE
        "7",//STRICT_SCALE
        "8",//TRY_TO_SCALE
        "9",//STAY_ON_BID_SIDE
        "A",//NO_CROSS
        "B",//OK_TO_CROSS
        "C",//CALL_FIRST
        "D",//PERCENT_OF_VOLUME
        "E",//DO_NOT_INCREASE
        "F",//DO_NOT_REDUCE
        "G",//ALL_OR_NONE
        "H",//REINSTATE_ON_SYSTEM_FAILURE
        "I",//INSTITUTIONS_ONLY
        "J",//REINSTATE_ON_TRADING_HALT
        "K",//CANCEL_ON_TRADING_HALT
        "L",//LAST_PEG
        "M",//MID_PRICE_PEG
        "N",//NON_NEGOTIABLE
        "O",//OPENING_PEG
        "P",//MARKET_PEG
        "Q",//CANCEL_ON_SYSTEM_FAILURE
        "R",//PRIMARY_PEG
        "S",//SUSPEND
        "T",//FIXED_PEG_TO_LOCAL_BEST_BID_OR_OFFER_AT_TIME_OF_ORDER
        "U",//CUSTOMER_DISPLAY_INSTRUCTION
        "V",//NETTING
        "W",//PEG_TO_VWAP
        "X",//TRADE_ALONG
        "Y",//TRY_TO_STOP
        "Z",//CANCEL_IF_NOT_BEST
        "a",//TRAILING_STOP_PEG
        "b",//STRICT_LIMIT
        "c",//IGNORE_PRICE_VALIDITY_CHECKS
        "d",//PEG_TO_LIMIT_PRICE
        "e",//WORK_TO_TARGET_STRATEGY
        "f",//INTERMARKET_SWEEP
        "g",//EXTERNAL_ROUTING_ALLOWED
        "h",//EXTERNAL_ROUTING_NOT_ALLOWED
        "i",//IMBALANCE_ONLY
        "j",//SINGLE_EXECUTION_REQUESTED_FOR_BLOCK_TRADE
        "k",//BEST_EXECUTION
        "l",//SUSPEND_ON_SYSTEM_FAILURE
        "m",//SUSPEND_ON_TRADING_HALT
        "n",//REINSTATE_ON_CONNECTION_LOSS
        "o",//CANCEL_ON_CONNECTION_LOSS
        "p",//SUSPEND_ON_CONNECTION_LOSS
        "q",//RELEASE_FROM_SUSPENSION
        "r",//EXECUTE_AS_DELTA_NEUTRAL_USING_VOLATILITY_PROVIDED
        "s",//EXECUTE_AS_DURATION_NEUTRAL
        "t",//EXECUTE_AS_FX_NEUTRAL
            }
        
        ),
    ExecRefID(19,
        STRING
        ),
    HandlInst(21,
        CHAR
            ,new String[]{
        "1",//AUTOMATED_EXECUTION_ORDER_PRIVATE_NO_BROKER_INTERVENTION
        "2",//AUTOMATED_EXECUTION_ORDER_PUBLIC_BROKER_INTERVENTION_OK
        "3",//MANUAL_ORDER_BEST_EXECUTION
            }
        
        ),
    SecurityIDSource(22,
        STRING
            ,new String[]{
        "1",//CUSIP
        "2",//SEDOL
        "3",//QUIK
        "4",//ISIN_NUMBER
        "5",//RIC_CODE
        "6",//ISO_CURRENCY_CODE
        "7",//ISO_COUNTRY_CODE
        "8",//EXCHANGE_SYMBOL
        "9",//CONSOLIDATED_TAPE_ASSOCIATION
        "A",//BLOOMBERG_SYMBOL
        "B",//WERTPAPIER
        "C",//DUTCH
        "D",//VALOREN
        "E",//SICOVAM
        "F",//BELGIAN
        "G",//COMMON
        "H",//CLEARING_HOUSE
        "I",//ISDA_FPML_PRODUCT_SPECIFICATION
        "J",//OPTION_PRICE_REPORTING_AUTHORITY
        "K",//ISDA_FPML_PRODUCT_URL
        "L",//LETTER_OF_CREDIT
        "M",//MARKETPLACE_ASSIGNED_IDENTIFIER
            }
        
        ),
    IOIID(23,
        STRING
        ),
    IOIQltyInd(25,
        CHAR
            ,new String[]{
        "H",//HIGH
        "L",//LOW
        "M",//MEDIUM
            }
        
        ),
    IOIRefID(26,
        STRING
        ),
    IOIQty(27,
        STRING
            ,new String[]{
        "S",//SMALL
        "M",//MEDIUM
        "L",//LARGE
        "U",//UNDISCLOSED_QUANTITY
            }
        
        ),
    IOITransType(28,
        CHAR
            ,new String[]{
        "N",//NEW
        "C",//CANCEL
        "R",//REPLACE
            }
        
        ),
    LastCapacity(29,
        CHAR
            ,new String[]{
        "1",//AGENT
        "2",//CROSS_AS_AGENT
        "3",//CROSS_AS_PRINCIPAL
        "4",//PRINCIPAL
            }
        
        ),
    LastMkt(30,
        EXCHANGE
        ),
    LastPx(31,
        PRICE
        ),
    LastQty(32,
        QTY
        ),
    NoLinesOfText(33,
        NUMINGROUP
        ),
    MsgSeqNum(34,
        SEQNUM
        ),
    MsgType(35,
        STRING
            ,new String[]{
        "0",//HEARTBEAT
        "1",//TESTREQUEST
        "2",//RESENDREQUEST
        "3",//REJECT
        "4",//SEQUENCERESET
        "5",//LOGOUT
        "6",//IOI
        "7",//ADVERTISEMENT
        "8",//EXECUTIONREPORT
        "9",//ORDERCANCELREJECT
        "A",//LOGON
        "AA",//DERIVATIVESECURITYLIST
        "AB",//NEWORDERMULTILEG
        "AC",//MULTILEGORDERCANCELREPLACE
        "AD",//TRADECAPTUREREPORTREQUEST
        "AE",//TRADECAPTUREREPORT
        "AF",//ORDERMASSSTATUSREQUEST
        "AG",//QUOTEREQUESTREJECT
        "AH",//RFQREQUEST
        "AI",//QUOTESTATUSREPORT
        "AJ",//QUOTERESPONSE
        "AK",//CONFIRMATION
        "AL",//POSITIONMAINTENANCEREQUEST
        "AM",//POSITIONMAINTENANCEREPORT
        "AN",//REQUESTFORPOSITIONS
        "AO",//REQUESTFORPOSITIONSACK
        "AP",//POSITIONREPORT
        "AQ",//TRADECAPTUREREPORTREQUESTACK
        "AR",//TRADECAPTUREREPORTACK
        "AS",//ALLOCATIONREPORT
        "AT",//ALLOCATIONREPORTACK
        "AU",//CONFIRMATIONACK
        "AV",//SETTLEMENTINSTRUCTIONREQUEST
        "AW",//ASSIGNMENTREPORT
        "AX",//COLLATERALREQUEST
        "AY",//COLLATERALASSIGNMENT
        "AZ",//COLLATERALRESPONSE
        "B",//NEWS
        "BA",//COLLATERALREPORT
        "BB",//COLLATERALINQUIRY
        "BC",//NETWORKCOUNTERPARTYSYSTEMSTATUSREQUEST
        "BD",//NETWORKCOUNTERPARTYSYSTEMSTATUSRESPONSE
        "BE",//USERREQUEST
        "BF",//USERRESPONSE
        "BG",//COLLATERALINQUIRYACK
        "BH",//CONFIRMATIONREQUEST
        "BI",//TRADINGSESSIONLISTREQUEST
        "BJ",//TRADINGSESSIONLIST
        "BK",//SECURITYLISTUPDATEREPORT
        "BL",//ADJUSTEDPOSITIONREPORT
        "BM",//ALLOCATIONINSTRUCTIONALERT
        "BN",//EXECUTIONACKNOWLEDGEMENT
        "BO",//CONTRARYINTENTIONREPORT
        "BP",//SECURITYDEFINITIONUPDATEREPORT
        "BQ",//SETTLEMENTOBLIGATIONREPORT
        "BR",//DERIVATIVESECURITYLISTUPDATEREPORT
        "BS",//TRADINGSESSIONLISTUPDATEREPORT
        "BT",//MARKETDEFINITIONREQUEST
        "BU",//MARKETDEFINITION
        "BV",//MARKETDEFINITIONUPDATEREPORT
        "BW",//APPLICATIONMESSAGEREQUEST
        "BX",//APPLICATIONMESSAGEREQUESTACK
        "BY",//APPLICATIONMESSAGEREPORT
        "BZ",//ORDERMASSACTIONREPORT
        "C",//EMAIL
        "CA",//ORDERMASSACTIONREQUEST
        "CB",//USERNOTIFICATION
        "CC",//STREAMASSIGNMENTREQUEST
        "CD",//STREAMASSIGNMENTREPORT
        "CE",//STREAMASSIGNMENTREPORTACK
        "D",//NEWORDERSINGLE
        "E",//NEWORDERLIST
        "F",//ORDERCANCELREQUEST
        "G",//ORDERCANCELREPLACEREQUEST
        "H",//ORDERSTATUSREQUEST
        "J",//ALLOCATIONINSTRUCTION
        "K",//LISTCANCELREQUEST
        "L",//LISTEXECUTE
        "M",//LISTSTATUSREQUEST
        "N",//LISTSTATUS
        "P",//ALLOCATIONINSTRUCTIONACK
        "Q",//DONTKNOWTRADE
        "R",//QUOTEREQUEST
        "S",//QUOTE
        "T",//SETTLEMENTINSTRUCTIONS
        "V",//MARKETDATAREQUEST
        "W",//MARKETDATASNAPSHOTFULLREFRESH
        "X",//MARKETDATAINCREMENTALREFRESH
        "Y",//MARKETDATAREQUESTREJECT
        "Z",//QUOTECANCEL
        "a",//QUOTESTATUSREQUEST
        "b",//MASSQUOTEACKNOWLEDGEMENT
        "c",//SECURITYDEFINITIONREQUEST
        "d",//SECURITYDEFINITION
        "e",//SECURITYSTATUSREQUEST
        "f",//SECURITYSTATUS
        "g",//TRADINGSESSIONSTATUSREQUEST
        "h",//TRADINGSESSIONSTATUS
        "i",//MASSQUOTE
        "j",//BUSINESSMESSAGEREJECT
        "k",//BIDREQUEST
        "l",//BIDRESPONSE
        "m",//LISTSTRIKEPRICE
        "n",//XMLNONFIX
        "o",//REGISTRATIONINSTRUCTIONS
        "p",//REGISTRATIONINSTRUCTIONSRESPONSE
        "q",//ORDERMASSCANCELREQUEST
        "r",//ORDERMASSCANCELREPORT
        "s",//NEWORDERCROSS
        "t",//CROSSORDERCANCELREPLACEREQUEST
        "u",//CROSSORDERCANCELREQUEST
        "v",//SECURITYTYPEREQUEST
        "w",//SECURITYTYPES
        "x",//SECURITYLISTREQUEST
        "y",//SECURITYLIST
        "z",//DERIVATIVESECURITYLISTREQUEST
            }
        
        ),
    NewSeqNo(36,
        SEQNUM
        ),
    OrderID(37,
        STRING
        ),
    OrderQty(38,
        QTY
        ),
    OrdStatus(39,
        CHAR
            ,new String[]{
        "0",//NEW
        "1",//PARTIALLY_FILLED
        "2",//FILLED
        "3",//DONE_FOR_DAY
        "4",//CANCELED
        "5",//REPLACED
        "6",//PENDING_CANCEL
        "7",//STOPPED
        "8",//REJECTED
        "9",//SUSPENDED
        "A",//PENDING_NEW
        "B",//CALCULATED
        "C",//EXPIRED
        "D",//ACCEPTED_FOR_BIDDING
        "E",//PENDING_REPLACE
            }
        
        ),
    OrdType(40,
        CHAR
            ,new String[]{
        "1",//MARKET
        "2",//LIMIT
        "3",//STOP
        "4",//STOP_LIMIT
        "5",//MARKET_ON_CLOSE
        "6",//WITH_OR_WITHOUT
        "7",//LIMIT_OR_BETTER
        "8",//LIMIT_WITH_OR_WITHOUT
        "9",//ON_BASIS
        "A",//ON_CLOSE
        "B",//LIMIT_ON_CLOSE
        "C",//FOREX_MARKET
        "D",//PREVIOUSLY_QUOTED
        "E",//PREVIOUSLY_INDICATED
        "F",//FOREX_LIMIT
        "G",//FOREX_SWAP
        "H",//FOREX_PREVIOUSLY_QUOTED
        "I",//FUNARI
        "J",//MARKET_IF_TOUCHED
        "K",//MARKET_WITH_LEFT_OVER_AS_LIMIT
        "L",//PREVIOUS_FUND_VALUATION_POINT
        "M",//NEXT_FUND_VALUATION_POINT
        "P",//PEGGED
        "Q",//COUNTER_ORDER_SELECTION
            }
        
        ),
    OrigClOrdID(41,
        STRING
        ),
    OrigTime(42,
        UTCTIMESTAMP
        ),
    PossDupFlag(43,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    Price(44,
        PRICE
        ),
    RefSeqNum(45,
        SEQNUM
        ),
    SecurityID(48,
        STRING
        ),
    SenderCompID(49,
        STRING
        ),
    SenderSubID(50,
        STRING
        ),
    SendingTime(52,
        UTCTIMESTAMP
        ),
    Quantity(53,
        QTY
        ),
    Side(54,
        CHAR
            ,new String[]{
        "1",//BUY
        "2",//SELL
        "3",//BUY_MINUS
        "4",//SELL_PLUS
        "5",//SELL_SHORT
        "6",//SELL_SHORT_EXEMPT
        "7",//UNDISCLOSED
        "8",//CROSS
        "9",//CROSS_SHORT
        "A",//CROSS_SHORT_EXEMPT
        "B",//AS_DEFINED
        "C",//OPPOSITE
        "D",//SUBSCRIBE
        "E",//REDEEM
        "F",//LEND
        "G",//BORROW
            }
        
        ),
    Symbol(55,
        STRING
        ),
    TargetCompID(56,
        STRING
        ),
    TargetSubID(57,
        STRING
        ),
    Text(58,
        STRING
        ),
    TimeInForce(59,
        CHAR
            ,new String[]{
        "0",//DAY
        "1",//GOOD_TILL_CANCEL
        "2",//AT_THE_OPENING
        "3",//IMMEDIATE_OR_CANCEL
        "4",//FILL_OR_KILL
        "5",//GOOD_TILL_CROSSING
        "6",//GOOD_TILL_DATE
        "7",//AT_THE_CLOSE
        "8",//GOOD_THROUGH_CROSSING
        "9",//AT_CROSSING
            }
        
        ),
    TransactTime(60,
        UTCTIMESTAMP
        ),
    Urgency(61,
        CHAR
            ,new String[]{
        "0",//NORMAL
        "1",//FLASH
        "2",//BACKGROUND
            }
        
        ),
    ValidUntilTime(62,
        UTCTIMESTAMP
        ),
    SettlType(63,
        STRING
            ,new String[]{
        "0",//REGULAR
        "1",//CASH
        "2",//NEXT_DAY
        "3",//T_PLUS_2
        "4",//T_PLUS_3
        "5",//T_PLUS_4
        "6",//FUTURE
        "7",//WHEN_AND_IF_ISSUED
        "8",//SELLERS_OPTION
        "9",//T_PLUS_5
        "B",//BROKEN_DATE
        "C",//FX_SPOT_NEXT_SETTLEMENT
            }
        
        ),
    SettlDate(64,
        LOCALMKTDATE
        ),
    SymbolSfx(65,
        STRING
            ,new String[]{
        "CD",//EUCP_WITH_LUMP_SUM_INTEREST_RATHER_THAN_DISCOUNT_PRICE
        "WI",//WHEN_ISSUED_FOR_A_SECURITY_TO_BE_REISSUED_UNDER_AN_OLD_CUSIP_OR_ISIN
            }
        
        ),
    ListID(66,
        STRING
        ),
    ListSeqNo(67,
        INT
        ),
    TotNoOrders(68,
        INT
        ),
    ListExecInst(69,
        STRING
        ),
    AllocID(70,
        STRING
        ),
    AllocTransType(71,
        CHAR
            ,new String[]{
        "0",//NEW
        "1",//REPLACE
        "2",//CANCEL
        "3",//PRELIMINARY
        "4",//CALCULATED
        "5",//CALCULATED_WITHOUT_PRELIMINARY
        "6",//REVERSAL
            }
        
        ),
    RefAllocID(72,
        STRING
        ),
    NoOrders(73,
        NUMINGROUP
        ),
    AvgPxPrecision(74,
        INT
        ),
    TradeDate(75,
        LOCALMKTDATE
        ),
    PositionEffect(77,
        CHAR
            ,new String[]{
        "C",//CLOSE
        "F",//FIFO
        "O",//OPEN
        "R",//ROLLED
        "N",//CLOSE_BUT_NOTIFY_ON_OPEN
        "D",//DEFAULT
            }
        
        ),
    NoAllocs(78,
        NUMINGROUP
        ),
    AllocAccount(79,
        STRING
        ),
    AllocQty(80,
        QTY
        ),
    ProcessCode(81,
        CHAR
            ,new String[]{
        "0",//REGULAR
        "1",//SOFT_DOLLAR
        "2",//STEP_IN
        "3",//STEP_OUT
        "4",//SOFT_DOLLAR_STEP_IN
        "5",//SOFT_DOLLAR_STEP_OUT
        "6",//PLAN_SPONSOR
            }
        
        ),
    NoRpts(82,
        INT
        ),
    RptSeq(83,
        INT
        ),
    CxlQty(84,
        QTY
        ),
    NoDlvyInst(85,
        NUMINGROUP
        ),
    AllocStatus(87,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "1",//BLOCK_LEVEL_REJECT
        "2",//ACCOUNT_LEVEL_REJECT
        "3",//RECEIVED
        "4",//INCOMPLETE
        "5",//REJECTED_BY_INTERMEDIARY
        "6",//ALLOCATION_PENDING
        "7",//REVERSED
            }
        
        ),
    AllocRejCode(88,
        INT
            ,new String[]{
        "0",//UNKNOWN_ACCOUNT
        "1",//INCORRECT_QUANTITY
        "2",//INCORRECT_AVERAGEG_PRICE
        "3",//UNKNOWN_EXECUTING_BROKER_MNEMONIC
        "4",//COMMISSION_DIFFERENCE
        "5",//UNKNOWN_ORDERID
        "6",//UNKNOWN_LISTID
        "7",//OTHER_7
        "8",//INCORRECT_ALLOCATED_QUANTITY
        "9",//CALCULATION_DIFFERENCE
        "10",//UNKNOWN_OR_STALE_EXECID
        "11",//MISMATCHED_DATA
        "12",//UNKNOWN_CLORDID
        "13",//WAREHOUSE_REQUEST_REJECTED
        "99",//OTHER_99
            }
        
        ),
    Signature(89,
        DATA
        ),
    SecureDataLen(90,
        LENGTH
        ),
    SecureData(91,
        DATA
        ),
    SignatureLength(93,
        LENGTH
        ),
    EmailType(94,
        CHAR
            ,new String[]{
        "0",//NEW
        "1",//REPLY
        "2",//ADMIN_REPLY
            }
        
        ),
    RawDataLength(95,
        LENGTH
        ),
    RawData(96,
        DATA
        ),
    PossResend(97,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    EncryptMethod(98,
        INT
            ,new String[]{
        "0",//NONE
        "1",//PKCS_1
        "2",//DES
        "3",//PKCS_3
        "4",//PGP_4
        "5",//PGP_5
        "6",//PEM
            }
        
        ),
    StopPx(99,
        PRICE
        ),
    ExDestination(100,
        EXCHANGE
        ),
    CxlRejReason(102,
        INT
            ,new String[]{
        "0",//TOO_LATE_TO_CANCEL
        "1",//UNKNOWN_ORDER
        "2",//BROKER
        "3",//ORDER_ALREADY_IN_PENDING_CANCEL_OR_PENDING_REPLACE_STATUS
        "4",//UNABLE_TO_PROCESS_ORDER_MASS_CANCEL_REQUEST
        "5",//ORIGORDMODTIME
        "6",//DUPLICATE_CLORDID
        "7",//PRICE_EXCEEDS_CURRENT_PRICE
        "8",//PRICE_EXCEEDS_CURRENT_PRICE_BAND
        "18",//INVALID_PRICE_INCREMENT
        "99",//OTHER
            }
        
        ),
    OrdRejReason(103,
        INT
            ,new String[]{
        "0",//BROKER
        "1",//UNKNOWN_SYMBOL
        "2",//EXCHANGE_CLOSED
        "3",//ORDER_EXCEEDS_LIMIT
        "4",//TOO_LATE_TO_ENTER
        "5",//UNKNOWN_ORDER
        "6",//DUPLICATE_ORDER
        "7",//DUPLICATE_OF_A_VERBALLY_COMMUNICATED_ORDER
        "8",//STALE_ORDER
        "9",//TRADE_ALONG_REQUIRED
        "10",//INVALID_INVESTOR_ID
        "11",//UNSUPPORTED_ORDER_CHARACTERISTIC
        "12",//SURVEILLENCE_OPTION
        "13",//INCORRECT_QUANTITY
        "14",//INCORRECT_ALLOCATED_QUANTITY
        "15",//UNKNOWN_ACCOUNT
        "16",//PRICE_EXCEEDS_CURRENT_PRICE_BAND
        "18",//INVALID_PRICE_INCREMENT
        "99",//OTHER
            }
        
        ),
    IOIQualifier(104,
        CHAR
            ,new String[]{
        "A",//ALL_OR_NONE
        "B",//MARKET_ON_CLOSE
        "C",//AT_THE_CLOSE
        "D",//VWAP
        "I",//IN_TOUCH_WITH
        "L",//LIMIT
        "M",//MORE_BEHIND
        "O",//AT_THE_OPEN
        "P",//TAKING_A_POSITION
        "Q",//AT_THE_MARKET
        "R",//READY_TO_TRADE
        "S",//PORTFOLIO_SHOWN
        "T",//THROUGH_THE_DAY
        "V",//VERSUS
        "W",//INDICATION
        "X",//CROSSING_OPPORTUNITY
        "Y",//AT_THE_MIDPOINT
        "Z",//PRE_OPEN
            }
        
        ),
    Issuer(106,
        STRING
        ),
    SecurityDesc(107,
        STRING
        ),
    HeartBtInt(108,
        INT
        ),
    MinQty(110,
        QTY
        ),
    MaxFloor(111,
        QTY
        ),
    TestReqID(112,
        STRING
        ),
    ReportToExch(113,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    LocateReqd(114,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    OnBehalfOfCompID(115,
        STRING
        ),
    OnBehalfOfSubID(116,
        STRING
        ),
    QuoteID(117,
        STRING
        ),
    NetMoney(118,
        AMT
        ),
    SettlCurrAmt(119,
        AMT
        ),
    SettlCurrency(120,
        CURRENCY
        ),
    ForexReq(121,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    OrigSendingTime(122,
        UTCTIMESTAMP
        ),
    GapFillFlag(123,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    NoExecs(124,
        NUMINGROUP
        ),
    ExpireTime(126,
        UTCTIMESTAMP
        ),
    DKReason(127,
        CHAR
            ,new String[]{
        "A",//UNKNOWN_SYMBOL
        "B",//WRONG_SIDE
        "C",//QUANTITY_EXCEEDS_ORDER
        "D",//NO_MATCHING_ORDER
        "E",//PRICE_EXCEEDS_LIMIT
        "F",//CALCULATION_DIFFERENCE
        "Z",//OTHER
            }
        
        ),
    DeliverToCompID(128,
        STRING
        ),
    DeliverToSubID(129,
        STRING
        ),
    IOINaturalFlag(130,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    QuoteReqID(131,
        STRING
        ),
    BidPx(132,
        PRICE
        ),
    OfferPx(133,
        PRICE
        ),
    BidSize(134,
        QTY
        ),
    OfferSize(135,
        QTY
        ),
    NoMiscFees(136,
        NUMINGROUP
        ),
    MiscFeeAmt(137,
        AMT
        ),
    MiscFeeCurr(138,
        CURRENCY
        ),
    MiscFeeType(139,
        STRING
            ,new String[]{
        "1",//REGULATORY
        "2",//TAX
        "3",//LOCAL_COMMISSION
        "4",//EXCHANGE_FEES
        "5",//STAMP
        "6",//LEVY
        "7",//OTHER
        "8",//MARKUP
        "9",//CONSUMPTION_TAX
        "10",//PER_TRANSACTION
        "11",//CONVERSION
        "12",//AGENT
        "13",//TRANSFER_FEE
        "14",//SECURITY_LENDING
            }
        
        ),
    PrevClosePx(140,
        PRICE
        ),
    ResetSeqNumFlag(141,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    SenderLocationID(142,
        STRING
        ),
    TargetLocationID(143,
        STRING
        ),
    OnBehalfOfLocationID(144,
        STRING
        ),
    DeliverToLocationID(145,
        STRING
        ),
    NoRelatedSym(146,
        NUMINGROUP
        ),
    Subject(147,
        STRING
        ),
    Headline(148,
        STRING
        ),
    URLLink(149,
        STRING
        ),
    ExecType(150,
        CHAR
            ,new String[]{
        "0",//NEW
        "3",//DONE_FOR_DAY
        "4",//CANCELED
        "5",//REPLACED
        "6",//PENDING_CANCEL
        "7",//STOPPED
        "8",//REJECTED
        "9",//SUSPENDED
        "A",//PENDING_NEW
        "B",//CALCULATED
        "C",//EXPIRED
        "D",//RESTATED
        "E",//PENDING_REPLACE
        "F",//TRADE
        "G",//TRADE_CORRECT
        "H",//TRADE_CANCEL
        "I",//ORDER_STATUS
        "J",//TRADE_IN_A_CLEARING_HOLD
        "K",//TRADE_HAS_BEEN_RELEASED_TO_CLEARING
        "L",//TRIGGERED_OR_ACTIVATED_BY_SYSTEM
            }
        
        ),
    LeavesQty(151,
        QTY
        ),
    CashOrderQty(152,
        QTY
        ),
    AllocAvgPx(153,
        PRICE
        ),
    AllocNetMoney(154,
        AMT
        ),
    SettlCurrFxRate(155,
        FLOAT
        ),
    SettlCurrFxRateCalc(156,
        CHAR
            ,new String[]{
        "M",//MULTIPLY
        "D",//DIVIDE
            }
        
        ),
    NumDaysInterest(157,
        INT
        ),
    AccruedInterestRate(158,
        PERCENTAGE
        ),
    AccruedInterestAmt(159,
        AMT
        ),
    SettlInstMode(160,
        CHAR
            ,new String[]{
        "0",//DEFAULT
        "1",//STANDING_INSTRUCTIONS_PROVIDED
        "2",//SPECIFIC_ALLOCATION_ACCOUNT_OVERRIDING
        "3",//SPECIFIC_ALLOCATION_ACCOUNT_STANDING
        "4",//SPECIFIC_ORDER_FOR_A_SINGLE_ACCOUNT
        "5",//REQUEST_REJECT
            }
        
        ),
    AllocText(161,
        STRING
        ),
    SettlInstID(162,
        STRING
        ),
    SettlInstTransType(163,
        CHAR
            ,new String[]{
        "N",//NEW
        "C",//CANCEL
        "R",//REPLACE
        "T",//RESTATE
            }
        
        ),
    EmailThreadID(164,
        STRING
        ),
    SettlInstSource(165,
        CHAR
            ,new String[]{
        "1",//BROKERS_INSTRUCTIONS
        "2",//INSTITUTIONS_INSTRUCTIONS
        "3",//INVESTOR
            }
        
        ),
    SecurityType(167,
        STRING
            ,new String[]{
        "UST",//US_TREASURY_NOTE_UST
        "USTB",//US_TREASURY_BILL_USTB
        "EUSUPRA",//EURO_SUPRANATIONAL_COUPONS
        "FAC",//FEDERAL_AGENCY_COUPON
        "FADN",//FEDERAL_AGENCY_DISCOUNT_NOTE
        "PEF",//PRIVATE_EXPORT_FUNDING
        "SUPRA",//USD_SUPRANATIONAL_COUPONS
        "CORP",//CORPORATE_BOND
        "CPP",//CORPORATE_PRIVATE_PLACEMENT
        "CB",//CONVERTIBLE_BOND
        "DUAL",//DUAL_CURRENCY
        "EUCORP",//EURO_CORPORATE_BOND
        "EUFRN",//EURO_CORPORATE_FLOATING_RATE_NOTES
        "FRN",//US_CORPORATE_FLOATING_RATE_NOTES
        "XLINKD",//INDEXED_LINKED
        "STRUCT",//STRUCTURED_NOTES
        "YANK",//YANKEE_CORPORATE_BOND
        "FOR",//FOREIGN_EXCHANGE_CONTRACT
        "CDS",//CREDIT_DEFAULT_SWAP
        "FUT",//FUTURE
        "OPT",//OPTION
        "OOF",//OPTIONS_ON_FUTURES
        "OOP",//OPTIONS_ON_PHYSICAL
        "IRS",//INTEREST_RATE_SWAP
        "OOC",//OPTIONS_ON_COMBO
        "CS",//COMMON_STOCK
        "PS",//PREFERRED_STOCK
        "REPO",//REPURCHASE
        "FORWARD",//FORWARD
        "BUYSELL",//BUY_SELLBACK
        "SECLOAN",//SECURITIES_LOAN
        "SECPLEDGE",//SECURITIES_PLEDGE
        "BRADY",//BRADY_BOND
        "CAN",//CANADIAN_TREASURY_NOTES
        "CTB",//CANADIAN_TREASURY_BILLS
        "EUSOV",//EURO_SOVEREIGNS
        "PROV",//CANADIAN_PROVINCIAL_BONDS
        "TB",//TREASURY_BILL
        "TBOND",//US_TREASURY_BOND
        "TINT",//INTEREST_STRIP_FROM_ANY_BOND_OR_NOTE
        "TBILL",//US_TREASURY_BILL_TBILL
        "TIPS",//TREASURY_INFLATION_PROTECTED_SECURITIES
        "TCAL",//PRINCIPAL_STRIP_OF_A_CALLABLE_BOND_OR_NOTE
        "TPRN",//PRINCIPAL_STRIP_FROM_A_NON_CALLABLE_BOND_OR_NOTE
        "TNOTE",//US_TREASURY_NOTE_TNOTE
        "TERM",//TERM_LOAN
        "RVLV",//REVOLVER_LOAN
        "RVLVTRM",//REVOLVER_TERM_LOAN
        "BRIDGE",//BRIDGE_LOAN
        "LOFC",//LETTER_OF_CREDIT
        "SWING",//SWING_LINE_FACILITY
        "DINP",//DEBTOR_IN_POSSESSION
        "DEFLTED",//DEFAULTED
        "WITHDRN",//WITHDRAWN
        "REPLACD",//REPLACED
        "MATURED",//MATURED
        "AMENDED",//AMENDED_RESTATED
        "RETIRED",//RETIRED
        "BA",//BANKERS_ACCEPTANCE
        "BDN",//BANK_DEPOSITORY_NOTE
        "BN",//BANK_NOTES
        "BOX",//BILL_OF_EXCHANGES
        "CAMM",//CANADIAN_MONEY_MARKETS
        "CD",//CERTIFICATE_OF_DEPOSIT
        "CL",//CALL_LOANS
        "CP",//COMMERCIAL_PAPER
        "DN",//DEPOSIT_NOTES
        "EUCD",//EURO_CERTIFICATE_OF_DEPOSIT
        "EUCP",//EURO_COMMERCIAL_PAPER
        "LQN",//LIQUIDITY_NOTE
        "MTN",//MEDIUM_TERM_NOTES
        "ONITE",//OVERNIGHT
        "PN",//PROMISSORY_NOTE
        "STN",//SHORT_TERM_LOAN_NOTE
        "PZFJ",//PLAZOS_FIJOS
        "SLQN",//SECURED_LIQUIDITY_NOTE
        "TD",//TIME_DEPOSIT
        "TLQN",//TERM_LIQUIDITY_NOTE
        "XCN",//EXTENDED_COMM_NOTE
        "YCD",//YANKEE_CERTIFICATE_OF_DEPOSIT
        "ABS",//ASSET_BACKED_SECURITIES
        "CMB",//CANADIAN_MORTGAGE_BONDS
        "CMBS",//CORP_MORTGAGE_BACKED_SECURITIES
        "CMO",//COLLATERALIZED_MORTGAGE_OBLIGATION
        "IET",//IOETTE_MORTGAGE
        "MBS",//MORTGAGE_BACKED_SECURITIES
        "MIO",//MORTGAGE_INTEREST_ONLY
        "MPO",//MORTGAGE_PRINCIPAL_ONLY
        "MPP",//MORTGAGE_PRIVATE_PLACEMENT
        "MPT",//MISCELLANEOUS_PASS_THROUGH
        "PFAND",//PFANDBRIEFE
        "TBA",//TO_BE_ANNOUNCED
        "AN",//OTHER_ANTICIPATION_NOTES
        "COFO",//CERTIFICATE_OF_OBLIGATION
        "COFP",//CERTIFICATE_OF_PARTICIPATION
        "GO",//GENERAL_OBLIGATION_BONDS
        "MT",//MANDATORY_TENDER
        "RAN",//REVENUE_ANTICIPATION_NOTE
        "REV",//REVENUE_BONDS
        "SPCLA",//SPECIAL_ASSESSMENT
        "SPCLO",//SPECIAL_OBLIGATION
        "SPCLT",//SPECIAL_TAX
        "TAN",//TAX_ANTICIPATION_NOTE
        "TAXA",//TAX_ALLOCATION
        "TECP",//TAX_EXEMPT_COMMERCIAL_PAPER
        "TMCP",//TAXABLE_MUNICIPAL_CP
        "TRAN",//TAX_REVENUE_ANTICIPATION_NOTE
        "VRDN",//VARIABLE_RATE_DEMAND_NOTE
        "WAR",//WARRANT
        "MF",//MUTUAL_FUND
        "MLEG",//MULTILEG_INSTRUMENT
        "NONE",//NO_SECURITY_TYPE
        "?",//WILDCARD_ENTRY_FOR_USE_ON_SECURITY_DEFINITION_REQUEST
        "CASH",//CASH
        "FXNDF",//NON_DELIVERABLE_FORWARD
        "FXSPOT",//FX_SPOT
        "FXFWD",//FX_FORWARD
        "FXSWAP",//FX_SWAP
            }
        
        ),
    EffectiveTime(168,
        UTCTIMESTAMP
        ),
    StandInstDbType(169,
        INT
            ,new String[]{
        "0",//OTHER
        "1",//DTC_SID
        "2",//THOMSON_ALERT
        "3",//A_GLOBAL_CUSTODIAN
        "4",//ACCOUNTNET
            }
        
        ),
    StandInstDbName(170,
        STRING
        ),
    StandInstDbID(171,
        STRING
        ),
    SettlDeliveryType(172,
        INT
            ,new String[]{
        "0",//VERSUS_PAYMENT_DELIVER
        "1",//FREE_DELIVER
        "2",//TRI_PARTY
        "3",//HOLD_IN_CUSTODY
            }
        
        ),
    BidSpotRate(188,
        PRICE
        ),
    BidForwardPoints(189,
        PRICEOFFSET
        ),
    OfferSpotRate(190,
        PRICE
        ),
    OfferForwardPoints(191,
        PRICEOFFSET
        ),
    OrderQty2(192,
        QTY
        ),
    SettlDate2(193,
        LOCALMKTDATE
        ),
    LastSpotRate(194,
        PRICE
        ),
    LastForwardPoints(195,
        PRICEOFFSET
        ),
    AllocLinkID(196,
        STRING
        ),
    AllocLinkType(197,
        INT
            ,new String[]{
        "0",//FX_NETTING
        "1",//FX_SWAP
            }
        
        ),
    SecondaryOrderID(198,
        STRING
        ),
    NoIOIQualifiers(199,
        NUMINGROUP
        ),
    MaturityMonthYear(200,
        MONTHYEAR
        ),
    PutOrCall(201,
        INT
            ,new String[]{
        "0",//PUT
        "1",//CALL
            }
        
        ),
    StrikePrice(202,
        PRICE
        ),
    CoveredOrUncovered(203,
        INT
            ,new String[]{
        "0",//COVERED
        "1",//UNCOVERED
            }
        
        ),
    OptAttribute(206,
        CHAR
        ),
    SecurityExchange(207,
        EXCHANGE
        ),
    NotifyBrokerOfCredit(208,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    AllocHandlInst(209,
        INT
            ,new String[]{
        "1",//MATCH
        "2",//FORWARD
        "3",//FORWARD_AND_MATCH
            }
        
        ),
    MaxShow(210,
        QTY
        ),
    PegOffsetValue(211,
        FLOAT
        ),
    XmlDataLen(212,
        LENGTH
        ),
    XmlData(213,
        DATA
        ),
    SettlInstRefID(214,
        STRING
        ),
    NoRoutingIDs(215,
        NUMINGROUP
        ),
    RoutingType(216,
        INT
            ,new String[]{
        "1",//TARGET_FIRM
        "2",//TARGET_LIST
        "3",//BLOCK_FIRM
        "4",//BLOCK_LIST
            }
        
        ),
    RoutingID(217,
        STRING
        ),
    Spread(218,
        PRICEOFFSET
        ),
    BenchmarkCurveCurrency(220,
        CURRENCY
        ),
    BenchmarkCurveName(221,
        STRING
            ,new String[]{
        "EONIA",//EONIA
        "EUREPO",//EUREPO
        "Euribor",//EURIBOR
        "FutureSWAP",//FUTURESWAP
        "LIBID",//LIBID
        "LIBOR",//LIBOR
        "MuniAAA",//MUNIAAA
        "OTHER",//OTHER
        "Pfandbriefe",//PFANDBRIEFE
        "SONIA",//SONIA
        "SWAP",//SWAP
        "Treasury",//TREASURY
            }
        
        ),
    BenchmarkCurvePoint(222,
        STRING
        ),
    CouponRate(223,
        PERCENTAGE
        ),
    CouponPaymentDate(224,
        LOCALMKTDATE
        ),
    IssueDate(225,
        LOCALMKTDATE
        ),
    RepurchaseTerm(226,
        INT
        ),
    RepurchaseRate(227,
        PERCENTAGE
        ),
    Factor(228,
        FLOAT
        ),
    TradeOriginationDate(229,
        LOCALMKTDATE
        ),
    ExDate(230,
        LOCALMKTDATE
        ),
    ContractMultiplier(231,
        FLOAT
        ),
    NoStipulations(232,
        NUMINGROUP
        ),
    StipulationType(233,
        STRING
            ,new String[]{
        "AMT",//ALTERNATIVE_MINIMUM_TAX
        "AUTOREINV",//AUTO_REINVESTMENT_AT_RATE_OR_BETTER
        "BANKQUAL",//BANK_QUALIFIED
        "BGNCON",//BARGAIN_CONDITIONS
        "COUPON",//COUPON_RANGE
        "CURRENCY",//ISO_CURRENCY_CODE
        "CUSTOMDATE",//CUSTOM_START_END_DATE
        "GEOG",//GEOGRAPHICS_AND_RANGE
        "HAIRCUT",//VALUATION_DISCOUNT
        "INSURED",//INSURED
        "ISSUE",//YEAR_OR_YEAR_MONTH_OF_ISSUE
        "ISSUER",//ISSUERS_TICKER
        "ISSUESIZE",//ISSUE_SIZE_RANGE
        "LOOKBACK",//LOOKBACK_DAYS
        "LOT",//EXPLICIT_LOT_IDENTIFIER
        "LOTVAR",//LOT_VARIANCE
        "MAT",//MATURITY_YEAR_AND_MONTH
        "MATURITY",//MATURITY_RANGE
        "MAXSUBS",//MAXIMUM_SUBSTITUTIONS
        "MINDNOM",//MINIMUM_DENOMINATION
        "MININCR",//MINIMUM_INCREMENT
        "MINQTY",//MINIMUM_QUANTITY
        "PAYFREQ",//PAYMENT_FREQUENCY_CALENDAR
        "PIECES",//NUMBER_OF_PIECES
        "PMAX",//POOLS_MAXIMUM
        "PPL",//POOLS_PER_LOT
        "PPM",//POOLS_PER_MILLION
        "PPT",//POOLS_PER_TRADE
        "PRICE",//PRICE_RANGE
        "PRICEFREQ",//PRICING_FREQUENCY
        "PROD",//PRODUCTION_YEAR
        "PROTECT",//CALL_PROTECTION
        "PURPOSE",//PURPOSE
        "PXSOURCE",//BENCHMARK_PRICE_SOURCE
        "RATING",//RATING_SOURCE_AND_RANGE
        "REDEMPTION",//TYPE_OF_REDEMPTION
        "RESTRICTED",//RESTRICTED
        "SECTOR",//MARKET_SECTOR
        "SECTYPE",//SECURITY_TYPE_INCLUDED_OR_EXCLUDED
        "STRUCT",//STRUCTURE
        "SUBSFREQ",//SUBSTITUTIONS_FREQUENCY
        "SUBSLEFT",//SUBSTITUTIONS_LEFT
        "TEXT",//FREEFORM_TEXT
        "TRDVAR",//TRADE_VARIANCE
        "WAC",//WEIGHTED_AVERAGE_COUPON
        "WAL",//WEIGHTED_AVERAGE_LIFE_COUPON
        "WALA",//WEIGHTED_AVERAGE_LOAN_AGE
        "WAM",//WEIGHTED_AVERAGE_MATURITY
        "WHOLE",//WHOLE_POOL
        "YIELD",//YIELD_RANGE
        "AVFICO",//AVERAGE_FICO_SCORE
        "AVSIZE",//AVERAGE_LOAN_SIZE
        "MAXBAL",//MAXIMUM_LOAN_BALANCE
        "POOL",//POOL_IDENTIFIER
        "ROLLTYPE",//TYPE_OF_ROLL_TRADE
        "REFTRADE",//REFERENCE_TO_ROLLING_OR_CLOSING_TRADE
        "REFPRIN",//PRINCIPAL_OF_ROLLING_OR_CLOSING_TRADE
        "REFINT",//INTEREST_OF_ROLLING_OR_CLOSING_TRADE
        "AVAILQTY",//AVAILABLE_OFFER_QUANTITY_TO_BE_SHOWN_TO_THE_STREET
        "BROKERCREDIT",//BROKERS_SALES_CREDIT
        "INTERNALPX",//OFFER_PRICE_TO_BE_SHOWN_TO_INTERNAL_BROKERS
        "INTERNALQTY",//OFFER_QUANTITY_TO_BE_SHOWN_TO_INTERNAL_BROKERS
        "LEAVEQTY",//THE_MINIMUM_RESIDUAL_OFFER_QUANTITY
        "MAXORDQTY",//MAXIMUM_ORDER_SIZE
        "ORDRINCR",//ORDER_QUANTITY_INCREMENT
        "PRIMARY",//PRIMARY_OR_SECONDARY_MARKET_INDICATOR
        "SALESCREDITOVR",//BROKER_SALES_CREDIT_OVERRIDE
        "TRADERCREDIT",//TRADERS_CREDIT
        "DISCOUNT",//DISCOUNT_RATE
        "YTM",//YIELD_TO_MATURITY
        "ABS",//ABSOLUTE_PREPAYMENT_SPEED
        "CPP",//CONSTANT_PREPAYMENT_PENALTY
        "CPR",//CONSTANT_PREPAYMENT_RATE
        "CPY",//CONSTANT_PREPAYMENT_YIELD
        "HEP",//FINAL_CPR_OF_HOME_EQUITY_PREPAYMENT_CURVE
        "MHP",//PERCENT_OF_MANUFACTURED_HOUSING_PREPAYMENT_CURVE
        "MPR",//MONTHLY_PREPAYMENT_RATE
        "PPC",//PERCENT_OF_PROSPECTUS_PREPAYMENT_CURVE
        "PSA",//PERCENT_OF_BMA_PREPAYMENT_CURVE
        "SMM",//SINGLE_MONTHLY_MORTALITY
            }
        
        ),
    StipulationValue(234,
        STRING
        ),
    YieldType(235,
        STRING
            ,new String[]{
        "AFTERTAX",//AFTER_TAX_YIELD
        "ANNUAL",//ANNUAL_YIELD
        "ATISSUE",//YIELD_AT_ISSUE
        "AVGMATURITY",//YIELD_TO_AVG_MATURITY
        "BOOK",//BOOK_YIELD
        "CALL",//YIELD_TO_NEXT_CALL
        "CHANGE",//YIELD_CHANGE_SINCE_CLOSE
        "CLOSE",//CLOSING_YIELD
        "COMPOUND",//COMPOUND_YIELD
        "CURRENT",//CURRENT_YIELD
        "GOVTEQUIV",//GVNT_EQUIVALENT_YIELD
        "GROSS",//TRUE_GROSS_YIELD
        "INFLATION",//YIELD_WITH_INFLATION_ASSUMPTION
        "INVERSEFLOATER",//INVERSE_FLOATER_BOND_YIELD
        "LASTCLOSE",//MOST_RECENT_CLOSING_YIELD
        "LASTMONTH",//CLOSING_YIELD_MOST_RECENT_MONTH
        "LASTQUARTER",//CLOSING_YIELD_MOST_RECENT_QUARTER
        "LASTYEAR",//CLOSING_YIELD_MOST_RECENT_YEAR
        "LONGAVGLIFE",//YIELD_TO_LONGEST_AVERAGE_LIFE
        "MARK",//MARK_TO_MARKET_YIELD
        "MATURITY",//YIELD_TO_MATURITY
        "NEXTREFUND",//YIELD_TO_NEXT_REFUND
        "OPENAVG",//OPEN_AVERAGE_YIELD
        "PREVCLOSE",//PREVIOUS_CLOSE_YIELD
        "PROCEEDS",//PROCEEDS_YIELD
        "PUT",//YIELD_TO_NEXT_PUT
        "SEMIANNUAL",//SEMI_ANNUAL_YIELD
        "SHORTAVGLIFE",//YIELD_TO_SHORTEST_AVERAGE_LIFE
        "SIMPLE",//SIMPLE_YIELD
        "TAXEQUIV",//TAX_EQUIVALENT_YIELD
        "TENDER",//YIELD_TO_TENDER_DATE
        "TRUE",//TRUE_YIELD
        "VALUE1_32",//YIELD_VALUE_OF_1_32
        "WORST",//YIELD_TO_WORST
            }
        
        ),
    Yield(236,
        PERCENTAGE
        ),
    TotalTakedown(237,
        AMT
        ),
    Concession(238,
        AMT
        ),
    RepoCollateralSecurityType(239,
        STRING
        ),
    RedemptionDate(240,
        LOCALMKTDATE
        ),
    UnderlyingCouponPaymentDate(241,
        LOCALMKTDATE
        ),
    UnderlyingIssueDate(242,
        LOCALMKTDATE
        ),
    UnderlyingRepoCollateralSecurityType(243,
        STRING
        ),
    UnderlyingRepurchaseTerm(244,
        INT
        ),
    UnderlyingRepurchaseRate(245,
        PERCENTAGE
        ),
    UnderlyingFactor(246,
        FLOAT
        ),
    UnderlyingRedemptionDate(247,
        LOCALMKTDATE
        ),
    LegCouponPaymentDate(248,
        LOCALMKTDATE
        ),
    LegIssueDate(249,
        LOCALMKTDATE
        ),
    LegRepoCollateralSecurityType(250,
        STRING
        ),
    LegRepurchaseTerm(251,
        INT
        ),
    LegRepurchaseRate(252,
        PERCENTAGE
        ),
    LegFactor(253,
        FLOAT
        ),
    LegRedemptionDate(254,
        LOCALMKTDATE
        ),
    CreditRating(255,
        STRING
        ),
    UnderlyingCreditRating(256,
        STRING
        ),
    LegCreditRating(257,
        STRING
        ),
    TradedFlatSwitch(258,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    BasisFeatureDate(259,
        LOCALMKTDATE
        ),
    BasisFeaturePrice(260,
        PRICE
        ),
    MDReqID(262,
        STRING
        ),
    SubscriptionRequestType(263,
        CHAR
            ,new String[]{
        "0",//SNAPSHOT
        "1",//SNAPSHOT_PLUS_UPDATES
        "2",//DISABLE_PREVIOUS_SNAPSHOT_PLUS_UPDATE_REQUEST
            }
        
        ),
    MarketDepth(264,
        INT
        ),
    MDUpdateType(265,
        INT
            ,new String[]{
        "0",//FULL_REFRESH
        "1",//INCREMENTAL_REFRESH
            }
        
        ),
    AggregatedBook(266,
        BOOLEAN
            ,new String[]{
        "Y",//YES
        "N",//NO
            }
        
        ),
    NoMDEntryTypes(267,
        NUMINGROUP
        ),
    NoMDEntries(268,
        NUMINGROUP
        ),
    MDEntryType(269,
        CHAR
            ,new String[]{
        "0",//BID
        "1",//OFFER
        "2",//TRADE
        "3",//INDEX_VALUE
        "4",//OPENING_PRICE
        "5",//CLOSING_PRICE
        "6",//SETTLEMENT_PRICE
        "7",//TRADING_SESSION_HIGH_PRICE
        "8",//TRADING_SESSION_LOW_PRICE
        "9",//TRADING_SESSION_VWAP_PRICE
        "A",//IMBALANCE
        "B",//TRADE_VOLUME
        "C",//OPEN_INTEREST
        "D",//COMPOSITE_UNDERLYING_PRICE
        "E",//SIMULATED_SELL_PRICE
        "F",//SIMULATED_BUY_PRICE
        "G",//MARGIN_RATE
        "H",//MID_PRICE
        "J",//EMPTY_BOOK
        "K",//SETTLE_HIGH_PRICE
        "L",//SETTLE_LOW_PRICE
        "M",//PRIOR_SETTLE_PRICE
        "N",//SESSION_HIGH_BID
        "O",//SESSION_LOW_OFFER
        "P",//EARLY_PRICES
        "Q",//AUCTION_CLEARING_PRICE
        "S",//SWAP_VALUE_FACTOR
        "R",//DAILY_VALUE_ADJUSTMENT_FOR_LONG_POSITIONS
        "T",//CUMULATIVE_VALUE_ADJUSTMENT_FOR_LONG_POSITIONS
        "U",//DAILY_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONS
        "V",//CUMULATIVE_VALUE_ADJUSTMENT_FOR_SHORT_POSITIONS
        "Y",//RECOVERY_RATE
        "Z",//RECOVERY_RATE_FOR_LONG
        "a",//RECOVERY_RATE_FOR_SHORT
        "W",//FIXING_PRICE
        "X",//CASH_RATE
            }
        
        ),
    MDEntryPx(270,
        PRICE
        ),
    MDEntrySize(271,
        QTY
        ),
    MDEntryDate(272,
        UTCDATEONLY
        ),
    MDEntryTime(273,
        UTCTIMEONLY
        ),
    TickDirection(274,
        CHAR
            ,new String[]{
        "0",//PLUS_TICK
        "1",//ZERO_PLUS_TICK
        "2",//MINUS_TICK
        "3",//ZERO_MINUS_TICK
            }
        
        ),
    MDMkt(275,
        EXCHANGE
        ),
    QuoteCondition(276,
        MULTIPLESTRINGVALUE
            ,new String[]{
        "A",//OPEN_ACTIVE
        "B",//CLOSED_INACTIVE
        "C",//EXCHANGE_BEST
        "D",//CONSOLIDATED_BEST
        "E",//LOCKED
        "F",//CROSSED
        "G",//DEPTH
        "H",//FAST_TRADING
        "I",//NON_FIRM
        "L",//MANUAL_SLOW_QUOTE
        "J",//OUTRIGHT_PRICE
        "K",//IMPLIED_PRICE
        "M",//DEPTH_ON_OFFER
        "N",//DEPTH_ON_BID
        "O",//CLOSING
        "P",//NEWS_DISSEMINATION
        "Q",//TRADING_RANGE
        "R",//ORDER_INFLUX
        "S",//DUE_TO_RELATED
        "T",//NEWS_PENDING
        "U",//ADDITIONAL_INFO
        "V",//ADDITIONAL_INFO_DUE_TO_RELATED
        "W",//RESUME
        "X",//VIEW_OF_COMMON
        "Y",//VOLUME_ALERT
        "Z",//ORDER_IMBALANCE
        "a",//EQUIPMENT_CHANGEOVER
        "b",//NO_OPEN
        "c",//REGULAR_ETH
        "d",//AUTOMATIC_EXECUTION
        "e",//AUTOMATIC_EXECUTION_ETH
        "f ",//FAST_MARKET_ETH
        "g",//INACTIVE_ETH
        "h",//ROTATION
        "i",//ROTATION_ETH
        "j",//HALT
        "k",//HALT_ETH
        "l",//DUE_TO_NEWS_DISSEMINATION
        "m",//DUE_TO_NEWS_PENDING
        "n",//TRADING_RESUME
        "o",//OUT_OF_SEQUENCE
        "p",//BID_SPECIALIST
        "q",//OFFER_SPECIALIST
        "r",//BID_OFFER_SPECIALIST
        "s",//END_OF_DAY_SAM
        "t",//FORBIDDEN_SAM
        "u",//FROZEN_SAM
        "v",//PREOPENING_SAM
        "w",//OPENING_SAM
        "x",//OPEN_SAM
        "y",//SURVEILLANCE_SAM
        "z",//SUSPENDED_SAM
        "0",//RESERVED_SAM
        "1",//NO_ACTIVE_SAM
        "2",//RESTRICTED
        "3",//REST_OF_BOOK_VWAP
        "4",//BETTER_PRICES_IN_CONDITIONAL_ORDERS
        "5",//MEDIAN_PRICE
        "6",//FULL_CURVE
        "7",//FLAT_CURVE
            }
        
        ),
    TradeCondition(277,
        MULTIPLESTRINGVALUE
            ,new String[]{
        "A",//CASH
        "B",//AVERAGE_PRICE_TRADE
        "C",//CASH_TRADE
        "D",//NEXT_DAY
        "E",//OPENING_REOPENING_TRADE_DETAIL
        "F",//INTRADAY_TRADE_DETAIL
        "G",//RULE_127_TRADE
        "H",//RULE_155_TRADE
        "I",//SOLD_LAST
        "J",//NEXT_DAY_TRADE
        "K",//OPENED
        "L",//SELLER
        "M",//SOLD
        "N",//STOPPED_STOCK
        "P",//IMBALANCE_MORE_BUYERS
        "Q",//IMBALANCE_MORE_SELLERS
        "R",//OPENING_PRICE
        "S",//BARGAIN_CONDITION
        "T",//CONVERTED_PRICE_INDICATOR
        "U",//EXCHANGE_LAST
        "V",//FINAL_PRICE_OF_SESSION
        "W",//EX_PIT
        "X",//CROSSED_X
        "Y",//TRADES_RESULTING_FROM_MANUAL_SLOW_QUOTE
        "Z",//TRADES_RESULTING_FROM_INTERMARKET_SWEEP
        "a",//VOLUME_ONLY
        "b",//DIRECT_PLUS
        "c",//ACQUISITION
        "d",//BUNCHED
        "e",//DISTRIBUTION
        "f",//BUNCHED_SALE
        "g",//SPLIT_TRADE
        "h",//CANCEL_STOPPED
        "i",//CANCEL_ETH
        "j",//CANCEL_STOPPED_ETH
        "k",//OUT_OF_SEQUENCE_ETH
        "l",//CANCEL_LAST_ETH
        "m",//SOLD_LAST_SALE_ETH
        "n",//CANCEL_LAST
        "o",//SOLD_LAST_SALE
        "p",//CANCEL_OPEN
        "q",//CANCEL_OPEN_ETH
        "r",//OPENED_SALE_ETH
        "s",//CANCEL_ONLY
        "t",//CANCEL_ONLY_ETH
        "u",//LATE_OPEN_ETH
        "v",//AUTO_EXECUTION_ETH
        "w",//REOPEN
        "x",//REOPEN_ETH
        "y",//ADJUSTED
        "z",//ADJUSTED_ETH
        "AA",//SPREAD
        "AB",//SPREAD_ETH
        "AC",//STRADDLE
        "AD",//STRADDLE_ETH
        "AE",//STOPPED
        "AF",//STOPPED_ETH
        "AG",//REGULAR_ETH
        "AH",//COMBO
        "AI",//COMBO_ETH
        "AJ",//OFFICIAL_CLOSING_PRICE
        "AK",//PRIOR_REFERENCE_PRICE
        "0",//CANCEL
        "AL",//STOPPED_SOLD_LAST
        "AM",//STOPPED_OUT_OF_SEQUENCE
        "AN",//OFFICAL_CLOSING_PRICE
        "AO",//CROSSED_AO
        "AP",//FAST_MARKET
        "AQ",//AUTOMATIC_EXECUTION
        "AR",//FORM_T
        "AS",//BASKET_INDEX
        "AT",//BURST_BASKET
        "AV",//OUTSIDE_SPREAD
        "1",//IMPLIED_TRADE
        "2",//MARKETPLACE_ENTERED_TRADE
        "3",//MULT_ASSET_CLASS_MULTILEG_TRADE
        "4",//MULTILEG_TO_MULTILEG_TRADE
            }
        
        ),
    MDEntryID(278,
        STRING
        ),
    MDUpdateAction(279,
        CHAR
            ,new String[]{
        "0",//NEW
        "1",//CHANGE
        "2",//DELETE
        "3",//DELETE_THRU
        "4",//DELETE_FROM
        "5",//OVERLAY
            }
        
        ),
    MDEntryRefID(280,
        STRING
        ),
    MDReqRejReason(281,
        CHAR
            ,new String[]{
        "0",//UNKNOWN_SYMBOL
        "1",//DUPLICATE_MDREQID
        "2",//INSUFFICIENT_BANDWIDTH
        "3",//INSUFFICIENT_PERMISSIONS
        "4",//UNSUPPORTED_SUBSCRIPTIONREQUESTTYPE
        "5",//UNSUPPORTED_MARKETDEPTH
        "6",//UNSUPPORTED_MDUPDATETYPE
        "7",//UNSUPPORTED_AGGREGATEDBOOK
        "8",//UNSUPPORTED_MDENTRYTYPE
        "9",//UNSUPPORTED_TRADINGSESSIONID
        "A",//UNSUPPORTED_SCOPE
        "B",//UNSUPPORTED_OPENCLOSESETTLEFLAG
        "C",//UNSUPPORTED_MDIMPLICITDELETE
        "D",//INSUFFICIENT_CREDIT
            }
        
        ),
    MDEntryOriginator(282,
        STRING
        ),
    LocationID(283,
        STRING
        ),
    DeskID(284,
        STRING
        ),
    DeleteReason(285,
        CHAR
            ,new String[]{
        "0",//CANCELLATION
        "1",//ERROR
            }
        
        ),
    OpenCloseSettlFlag(286,
        MULTIPLECHARVALUE
            ,new String[]{
        "0",//DAILY_OPEN
        "1",//SESSION_OPEN
        "2",//DELIVERY_SETTLEMENT_ENTRY
        "3",//EXPECTED_ENTRY
        "4",//ENTRY_FROM_PREVIOUS_BUSINESS_DAY
        "5",//THEORETICAL_PRICE_VALUE
            }
        
        ),
    SellerDays(287,
        INT
        ),
    MDEntryBuyer(288,
        STRING
        ),
    MDEntrySeller(289,
        STRING
        ),
    MDEntryPositionNo(290,
        INT
        ),
    FinancialStatus(291,
        MULTIPLECHARVALUE
            ,new String[]{
        "1",//BANKRUPT
        "2",//PENDING_DELISTING
        "3",//RESTRICTED
            }
        
        ),
    CorporateAction(292,
        MULTIPLECHARVALUE
            ,new String[]{
        "A",//EX_DIVIDEND
        "B",//EX_DISTRIBUTION
        "C",//EX_RIGHTS
        "D",//NEW
        "E",//EX_INTEREST
        "F",//CASH_DIVIDEND
        "G",//STOCK_DIVIDEND
        "H",//NON_INTEGER_STOCK_SPLIT
        "I",//REVERSE_STOCK_SPLIT
        "J",//STANDARD_INTEGER_STOCK_SPLIT
        "K",//POSITION_CONSOLIDATION
        "L",//LIQUIDATION_REORGANIZATION
        "M",//MERGER_REORGANIZATION
        "N",//RIGHTS_OFFERING
        "O",//SHAREHOLDER_MEETING
        "P",//SPINOFF
        "Q",//TENDER_OFFER
        "R",//WARRANT
        "S",//SPECIAL_ACTION
        "T",//SYMBOL_CONVERSION
        "U",//CUSIP
        "V",//LEAP_ROLLOVER
        "W",//SUCCESSION_EVENT
            }
        
        ),
    DefBidSize(293,
        QTY
        ),
    DefOfferSize(294,
        QTY
        ),
    NoQuoteEntries(295,
        NUMINGROUP
        ),
    NoQuoteSets(296,
        NUMINGROUP
        ),
    QuoteStatus(297,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "1",//CANCEL_FOR_SYMBOL
        "2",//CANCELED_FOR_SECURITY_TYPE
        "3",//CANCELED_FOR_UNDERLYING
        "4",//CANCELED_ALL
        "5",//REJECTED
        "6",//REMOVED_FROM_MARKET
        "7",//EXPIRED
        "8",//QUERY
        "9",//QUOTE_NOT_FOUND
        "10",//PENDING
        "11",//PASS
        "12",//LOCKED_MARKET_WARNING
        "13",//CROSS_MARKET_WARNING
        "14",//CANCELED_DUE_TO_LOCK_MARKET
        "15",//CANCELED_DUE_TO_CROSS_MARKET
        "16",//ACTIVE
        "17",//CANCELED
        "18",//UNSOLICITED_QUOTE_REPLENISHMENT
        "19",//PENDING_END_TRADE
        "20",//TOO_LATE_TO_END
            }
        
        ),
    QuoteCancelType(298,
        INT
            ,new String[]{
        "1",//CANCEL_FOR_ONE_OR_MORE_SECURITIES
        "2",//CANCEL_FOR_SECURITY_TYPE
        "3",//CANCEL_FOR_UNDERLYING_SECURITY
        "4",//CANCEL_ALL_QUOTES
        "5",//CANCEL_QUOTE_SPECIFIED_IN_QUOTEID
        "6",//CANCEL_BY_QUOTETYPE
        "7",//CANCEL_FOR_SECURITY_ISSUER
        "8",//CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    QuoteEntryID(299,
        STRING
        ),
    QuoteRejectReason(300,
        INT
            ,new String[]{
        "1",//UNKNOWN_SYMBOL
        "2",//EXCHANGE
        "3",//QUOTE_REQUEST_EXCEEDS_LIMIT
        "4",//TOO_LATE_TO_ENTER
        "5",//UNKNOWN_QUOTE
        "6",//DUPLICATE_QUOTE
        "7",//INVALID_BID_ASK_SPREAD
        "8",//INVALID_PRICE
        "9",//NOT_AUTHORIZED_TO_QUOTE_SECURITY
        "10",//PRICE_EXCEEDS_CURRENT_PRICE_BAND
        "11",//QUOTE_LOCKED
        "99",//OTHER
        "12",//INVALID_OR_UNKNOWN_SECURITY_ISSUER
        "13",//INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    QuoteResponseLevel(301,
        INT
            ,new String[]{
        "0",//NO_ACKNOWLEDGEMENT
        "1",//ACKNOWLEDGE_ONLY_NEGATIVE_OR_ERRONEOUS_QUOTES
        "2",//ACKNOWLEDGE_EACH_QUOTE_MESSAGE
        "3",//SUMMARY_ACKNOWLEDGEMENT
            }
        
        ),
    QuoteSetID(302,
        STRING
        ),
    QuoteRequestType(303,
        INT
            ,new String[]{
        "1",//MANUAL
        "2",//AUTOMATIC
            }
        
        ),
    TotNoQuoteEntries(304,
        INT
        ),
    UnderlyingSecurityIDSource(305,
        STRING
        ),
    UnderlyingIssuer(306,
        STRING
        ),
    UnderlyingSecurityDesc(307,
        STRING
        ),
    UnderlyingSecurityExchange(308,
        EXCHANGE
        ),
    UnderlyingSecurityID(309,
        STRING
        ),
    UnderlyingSecurityType(310,
        STRING
        ),
    UnderlyingSymbol(311,
        STRING
        ),
    UnderlyingSymbolSfx(312,
        STRING
        ),
    UnderlyingMaturityMonthYear(313,
        MONTHYEAR
        ),
    UnderlyingPutOrCall(315,
        INT
        ),
    UnderlyingStrikePrice(316,
        PRICE
        ),
    UnderlyingOptAttribute(317,
        CHAR
        ),
    UnderlyingCurrency(318,
        CURRENCY
        ),
    SecurityReqID(320,
        STRING
        ),
    SecurityRequestType(321,
        INT
            ,new String[]{
        "0",//REQUEST_SECURITY_IDENTITY_AND_SPECIFICATIONS
        "1",//REQUEST_SECURITY_IDENTITY_FOR_THE_SPECIFICATIONS_PROVIDED
        "2",//REQUEST_LIST_SECURITY_TYPES
        "3",//REQUEST_LIST_SECURITIES
        "4",//SYMBOL
        "5",//SECURITYTYPE_AND_OR_CFICODE
        "6",//PRODUCT
        "7",//TRADINGSESSIONID
        "8",//ALL_SECURITIES
        "9",//MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID
            }
        
        ),
    SecurityResponseID(322,
        STRING
        ),
    SecurityResponseType(323,
        INT
            ,new String[]{
        "1",//ACCEPT_SECURITY_PROPOSAL_AS_IS
        "2",//ACCEPT_SECURITY_PROPOSAL_WITH_REVISIONS_AS_INDICATED_IN_THE_MESSAGE
        "3",//LIST_OF_SECURITY_TYPES_RETURNED_PER_REQUEST
        "4",//LIST_OF_SECURITIES_RETURNED_PER_REQUEST
        "5",//REJECT_SECURITY_PROPOSAL
        "6",//CANNOT_MATCH_SELECTION_CRITERIA
            }
        
        ),
    SecurityStatusReqID(324,
        STRING
        ),
    UnsolicitedIndicator(325,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    SecurityTradingStatus(326,
        INT
            ,new String[]{
        "1",//OPENING_DELAY
        "2",//TRADING_HALT
        "3",//RESUME
        "4",//NO_OPEN
        "5",//PRICE_INDICATION
        "6",//TRADING_RANGE_INDICATION
        "7",//MARKET_IMBALANCE_BUY
        "8",//MARKET_IMBALANCE_SELL
        "9",//MARKET_ON_CLOSE_IMBALANCE_BUY
        "10",//MARKET_ON_CLOSE_IMBALANCE_SELL
        "12",//NO_MARKET_IMBALANCE
        "13",//NO_MARKET_ON_CLOSE_IMBALANCE
        "14",//ITS_PRE_OPENING
        "15",//NEW_PRICE_INDICATION
        "16",//TRADE_DISSEMINATION_TIME
        "17",//READY_TO_TRADE
        "18",//NOT_AVAILABLE_FOR_TRADING
        "19",//NOT_TRADED_ON_THIS_MARKET
        "20",//UNKNOWN_OR_INVALID
        "21",//PRE_OPEN
        "22",//OPENING_ROTATION
        "23",//FAST_MARKET
        "24",//PRE_CROSS
        "25",//CROSS
        "26",//POST_CLOSE
            }
        
        ),
    HaltReasonInt(327,
        INT
            ,new String[]{
        "0",//NEWS_DISSEMINATION
        "1",//ORDER_INFLUX
        "2",//ORDER_IMBALANCE
        "3",//ADDITIONAL_INFORMATION
        "4",//NEWS_PENDING
        "5",//EQUIPMENT_CHANGEOVER
            }
        
        ),
    InViewOfCommon(328,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    DueToRelated(329,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    BuyVolume(330,
        QTY
        ),
    SellVolume(331,
        QTY
        ),
    HighPx(332,
        PRICE
        ),
    LowPx(333,
        PRICE
        ),
    Adjustment(334,
        INT
            ,new String[]{
        "1",//CANCEL
        "2",//ERROR
        "3",//CORRECTION
            }
        
        ),
    TradSesReqID(335,
        STRING
        ),
    TradingSessionID(336,
        STRING
            ,new String[]{
        "1",//DAY
        "2",//HALFDAY
        "3",//MORNING
        "4",//AFTERNOON
        "5",//EVENING
        "6",//AFTER_HOURS
            }
        
        ),
    ContraTrader(337,
        STRING
        ),
    TradSesMethod(338,
        INT
            ,new String[]{
        "1",//ELECTRONIC
        "2",//OPEN_OUTCRY
        "3",//TWO_PARTY
            }
        
        ),
    TradSesMode(339,
        INT
            ,new String[]{
        "1",//TESTING
        "2",//SIMULATED
        "3",//PRODUCTION
            }
        
        ),
    TradSesStatus(340,
        INT
            ,new String[]{
        "0",//UNKNOWN
        "1",//HALTED
        "2",//OPEN
        "3",//CLOSED
        "4",//PRE_OPEN
        "5",//PRE_CLOSE
        "6",//REQUEST_REJECTED
            }
        
        ),
    TradSesStartTime(341,
        UTCTIMESTAMP
        ),
    TradSesOpenTime(342,
        UTCTIMESTAMP
        ),
    TradSesPreCloseTime(343,
        UTCTIMESTAMP
        ),
    TradSesCloseTime(344,
        UTCTIMESTAMP
        ),
    TradSesEndTime(345,
        UTCTIMESTAMP
        ),
    NumberOfOrders(346,
        INT
        ),
    MessageEncoding(347,
        STRING
        ),
    EncodedIssuerLen(348,
        LENGTH
        ),
    EncodedIssuer(349,
        DATA
        ),
    EncodedSecurityDescLen(350,
        LENGTH
        ),
    EncodedSecurityDesc(351,
        DATA
        ),
    EncodedListExecInstLen(352,
        LENGTH
        ),
    EncodedListExecInst(353,
        DATA
        ),
    EncodedTextLen(354,
        LENGTH
        ),
    EncodedText(355,
        DATA
        ),
    EncodedSubjectLen(356,
        LENGTH
        ),
    EncodedSubject(357,
        DATA
        ),
    EncodedHeadlineLen(358,
        LENGTH
        ),
    EncodedHeadline(359,
        DATA
        ),
    EncodedAllocTextLen(360,
        LENGTH
        ),
    EncodedAllocText(361,
        DATA
        ),
    EncodedUnderlyingIssuerLen(362,
        LENGTH
        ),
    EncodedUnderlyingIssuer(363,
        DATA
        ),
    EncodedUnderlyingSecurityDescLen(364,
        LENGTH
        ),
    EncodedUnderlyingSecurityDesc(365,
        DATA
        ),
    AllocPrice(366,
        PRICE
        ),
    QuoteSetValidUntilTime(367,
        UTCTIMESTAMP
        ),
    QuoteEntryRejectReason(368,
        INT
        ),
    LastMsgSeqNumProcessed(369,
        SEQNUM
        ),
    RefTagID(371,
        INT
        ),
    RefMsgType(372,
        STRING
        ),
    SessionRejectReason(373,
        INT
            ,new String[]{
        "0",//INVALID_TAG_NUMBER
        "1",//REQUIRED_TAG_MISSING
        "2",//TAG_NOT_DEFINED_FOR_THIS_MESSAGE_TYPE
        "3",//UNDEFINED_TAG
        "4",//TAG_SPECIFIED_WITHOUT_A_VALUE
        "5",//VALUE_IS_INCORRECT
        "6",//INCORRECT_DATA_FORMAT_FOR_VALUE
        "7",//DECRYPTION_PROBLEM
        "8",//SIGNATURE_PROBLEM
        "9",//COMPID_PROBLEM
        "10",//SENDINGTIME_ACCURACY_PROBLEM
        "11",//INVALID_MSGTYPE
        "12",//XML_VALIDATION_ERROR
        "13",//TAG_APPEARS_MORE_THAN_ONCE
        "14",//TAG_SPECIFIED_OUT_OF_REQUIRED_ORDER
        "15",//REPEATING_GROUP_FIELDS_OUT_OF_ORDER
        "16",//INCORRECT_NUMINGROUP_COUNT_FOR_REPEATING_GROUP
        "17",//NON_DATA_VALUE_INCLUDES_FIELD_DELIMITER
        "18",//INVALID_UNSUPPORTED_APPLICATION_VERSION
        "99",//OTHER
            }
        
        ),
    BidRequestTransType(374,
        CHAR
            ,new String[]{
        "C",//CANCEL
        "N",//NO
            }
        
        ),
    ContraBroker(375,
        STRING
        ),
    ComplianceID(376,
        STRING
        ),
    SolicitedFlag(377,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    ExecRestatementReason(378,
        INT
            ,new String[]{
        "0",//GT_CORPORATE_ACTION
        "1",//GT_RENEWAL
        "2",//VERBAL_CHANGE
        "3",//REPRICING_OF_ORDER
        "4",//BROKER_OPTION
        "5",//PARTIAL_DECLINE_OF_ORDERQTY
        "6",//CANCEL_ON_TRADING_HALT
        "7",//CANCEL_ON_SYSTEM_FAILURE
        "8",//MARKET
        "9",//CANCELED_NOT_BEST
        "10",//WAREHOUSE_RECAP
        "11",//PEG_REFRESH
        "99",//OTHER
            }
        
        ),
    BusinessRejectRefID(379,
        STRING
        ),
    BusinessRejectReason(380,
        INT
            ,new String[]{
        "0",//OTHER
        "1",//UNKNOWN_ID
        "2",//UNKNOWN_SECURITY
        "3",//UNSUPPORTED_MESSAGE_TYPE
        "4",//APPLICATION_NOT_AVAILABLE
        "5",//CONDITIONALLY_REQUIRED_FIELD_MISSING
        "6",//NOT_AUTHORIZED
        "7",//DELIVERTO_FIRM_NOT_AVAILABLE_AT_THIS_TIME
        "18",//INVALID_PRICE_INCREMENT
            }
        
        ),
    GrossTradeAmt(381,
        AMT
        ),
    NoContraBrokers(382,
        NUMINGROUP
        ),
    MaxMessageSize(383,
        LENGTH
        ),
    NoMsgTypes(384,
        NUMINGROUP
        ),
    MsgDirection(385,
        CHAR
            ,new String[]{
        "R",//RECEIVE
        "S",//SEND
            }
        
        ),
    NoTradingSessions(386,
        NUMINGROUP
        ),
    TotalVolumeTraded(387,
        QTY
        ),
    DiscretionInst(388,
        CHAR
            ,new String[]{
        "0",//RELATED_TO_DISPLAYED_PRICE
        "1",//RELATED_TO_MARKET_PRICE
        "2",//RELATED_TO_PRIMARY_PRICE
        "3",//RELATED_TO_LOCAL_PRIMARY_PRICE
        "4",//RELATED_TO_MIDPOINT_PRICE
        "5",//RELATED_TO_LAST_TRADE_PRICE
        "6",//RELATED_TO_VWAP
        "7",//AVERAGE_PRICE_GUARANTEE
            }
        
        ),
    DiscretionOffsetValue(389,
        FLOAT
        ),
    BidID(390,
        STRING
        ),
    ClientBidID(391,
        STRING
        ),
    ListName(392,
        STRING
        ),
    TotNoRelatedSym(393,
        INT
        ),
    BidType(394,
        INT
            ,new String[]{
        "1",//NON_DISCLOSED_STYLE
        "2",//DISCLOSED_SYTLE
        "3",//NO_BIDDING_PROCESS
            }
        
        ),
    NumTickets(395,
        INT
        ),
    SideValue1(396,
        AMT
        ),
    SideValue2(397,
        AMT
        ),
    NoBidDescriptors(398,
        NUMINGROUP
        ),
    BidDescriptorType(399,
        INT
            ,new String[]{
        "1",//SECTOR
        "2",//COUNTRY
        "3",//INDEX
            }
        
        ),
    BidDescriptor(400,
        STRING
        ),
    SideValueInd(401,
        INT
            ,new String[]{
        "1",//SIDE_VALUE_1
        "2",//SIDE_VALUE_2
            }
        
        ),
    LiquidityPctLow(402,
        PERCENTAGE
        ),
    LiquidityPctHigh(403,
        PERCENTAGE
        ),
    LiquidityValue(404,
        AMT
        ),
    EFPTrackingError(405,
        PERCENTAGE
        ),
    FairValue(406,
        AMT
        ),
    OutsideIndexPct(407,
        PERCENTAGE
        ),
    ValueOfFutures(408,
        AMT
        ),
    LiquidityIndType(409,
        INT
            ,new String[]{
        "1",//5_DAY_MOVING_AVERAGE
        "2",//20_DAY_MOVING_AVERAGE
        "3",//NORMAL_MARKET_SIZE
        "4",//OTHER
            }
        
        ),
    WtAverageLiquidity(410,
        PERCENTAGE
        ),
    ExchangeForPhysical(411,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    OutMainCntryUIndex(412,
        AMT
        ),
    CrossPercent(413,
        PERCENTAGE
        ),
    ProgRptReqs(414,
        INT
            ,new String[]{
        "1",//BUY_SIDE_EXPLICITLY_REQUESTS_STATUS_USING_STATUE_REQUEST
        "2",//SELL_SIDE_PERIODICALLY_SENDS_STATUS_USING_LIST_STATUS_PERIOD_OPTIONALLY_SPECIFIED_IN_PROGRESSPERIOD
        "3",//REAL_TIME_EXECUTION_REPORTS
            }
        
        ),
    ProgPeriodInterval(415,
        INT
        ),
    IncTaxInd(416,
        INT
            ,new String[]{
        "1",//NET
        "2",//GROSS
            }
        
        ),
    NumBidders(417,
        INT
        ),
    BidTradeType(418,
        CHAR
            ,new String[]{
        "A",//AGENCY
        "G",//VWAP_GUARANTEE
        "J",//GUARANTEED_CLOSE
        "R",//RISK_TRADE
            }
        
        ),
    BasisPxType(419,
        CHAR
            ,new String[]{
        "2",//CLOSING_PRICE_AT_MORNING_SESSION
        "3",//CLOSING_PRICE
        "4",//CURRENT_PRICE
        "5",//SQ
        "6",//VWAP_THROUGH_A_DAY
        "7",//VWAP_THROUGH_A_MORNING_SESSION
        "8",//VWAP_THROUGH_AN_AFTERNOON_SESSION
        "9",//VWAP_THROUGH_A_DAY_EXCEPT_YORI
        "A",//VWAP_THROUGH_A_MORNING_SESSION_EXCEPT_YORI
        "B",//VWAP_THROUGH_AN_AFTERNOON_SESSION_EXCEPT_YORI
        "C",//STRIKE
        "D",//OPEN
        "Z",//OTHERS
            }
        
        ),
    NoBidComponents(420,
        NUMINGROUP
        ),
    Country(421,
        COUNTRY
        ),
    TotNoStrikes(422,
        INT
        ),
    PriceType(423,
        INT
            ,new String[]{
        "1",//PERCENTAGE
        "2",//PER_UNIT
        "3",//FIXED_AMOUNT
        "4",//DISCOUNT
        "5",//PREMIUM
        "6",//SPREAD
        "7",//TED_PRICE
        "8",//TED_YIELD
        "9",//YIELD
        "10",//FIXED_CABINET_TRADE_PRICE
        "11",//VARIABLE_CABINET_TRADE_PRICE
        "13",//PRODUCT_TICKS_IN_HALFS
        "14",//PRODUCT_TICKS_IN_FOURTHS
        "15",//PRODUCT_TICKS_IN_EIGHTS
        "16",//PRODUCT_TICKS_IN_SIXTEENTHS
        "17",//PRODUCT_TICKS_IN_THIRTY_SECONDS
        "18",//PRODUCT_TICKS_IN_SIXTY_FORTHS
        "19",//PRODUCT_TICKS_IN_ONE_TWENTY_EIGHTS
            }
        
        ),
    DayOrderQty(424,
        QTY
        ),
    DayCumQty(425,
        QTY
        ),
    DayAvgPx(426,
        PRICE
        ),
    GTBookingInst(427,
        INT
            ,new String[]{
        "0",//BOOK_OUT_ALL_TRADES_ON_DAY_OF_EXECUTION
        "1",//ACCUMULATE_EXECTUIONS_UNTIL_FORDER_IS_FILLED_OR_EXPIRES
        "2",//ACCUMULATE_UNTIL_VERBALLLY_NOTIFIED_OTHERWISE
            }
        
        ),
    NoStrikes(428,
        NUMINGROUP
        ),
    ListStatusType(429,
        INT
            ,new String[]{
        "1",//ACK
        "2",//RESPONSE
        "3",//TIMED
        "4",//EXEC_STARTED
        "5",//ALL_DONE
        "6",//ALERT
            }
        
        ),
    NetGrossInd(430,
        INT
            ,new String[]{
        "1",//NET
        "2",//GROSS
            }
        
        ),
    ListOrderStatus(431,
        INT
            ,new String[]{
        "1",//IN_BIDDING_PROCESS
        "2",//RECEIVED_FOR_EXECUTION
        "3",//EXECUTING
        "4",//CANCELLING
        "5",//ALERT
        "6",//ALL_DONE
        "7",//REJECT
            }
        
        ),
    ExpireDate(432,
        LOCALMKTDATE
        ),
    ListExecInstType(433,
        CHAR
            ,new String[]{
        "1",//IMMEDIATE
        "2",//WAIT_FOR_EXECUT_INSTRUCTION
        "3",//EXCHANGE_SWITCH_CIV_ORDER_3
        "4",//EXCHANGE_SWITCH_CIV_ORDER_4
        "5",//EXCHANGE_SWITCH_CIV_ORDER_5
            }
        
        ),
    CxlRejResponseTo(434,
        CHAR
            ,new String[]{
        "1",//ORDER_CANCEL_REQUEST
        "2",//ORDER_CANCEL_REPLACE_REQUEST
            }
        
        ),
    UnderlyingCouponRate(435,
        PERCENTAGE
        ),
    UnderlyingContractMultiplier(436,
        FLOAT
        ),
    ContraTradeQty(437,
        QTY
        ),
    ContraTradeTime(438,
        UTCTIMESTAMP
        ),
    LiquidityNumSecurities(441,
        INT
        ),
    MultiLegReportingType(442,
        CHAR
            ,new String[]{
        "1",//SINGLE_SECURITY
        "2",//INDIVIDUAL_LEG_OF_A_MULTI_LEG_SECURITY
        "3",//MULTI_LEG_SECURITY
            }
        
        ),
    StrikeTime(443,
        UTCTIMESTAMP
        ),
    ListStatusText(444,
        STRING
        ),
    EncodedListStatusTextLen(445,
        LENGTH
        ),
    EncodedListStatusText(446,
        DATA
        ),
    PartyIDSource(447,
        CHAR
            ,new String[]{
        "6",//UK_NATIONAL_INSURANCE_OR_PENSION_NUMBER
        "7",//US_SOCIAL_SECURITY_NUMBER
        "8",//US_EMPLOYER_OR_TAX_ID_NUMBER
        "9",//AUSTRALIAN_BUSINESS_NUMBER
        "A",//AUSTRALIAN_TAX_FILE_NUMBER
        "1",//KOREAN_INVESTOR_ID
        "2",//TAIWANESE_QUALIFIED_FOREIGN_INVESTOR_ID_QFII_FID
        "3",//TAIWANESE_TRADING_ACCT
        "4",//MALAYSIAN_CENTRAL_DEPOSITORY
        "5",//CHINESE_INVESTOR_ID
        "I",//DIRECTED_BROKER_THREE_CHARACTER_ACRONYM_AS_DEFINED_IN_ISITC_ETC_BEST_PRACTICE_GUIDELINES_DOCUMENT
        "B",//BIC
        "C",//GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER
        "D",//PROPRIETARY
        "E",//ISO_COUNTRY_CODE
        "F",//SETTLEMENT_ENTITY_LOCATION
        "G",//MIC
        "H",//CSD_PARTICIPANT_MEMBER_CODE
            }
        
        ),
    PartyID(448,
        STRING
        ),
    NetChgPrevDay(451,
        PRICEOFFSET
        ),
    PartyRole(452,
        INT
            ,new String[]{
        "1",//EXECUTING_FIRM
        "2",//BROKER_OF_CREDIT
        "3",//CLIENT_ID
        "4",//CLEARING_FIRM
        "5",//INVESTOR_ID
        "6",//INTRODUCING_FIRM
        "7",//ENTERING_FIRM
        "8",//LOCATE
        "9",//FUND_MANAGER_CLIENT_ID
        "10",//SETTLEMENT_LOCATION
        "11",//ORDER_ORIGINATION_TRADER
        "12",//EXECUTING_TRADER
        "13",//ORDER_ORIGINATION_FIRM
        "14",//GIVEUP_CLEARING_FIRM
        "15",//CORRESPONDANT_CLEARING_FIRM
        "16",//EXECUTING_SYSTEM
        "17",//CONTRA_FIRM
        "18",//CONTRA_CLEARING_FIRM
        "19",//SPONSORING_FIRM
        "20",//UNDERLYING_CONTRA_FIRM
        "21",//CLEARING_ORGANIZATION
        "22",//EXCHANGE
        "24",//CUSTOMER_ACCOUNT
        "25",//CORRESPONDENT_CLEARING_ORGANIZATION
        "26",//CORRESPONDENT_BROKER
        "27",//BUYER_SELLER
        "28",//CUSTODIAN
        "29",//INTERMEDIARY
        "30",//AGENT
        "31",//SUB_CUSTODIAN
        "32",//BENEFICIARY
        "33",//INTERESTED_PARTY
        "34",//REGULATORY_BODY
        "35",//LIQUIDITY_PROVIDER
        "36",//ENTERING_TRADER
        "37",//CONTRA_TRADER
        "38",//POSITION_ACCOUNT
        "39",//CONTRA_INVESTOR_ID
        "40",//TRANSFER_TO_FIRM
        "41",//CONTRA_POSITION_ACCOUNT
        "42",//CONTRA_EXCHANGE
        "43",//INTERNAL_CARRY_ACCOUNT
        "44",//ORDER_ENTRY_OPERATOR_ID
        "45",//SECONDARY_ACCOUNT_NUMBER
        "46",//FOREIGN_FIRM
        "47",//THIRD_PARTY_ALLOCATION_FIRM
        "48",//CLAIMING_ACCOUNT
        "49",//ASSET_MANAGER
        "50",//PLEDGOR_ACCOUNT
        "51",//PLEDGEE_ACCOUNT
        "52",//LARGE_TRADER_REPORTABLE_ACCOUNT
        "53",//TRADER_MNEMONIC
        "54",//SENDER_LOCATION
        "55",//SESSION_ID
        "56",//ACCEPTABLE_COUNTERPARTY
        "57",//UNACCEPTABLE_COUNTERPARTY
        "58",//ENTERING_UNIT
        "59",//EXECUTING_UNIT
        "60",//INTRODUCING_BROKER
        "61",//QUOTE_ORIGINATOR
        "62",//REPORT_ORIGINATOR
        "63",//SYSTEMATIC_INTERNALISER
        "64",//MULTILATERAL_TRADING_FACILITY
        "65",//REGULATED_MARKET
        "66",//MARKET_MAKER
        "67",//INVESTMENT_FIRM
        "68",//HOST_COMPETENT_AUTHORITY
        "69",//HOME_COMPETENT_AUTHORITY
        "70",//COMPETENT_AUTHORITY_OF_THE_MOST_RELEVANT_MARKET_IN_TERMS_OF_LIQUIDITY
        "71",//COMPETENT_AUTHORITY_OF_THE_TRANSACTION
        "72",//REPORTING_INTERMEDIARY
        "73",//EXECUTION_VENUE
        "74",//MARKET_DATA_ENTRY_ORIGINATOR
        "75",//LOCATION_ID
        "76",//DESK_ID
        "77",//MARKET_DATA_MARKET
        "78",//ALLOCATION_ENTITY
        "79",//PRIME_BROKER_PROVIDING_GENERAL_TRADE_SERVICES
        "80",//STEP_OUT_FIRM
        "81",//BROKERCLEARINGID
        "82",//CENTRAL_REGISTRATION_DEPOSITORY
        "83",//CLEARING_ACCOUNT
        "84",//ACCEPTABLE_SETTLING_COUNTERPARTY
        "85",//UNACCEPTABLE_SETTLING_COUNTERPARTY
            }
        
        ),
    NoPartyIDs(453,
        NUMINGROUP
        ),
    NoSecurityAltID(454,
        NUMINGROUP
        ),
    SecurityAltID(455,
        STRING
        ),
    SecurityAltIDSource(456,
        STRING
        ),
    NoUnderlyingSecurityAltID(457,
        NUMINGROUP
        ),
    UnderlyingSecurityAltID(458,
        STRING
        ),
    UnderlyingSecurityAltIDSource(459,
        STRING
        ),
    Product(460,
        INT
            ,new String[]{
        "1",//AGENCY
        "2",//COMMODITY
        "3",//CORPORATE
        "4",//CURRENCY
        "5",//EQUITY
        "6",//GOVERNMENT
        "7",//INDEX
        "8",//LOAN
        "9",//MONEYMARKET
        "10",//MORTGAGE
        "11",//MUNICIPAL
        "12",//OTHER
        "13",//FINANCING
            }
        
        ),
    CFICode(461,
        STRING
        ),
    UnderlyingProduct(462,
        INT
        ),
    UnderlyingCFICode(463,
        STRING
        ),
    TestMessageIndicator(464,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    BookingRefID(466,
        STRING
        ),
    IndividualAllocID(467,
        STRING
        ),
    RoundingDirection(468,
        CHAR
            ,new String[]{
        "0",//ROUND_TO_NEAREST
        "1",//ROUND_DOWN
        "2",//ROUND_UP
            }
        
        ),
    RoundingModulus(469,
        FLOAT
        ),
    CountryOfIssue(470,
        COUNTRY
        ),
    StateOrProvinceOfIssue(471,
        STRING
        ),
    LocaleOfIssue(472,
        STRING
        ),
    NoRegistDtls(473,
        NUMINGROUP
        ),
    MailingDtls(474,
        STRING
        ),
    InvestorCountryOfResidence(475,
        COUNTRY
        ),
    PaymentRef(476,
        STRING
        ),
    DistribPaymentMethod(477,
        INT
            ,new String[]{
        "1",//CREST
        "2",//NSCC
        "3",//EUROCLEAR
        "4",//CLEARSTREAM
        "5",//CHEQUE
        "6",//TELEGRAPHIC_TRANSFER
        "7",//FED_WIRE
        "8",//DIRECT_CREDIT
        "9",//ACH_CREDIT
        "10",//BPAY
        "11",//HIGH_VALUE_CLEARING_SYSTEM_HVACS
        "12",//REINVEST_IN_FUND
            }
        
        ),
    CashDistribCurr(478,
        CURRENCY
        ),
    CommCurrency(479,
        CURRENCY
        ),
    CancellationRights(480,
        CHAR
            ,new String[]{
        "Y",//YES
        "N",//NO_N
        "M",//NO_M
        "O",//NO_O
            }
        
        ),
    MoneyLaunderingStatus(481,
        CHAR
            ,new String[]{
        "Y",//PASSED
        "N",//NOT_CHECKED
        "1",//EXEMPT_1
        "2",//EXEMPT_2
        "3",//EXEMPT_3
            }
        
        ),
    MailingInst(482,
        STRING
        ),
    TransBkdTime(483,
        UTCTIMESTAMP
        ),
    ExecPriceType(484,
        CHAR
            ,new String[]{
        "B",//BID_PRICE
        "C",//CREATION_PRICE
        "D",//CREATION_PRICE_PLUS_ADJUSTMENT_PERCENT
        "E",//CREATION_PRICE_PLUS_ADJUSTMENT_AMOUNT
        "O",//OFFER_PRICE
        "P",//OFFER_PRICE_MINUS_ADJUSTMENT_PERCENT
        "Q",//OFFER_PRICE_MINUS_ADJUSTMENT_AMOUNT
        "S",//SINGLE_PRICE
            }
        
        ),
    ExecPriceAdjustment(485,
        FLOAT
        ),
    DateOfBirth(486,
        LOCALMKTDATE
        ),
    TradeReportTransType(487,
        INT
            ,new String[]{
        "0",//NEW
        "1",//CANCEL
        "2",//REPLACE
        "3",//RELEASE
        "4",//REVERSE
        "5",//CANCEL_DUE_TO_BACK_OUT_OF_TRADE
            }
        
        ),
    CardHolderName(488,
        STRING
        ),
    CardNumber(489,
        STRING
        ),
    CardExpDate(490,
        LOCALMKTDATE
        ),
    CardIssNum(491,
        STRING
        ),
    PaymentMethod(492,
        INT
            ,new String[]{
        "1",//CREST
        "2",//NSCC
        "3",//EUROCLEAR
        "4",//CLEARSTREAM
        "5",//CHEQUE
        "6",//TELEGRAPHIC_TRANSFER
        "7",//FED_WIRE
        "8",//DEBIT_CARD
        "9",//DIRECT_DEBIT
        "10",//DIRECT_CREDIT
        "11",//CREDIT_CARD
        "12",//ACH_DEBIT
        "13",//ACH_CREDIT
        "14",//BPAY
        "15",//HIGH_VALUE_CLEARING_SYSTEM
            }
        
        ),
    RegistAcctType(493,
        STRING
        ),
    Designation(494,
        STRING
        ),
    TaxAdvantageType(495,
        INT
            ,new String[]{
        "0",//NONE_NOT_APPLICABLE
        "1",//MAXI_ISA
        "2",//TESSA
        "3",//MINI_CASH_ISA
        "4",//MINI_STOCKS_AND_SHARES_ISA
        "5",//MINI_INSURANCE_ISA
        "6",//CURRENT_YEAR_PAYMENT
        "7",//PRIOR_YEAR_PAYMENT
        "8",//ASSET_TRANSFER
        "9",//EMPLOYEE_9
        "10",//EMPLOYEE_10
        "11",//EMPLOYER_11
        "12",//EMPLOYER_12
        "13",//NON_FUND_PROTOTYPE_IRA
        "14",//NON_FUND_QUALIFIED_PLAN
        "15",//DEFINED_CONTRIBUTION_PLAN
        "16",//INDIVIDUAL_RETIREMENT_ACCOUNT_16
        "17",//INDIVIDUAL_RETIREMENT_ACCOUNT_17
        "18",//KEOGH
        "19",//PROFIT_SHARING_PLAN
        "20",//401
        "21",//SELF_DIRECTED_IRA
        "22",//403
        "23",//457
        "24",//ROTH_IRA_24
        "25",//ROTH_IRA_25
        "26",//ROTH_CONVERSION_IRA_26
        "27",//ROTH_CONVERSION_IRA_27
        "28",//EDUCATION_IRA_28
        "29",//EDUCATION_IRA_29
        "999",//OTHER
            }
        
        ),
    RegistRejReasonText(496,
        STRING
        ),
    FundRenewWaiv(497,
        CHAR
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    CashDistribAgentName(498,
        STRING
        ),
    CashDistribAgentCode(499,
        STRING
        ),
    CashDistribAgentAcctNumber(500,
        STRING
        ),
    CashDistribPayRef(501,
        STRING
        ),
    CashDistribAgentAcctName(502,
        STRING
        ),
    CardStartDate(503,
        LOCALMKTDATE
        ),
    PaymentDate(504,
        LOCALMKTDATE
        ),
    PaymentRemitterID(505,
        STRING
        ),
    RegistStatus(506,
        CHAR
            ,new String[]{
        "A",//ACCEPTED
        "R",//REJECTED
        "H",//HELD
        "N",//REMINDER
            }
        
        ),
    RegistRejReasonCode(507,
        INT
            ,new String[]{
        "1",//INVALID_UNACCEPTABLE_ACCOUNT_TYPE
        "2",//INVALID_UNACCEPTABLE_TAX_EXEMPT_TYPE
        "3",//INVALID_UNACCEPTABLE_OWNERSHIP_TYPE
        "4",//INVALID_UNACCEPTABLE_NO_REG_DETAILS
        "5",//INVALID_UNACCEPTABLE_REG_SEQ_NO
        "6",//INVALID_UNACCEPTABLE_REG_DETAILS
        "7",//INVALID_UNACCEPTABLE_MAILING_DETAILS
        "8",//INVALID_UNACCEPTABLE_MAILING_INSTRUCTIONS
        "9",//INVALID_UNACCEPTABLE_INVESTOR_ID
        "10",//INVALID_UNACEEPTABLE_INVESTOR_ID_SOURCE
        "11",//INVALID_UNACCEPTABLE_DATE_OF_BIRTH
        "12",//INVALID_UNACCEPTABLE_INVESTOR_COUNTRY_OF_RESIDENCE
        "13",//INVALID_UNACCEPTABLE_NO_DISTRIB_INSTNS
        "14",//INVALID_UNACCEPTABLE_DISTRIB_PERCENTAGE
        "15",//INVALID_UNACCEPTABLE_DISTRIB_PAYMENT_METHOD
        "16",//INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NAME
        "17",//INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_CODE
        "18",//INVALID_UNACCEPTABLE_CASH_DISTRIB_AGENT_ACCT_NUM
        "99",//OTHER
            }
        
        ),
    RegistRefID(508,
        STRING
        ),
    RegistDtls(509,
        STRING
        ),
    NoDistribInsts(510,
        NUMINGROUP
        ),
    RegistEmail(511,
        STRING
        ),
    DistribPercentage(512,
        PERCENTAGE
        ),
    RegistID(513,
        STRING
        ),
    RegistTransType(514,
        CHAR
            ,new String[]{
        "0",//NEW
        "2",//CANCEL
        "1",//REPLACE
            }
        
        ),
    ExecValuationPoint(515,
        UTCTIMESTAMP
        ),
    OrderPercent(516,
        PERCENTAGE
        ),
    OwnershipType(517,
        CHAR
            ,new String[]{
        "J",//JOINT_INVESTORS
        "T",//TENANTS_IN_COMMON
        "2",//JOINT_TRUSTEES
            }
        
        ),
    NoContAmts(518,
        NUMINGROUP
        ),
    ContAmtType(519,
        INT
            ,new String[]{
        "1",//COMMISSION_AMOUNT
        "2",//COMMISSION_PERCENT
        "3",//INITIAL_CHARGE_AMOUNT
        "4",//INITIAL_CHARGE_PERCENT
        "5",//DISCOUNT_AMOUNT
        "6",//DISCOUNT_PERCENT
        "7",//DILUTION_LEVY_AMOUNT
        "8",//DILUTION_LEVY_PERCENT
        "9",//EXIT_CHARGE_AMOUNT
        "10",//EXIT_CHARGE_PERCENT
        "11",//FUND_BASED_RENEWAL_COMMISSION_PERCENT
        "12",//PROJECTED_FUND_VALUE
        "13",//FUND_BASED_RENEWAL_COMMISSION_AMOUNT_13
        "14",//FUND_BASED_RENEWAL_COMMISSION_AMOUNT_14
        "15",//NET_SETTLEMENT_AMOUNT
            }
        
        ),
    ContAmtValue(520,
        FLOAT
        ),
    ContAmtCurr(521,
        CURRENCY
        ),
    OwnerType(522,
        INT
            ,new String[]{
        "1",//INDIVIDUAL_INVESTOR
        "2",//PUBLIC_COMPANY
        "3",//PRIVATE_COMPANY
        "4",//INDIVIDUAL_TRUSTEE
        "5",//COMPANY_TRUSTEE
        "6",//PENSION_PLAN
        "7",//CUSTODIAN_UNDER_GIFTS_TO_MINORS_ACT
        "8",//TRUSTS
        "9",//FIDUCIARIES
        "10",//NETWORKING_SUB_ACCOUNT
        "11",//NON_PROFIT_ORGANIZATION
        "12",//CORPORATE_BODY
        "13",//NOMINEE
            }
        
        ),
    PartySubID(523,
        STRING
        ),
    NestedPartyID(524,
        STRING
        ),
    NestedPartyIDSource(525,
        CHAR
        ),
    SecondaryClOrdID(526,
        STRING
        ),
    SecondaryExecID(527,
        STRING
        ),
    OrderCapacity(528,
        CHAR
            ,new String[]{
        "A",//AGENCY
        "G",//PROPRIETARY
        "I",//INDIVIDUAL
        "P",//PRINCIPAL
        "R",//RISKLESS_PRINCIPAL
        "W",//AGENT_FOR_OTHER_MEMBER
            }
        
        ),
    OrderRestrictions(529,
        MULTIPLECHARVALUE
            ,new String[]{
        "1",//PROGRAM_TRADE
        "2",//INDEX_ARBITRAGE
        "3",//NON_INDEX_ARBITRAGE
        "4",//COMPETING_MARKET_MAKER
        "5",//ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_SECURITY
        "6",//ACTING_AS_MARKET_MAKER_OR_SPECIALIST_IN_THE_UNDERLYING_SECURITY_OF_A_DERIVATIVE_SECURITY
        "7",//FOREIGN_ENTITY
        "8",//EXTERNAL_MARKET_PARTICIPANT
        "9",//EXTERNAL_INTER_CONNECTED_MARKET_LINKAGE
        "A",//RISKLESS_ARBITRAGE
        "B",//ISSUER_HOLDING
        "C",//ISSUE_PRICE_STABILIZATION
        "D",//NON_ALGORITHMIC
        "E",//ALGORITHMIC
        "F",//CROSS
            }
        
        ),
    MassCancelRequestType(530,
        CHAR
            ,new String[]{
        "1",//CANCEL_ORDERS_FOR_A_SECURITY
        "2",//CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITY
        "3",//CANCEL_ORDERS_FOR_A_PRODUCT
        "4",//CANCEL_ORDERS_FOR_A_CFICODE
        "5",//CANCEL_ORDERS_FOR_A_SECURITYTYPE
        "6",//CANCEL_ORDERS_FOR_A_TRADING_SESSION
        "7",//CANCEL_ALL_ORDERS
        "8",//CANCEL_ORDERS_FOR_A_MARKET
        "9",//CANCEL_ORDERS_FOR_A_MARKET_SEGMENT
        "A",//CANCEL_ORDERS_FOR_A_SECURITY_GROUP
        "B",//CANCEL_FOR_SECURITY_ISSUER
        "C",//CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    MassCancelResponse(531,
        CHAR
            ,new String[]{
        "0",//CANCEL_REQUEST_REJECTED
        "1",//CANCEL_ORDERS_FOR_A_SECURITY
        "2",//CANCEL_ORDERS_FOR_AN_UNDERLYING_SECURITY
        "3",//CANCEL_ORDERS_FOR_A_PRODUCT
        "4",//CANCEL_ORDERS_FOR_A_CFICODE
        "5",//CANCEL_ORDERS_FOR_A_SECURITYTYPE
        "6",//CANCEL_ORDERS_FOR_A_TRADING_SESSION
        "7",//CANCEL_ALL_ORDERS
        "8",//CANCEL_ORDERS_FOR_A_MARKET
        "9",//CANCEL_ORDERS_FOR_A_MARKET_SEGMENT
        "A",//CANCEL_ORDERS_FOR_A_SECURITY_GROUP
        "B",//CANCEL_ORDERS_FOR_A_SECURITIES_ISSUER
        "C",//CANCEL_ORDERS_FOR_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    MassCancelRejectReason(532,
        INT
            ,new String[]{
        "0",//MASS_CANCEL_NOT_SUPPORTED
        "1",//INVALID_OR_UNKNOWN_SECURITY
        "2",//INVALID_OR_UNKOWN_UNDERLYING_SECURITY
        "3",//INVALID_OR_UNKNOWN_PRODUCT
        "4",//INVALID_OR_UNKNOWN_CFICODE
        "5",//INVALID_OR_UNKNOWN_SECURITYTYPE
        "6",//INVALID_OR_UNKNOWN_TRADING_SESSION
        "7",//INVALID_OR_UNKNOWN_MARKET
        "8",//INVALID_OR_UNKOWN_MARKET_SEGMENT
        "9",//INVALID_OR_UNKNOWN_SECURITY_GROUP
        "99",//OTHER
        "10",//INVALID_OR_UNKNOWN_SECURITY_ISSUER
        "11",//INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    TotalAffectedOrders(533,
        INT
        ),
    NoAffectedOrders(534,
        NUMINGROUP
        ),
    AffectedOrderID(535,
        STRING
        ),
    AffectedSecondaryOrderID(536,
        STRING
        ),
    QuoteType(537,
        INT
            ,new String[]{
        "0",//INDICATIVE
        "1",//TRADEABLE
        "2",//RESTRICTED_TRADEABLE
        "3",//COUNTER
            }
        
        ),
    NestedPartyRole(538,
        INT
        ),
    NoNestedPartyIDs(539,
        NUMINGROUP
        ),
    TotalAccruedInterestAmt(540,
        AMT
        ),
    MaturityDate(541,
        LOCALMKTDATE
        ),
    UnderlyingMaturityDate(542,
        LOCALMKTDATE
        ),
    InstrRegistry(543,
        STRING
        ),
    CashMargin(544,
        CHAR
            ,new String[]{
        "1",//CASH
        "2",//MARGIN_OPEN
        "3",//MARGIN_CLOSE
            }
        
        ),
    NestedPartySubID(545,
        STRING
        ),
    Scope(546,
        MULTIPLECHARVALUE
            ,new String[]{
        "1",//LOCAL_MARKET
        "2",//NATIONAL
        "3",//GLOBAL
            }
        
        ),
    MDImplicitDelete(547,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    CrossID(548,
        STRING
        ),
    CrossType(549,
        INT
            ,new String[]{
        "1",//CROSS_AON
        "2",//CROSS_IOC
        "3",//CROSS_ONE_SIDE
        "4",//CROSS_SAME_PRICE
            }
        
        ),
    CrossPrioritization(550,
        INT
            ,new String[]{
        "0",//NONE
        "1",//BUY_SIDE_IS_PRIORITIZED
        "2",//SELL_SIDE_IS_PRIORITIZED
            }
        
        ),
    OrigCrossID(551,
        STRING
        ),
    NoSides(552,
        NUMINGROUP
            ,new String[]{
        "1",//ONE_SIDE
        "2",//BOTH_SIDES
            }
        
        ),
    Username(553,
        STRING
        ),
    Password(554,
        STRING
        ),
    NoLegs(555,
        NUMINGROUP
        ),
    LegCurrency(556,
        CURRENCY
        ),
    TotNoSecurityTypes(557,
        INT
        ),
    NoSecurityTypes(558,
        NUMINGROUP
        ),
    SecurityListRequestType(559,
        INT
            ,new String[]{
        "0",//SYMBOL
        "1",//SECURITYTYPE_AND_OR_CFICODE
        "2",//PRODUCT
        "3",//TRADINGSESSIONID
        "4",//ALL_SECURITIES
        "5",//MARKETID_OR_MARKETID_PLUS_MARKETSEGMENTID
            }
        
        ),
    SecurityRequestResult(560,
        INT
            ,new String[]{
        "0",//VALID_REQUEST
        "1",//INVALID_OR_UNSUPPORTED_REQUEST
        "2",//NO_INSTRUMENTS_FOUND_THAT_MATCH_SELECTION_CRITERIA
        "3",//NOT_AUTHORIZED_TO_RETRIEVE_INSTRUMENT_DATA
        "4",//INSTRUMENT_DATA_TEMPORARILY_UNAVAILABLE
        "5",//REQUEST_FOR_INSTRUMENT_DATA_NOT_SUPPORTED
            }
        
        ),
    RoundLot(561,
        QTY
        ),
    MinTradeVol(562,
        QTY
        ),
    MultiLegRptTypeReq(563,
        INT
            ,new String[]{
        "0",//REPORT_BY_MULITLEG_SECURITY_ONLY
        "1",//REPORT_BY_MULTILEG_SECURITY_AND_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY
        "2",//REPORT_BY_INSTRUMENT_LEGS_BELONGING_TO_THE_MULTILEG_SECURITY_ONLY
            }
        
        ),
    LegPositionEffect(564,
        CHAR
        ),
    LegCoveredOrUncovered(565,
        INT
        ),
    LegPrice(566,
        PRICE
        ),
    TradSesStatusRejReason(567,
        INT
            ,new String[]{
        "1",//UNKNOWN_OR_INVALID_TRADINGSESSIONID
        "99",//OTHER
            }
        
        ),
    TradeRequestID(568,
        STRING
        ),
    TradeRequestType(569,
        INT
            ,new String[]{
        "0",//ALL_TRADES
        "1",//MATCHED_TRADES_MATCHING_CRITERIA_PROVIDED_ON_REQUEST
        "2",//UNMATCHED_TRADES_THAT_MATCH_CRITERIA
        "3",//UNREPORTED_TRADES_THAT_MATCH_CRITERIA
        "4",//ADVISORIES_THAT_MATCH_CRITERIA
            }
        
        ),
    PreviouslyReported(570,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    TradeReportID(571,
        STRING
        ),
    TradeReportRefID(572,
        STRING
        ),
    MatchStatus(573,
        CHAR
            ,new String[]{
        "0",//COMPARED_MATCHED_OR_AFFIRMED
        "1",//UNCOMPARED_UNMATCHED_OR_UNAFFIRMED
        "2",//ADVISORY_OR_ALERT
            }
        
        ),
    MatchType(574,
        STRING
            ,new String[]{
        "1",//ONE_PARTY_TRADE_REPORT
        "2",//TWO_PARTY_TRADE_REPORT
        "3",//CONFIRMED_TRADE_REPORT
        "4",//AUTO_MATCH
        "5",//CROSS_AUCTION
        "6",//COUNTER_ORDER_SELECTION
        "7",//CALL_AUCTION
        "8",//ISSUING_BUY_BACK_AUCTION
        "M3",//ACT_ACCEPTED_TRADE
        "M4",//ACT_DEFAULT_TRADE
        "M5",//ACT_DEFAULT_AFTER_M2
        "M6",//ACT_M6_MATCH
        "A1",//EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES_AND_EXECUTION_TIME
        "A2",//EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_FOUR_BADGES
        "A3",//EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES_AND_EXECUTION_TIME
        "A4",//EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_TWO_BADGES
        "A5",//EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADETYPE_AND_SPECIAL_TRADE_INDICATOR_PLUS_EXECUTION_TIME
        "AQ",//COMPARED_RECORDS_RESULTING_FROM_STAMPED_ADVISORIES_OR_SPECIALIST_ACCEPTS_PAIR_OFFS
        "S1",//SUMMARIZED_MATCH_USING_A1_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIED
        "S2",//SUMMARIZED_MATCH_USING_A2_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED
        "S3",//SUMMARIZED_MATCH_USING_A3_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED
        "S4",//SUMMARIZED_MATCH_USING_A4_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED
        "S5",//SUMMARIZED_MATCH_USING_A5_EXACT_MATCH_CRITERIA_EXCEPT_QUANTITY_IS_SUMMARIZED
        "M1",//EXACT_MATCH_ON_TRADE_DATE_STOCK_SYMBOL_QUANTITY_PRICE_TRADE_TYPE_AND_SPECIAL_TRADE_INDICATOR_MINUS_BADGES_AND_TIMES_ACT_M1_MATCH
        "M2",//SUMMARIZED_MATCH_MINUS_BADGES_AND_TIMES_ACT_M2_MATCH
        "MT",//OCS_LOCKED_IN_NON_ACT
            }
        
        ),
    OddLot(575,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    NoClearingInstructions(576,
        NUMINGROUP
        ),
    ClearingInstruction(577,
        INT
            ,new String[]{
        "0",//PROCESS_NORMALLY
        "1",//EXCLUDE_FROM_ALL_NETTING
        "2",//BILATERAL_NETTING_ONLY
        "3",//EX_CLEARING
        "4",//SPECIAL_TRADE
        "5",//MULTILATERAL_NETTING
        "6",//CLEAR_AGAINST_CENTRAL_COUNTERPARTY
        "7",//EXCLUDE_FROM_CENTRAL_COUNTERPARTY
        "8",//MANUAL_MODE
        "9",//AUTOMATIC_POSTING_MODE
        "10",//AUTOMATIC_GIVE_UP_MODE
        "11",//QUALIFIED_SERVICE_REPRESENTATIVE_QSR
        "12",//CUSTOMER_TRADE
        "13",//SELF_CLEARING
            }
        
        ),
    TradeInputSource(578,
        STRING
        ),
    TradeInputDevice(579,
        STRING
        ),
    NoDates(580,
        NUMINGROUP
        ),
    AccountType(581,
        INT
            ,new String[]{
        "1",//ACCOUNT_IS_CARRIED_ON_CUSTOMER_SIDE_OF_THE_BOOKS
        "2",//ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS
        "3",//HOUSE_TRADER
        "4",//FLOOR_TRADER
        "6",//ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED
        "7",//ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED
        "8",//JOINT_BACK_OFFICE_ACCOUNT
            }
        
        ),
    CustOrderCapacity(582,
        INT
            ,new String[]{
        "1",//MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNT
        "2",//CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNT
        "3",//MEMBER_TRADING_FOR_ANOTHER_MEMBER
        "4",//ALL_OTHER
            }
        
        ),
    ClOrdLinkID(583,
        STRING
        ),
    MassStatusReqID(584,
        STRING
        ),
    MassStatusReqType(585,
        INT
            ,new String[]{
        "1",//STATUS_FOR_ORDERS_FOR_A_SECURITY
        "2",//STATUS_FOR_ORDERS_FOR_AN_UNDERLYING_SECURITY
        "3",//STATUS_FOR_ORDERS_FOR_A_PRODUCT
        "4",//STATUS_FOR_ORDERS_FOR_A_CFICODE
        "5",//STATUS_FOR_ORDERS_FOR_A_SECURITYTYPE
        "6",//STATUS_FOR_ORDERS_FOR_A_TRADING_SESSION
        "7",//STATUS_FOR_ALL_ORDERS
        "8",//STATUS_FOR_ORDERS_FOR_A_PARTYID
        "9",//STATUS_FOR_SECURITY_ISSUER
        "10",//STATUS_FOR_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    OrigOrdModTime(586,
        UTCTIMESTAMP
        ),
    LegSettlType(587,
        CHAR
        ),
    LegSettlDate(588,
        LOCALMKTDATE
        ),
    DayBookingInst(589,
        CHAR
            ,new String[]{
        "0",//CAN_TRIGGER_BOOKING_WITHOUT_REFERENCE_TO_THE_ORDER_INITIATOR
        "1",//SPEAK_WITH_ORDER_INITIATOR_BEFORE_BOOKING
        "2",//ACCUMULATE
            }
        
        ),
    BookingUnit(590,
        CHAR
            ,new String[]{
        "0",//EACH_PARTIAL_EXECUTION_IS_A_BOOKABLE_UNIT
        "1",//AGGREGATE_PARTIAL_EXECUTIONS_ON_THIS_ORDER_AND_BOOK_ONE_TRADE_PER_ORDER
        "2",//AGGREGATE_EXECUTIONS_FOR_THIS_SYMBOL_SIDE_AND_SETTLEMENT_DATE
            }
        
        ),
    PreallocMethod(591,
        CHAR
            ,new String[]{
        "0",//PRO_RATA
        "1",//DO_NOT_PRO_RATA
            }
        
        ),
    UnderlyingCountryOfIssue(592,
        COUNTRY
        ),
    UnderlyingStateOrProvinceOfIssue(593,
        STRING
        ),
    UnderlyingLocaleOfIssue(594,
        STRING
        ),
    UnderlyingInstrRegistry(595,
        STRING
        ),
    LegCountryOfIssue(596,
        COUNTRY
        ),
    LegStateOrProvinceOfIssue(597,
        STRING
        ),
    LegLocaleOfIssue(598,
        STRING
        ),
    LegInstrRegistry(599,
        STRING
        ),
    LegSymbol(600,
        STRING
        ),
    LegSymbolSfx(601,
        STRING
        ),
    LegSecurityID(602,
        STRING
        ),
    LegSecurityIDSource(603,
        STRING
        ),
    NoLegSecurityAltID(604,
        NUMINGROUP
        ),
    LegSecurityAltID(605,
        STRING
        ),
    LegSecurityAltIDSource(606,
        STRING
        ),
    LegProduct(607,
        INT
        ),
    LegCFICode(608,
        STRING
        ),
    LegSecurityType(609,
        STRING
        ),
    LegMaturityMonthYear(610,
        MONTHYEAR
        ),
    LegMaturityDate(611,
        LOCALMKTDATE
        ),
    LegStrikePrice(612,
        PRICE
        ),
    LegOptAttribute(613,
        CHAR
        ),
    LegContractMultiplier(614,
        FLOAT
        ),
    LegCouponRate(615,
        PERCENTAGE
        ),
    LegSecurityExchange(616,
        EXCHANGE
        ),
    LegIssuer(617,
        STRING
        ),
    EncodedLegIssuerLen(618,
        LENGTH
        ),
    EncodedLegIssuer(619,
        DATA
        ),
    LegSecurityDesc(620,
        STRING
        ),
    EncodedLegSecurityDescLen(621,
        LENGTH
        ),
    EncodedLegSecurityDesc(622,
        DATA
        ),
    LegRatioQty(623,
        FLOAT
        ),
    LegSide(624,
        CHAR
        ),
    TradingSessionSubID(625,
        STRING
            ,new String[]{
        "1",//PRE_TRADING
        "2",//OPENING_OR_OPENING_AUCTION
        "3",//3
        "4",//CLOSING_OR_CLOSING_AUCTION
        "5",//POST_TRADING
        "6",//INTRADAY_AUCTION
        "7",//QUIESCENT
            }
        
        ),
    AllocType(626,
        INT
            ,new String[]{
        "1",//CALCULATED
        "2",//PRELIMINARY
        "3",//SELLSIDE_CALCULATED_USING_PRELIMINARY
        "4",//SELLSIDE_CALCULATED_WITHOUT_PRELIMINARY
        "5",//READY_TO_BOOK
        "6",//BUYSIDE_READY_TO_BOOK
        "7",//WAREHOUSE_INSTRUCTION
        "8",//REQUEST_TO_INTERMEDIARY
        "9",//ACCEPT
        "10",//REJECT
        "11",//ACCEPT_PENDING
        "12",//INCOMPLETE_GROUP
        "13",//COMPLETE_GROUP
        "14",//REVERSAL_PENDING
            }
        
        ),
    NoHops(627,
        NUMINGROUP
        ),
    HopCompID(628,
        STRING
        ),
    HopSendingTime(629,
        UTCTIMESTAMP
        ),
    HopRefID(630,
        SEQNUM
        ),
    MidPx(631,
        PRICE
        ),
    BidYield(632,
        PERCENTAGE
        ),
    MidYield(633,
        PERCENTAGE
        ),
    OfferYield(634,
        PERCENTAGE
        ),
    ClearingFeeIndicator(635,
        STRING
            ,new String[]{
        "1",//1ST_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT
        "2",//2ND_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT
        "3",//3RD_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT
        "4",//4TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT
        "5",//5TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT
        "9",//6TH_YEAR_DELEGATE_TRADING_FOR_OWN_ACCOUNT
        "B",//CBOE_MEMBER
        "C",//NON_MEMBER_AND_CUSTOMER
        "E",//EQUITY_MEMBER_AND_CLEARING_MEMBER
        "F",//FULL_AND_ASSOCIATE_MEMBER_TRADING_FOR_OWN_ACCOUNT_AND_AS_FLOOR_BROKERS
        "H",//106H_AND_106J_FIRMS
        "I",//GIM_IDEM_AND_COM_MEMBERSHIP_INTEREST_HOLDERS
        "L",//LESSEE_106F_EMPLOYEES
        "M",//ALL_OTHER_OWNERSHIP_TYPES
            }
        
        ),
    WorkingIndicator(636,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    LegLastPx(637,
        PRICE
        ),
    PriorityIndicator(638,
        INT
            ,new String[]{
        "0",//PRIORITY_UNCHANGED
        "1",//LOST_PRIORITY_AS_RESULT_OF_ORDER_CHANGE
            }
        
        ),
    PriceImprovement(639,
        PRICEOFFSET
        ),
    Price2(640,
        PRICE
        ),
    LastForwardPoints2(641,
        PRICEOFFSET
        ),
    BidForwardPoints2(642,
        PRICEOFFSET
        ),
    OfferForwardPoints2(643,
        PRICEOFFSET
        ),
    RFQReqID(644,
        STRING
        ),
    MktBidPx(645,
        PRICE
        ),
    MktOfferPx(646,
        PRICE
        ),
    MinBidSize(647,
        QTY
        ),
    MinOfferSize(648,
        QTY
        ),
    QuoteStatusReqID(649,
        STRING
        ),
    LegalConfirm(650,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    UnderlyingLastPx(651,
        PRICE
        ),
    UnderlyingLastQty(652,
        QTY
        ),
    LegRefID(654,
        STRING
        ),
    ContraLegRefID(655,
        STRING
        ),
    SettlCurrBidFxRate(656,
        FLOAT
        ),
    SettlCurrOfferFxRate(657,
        FLOAT
        ),
    QuoteRequestRejectReason(658,
        INT
            ,new String[]{
        "1",//UNKNOWN_SYMBOL
        "2",//EXCHANGE
        "3",//QUOTE_REQUEST_EXCEEDS_LIMIT
        "4",//TOO_LATE_TO_ENTER
        "5",//INVALID_PRICE
        "6",//NOT_AUTHORIZED_TO_REQUEST_QUOTE
        "7",//NO_MATCH_FOR_INQUIRY
        "8",//NO_MARKET_FOR_INSTRUMENT
        "9",//NO_INVENTORY
        "10",//PASS
        "11",//INSUFFICIENT_CREDIT
        "99",//OTHER
            }
        
        ),
    SideComplianceID(659,
        STRING
        ),
    AcctIDSource(660,
        INT
            ,new String[]{
        "1",//BIC
        "2",//SID_CODE
        "3",//TFM
        "4",//OMGEO
        "5",//DTCC_CODE
        "99",//OTHER
            }
        
        ),
    AllocAcctIDSource(661,
        INT
        ),
    BenchmarkPrice(662,
        PRICE
        ),
    BenchmarkPriceType(663,
        INT
        ),
    ConfirmID(664,
        STRING
        ),
    ConfirmStatus(665,
        INT
            ,new String[]{
        "1",//RECEIVED
        "2",//MISMATCHED_ACCOUNT
        "3",//MISSING_SETTLEMENT_INSTRUCTIONS
        "4",//CONFIRMED
        "5",//REQUEST_REJECTED
            }
        
        ),
    ConfirmTransType(666,
        INT
            ,new String[]{
        "0",//NEW
        "1",//REPLACE
        "2",//CANCEL
            }
        
        ),
    ContractSettlMonth(667,
        MONTHYEAR
        ),
    DeliveryForm(668,
        INT
            ,new String[]{
        "1",//BOOK_ENTRY
        "2",//BEARER
            }
        
        ),
    LastParPx(669,
        PRICE
        ),
    NoLegAllocs(670,
        NUMINGROUP
        ),
    LegAllocAccount(671,
        STRING
        ),
    LegIndividualAllocID(672,
        STRING
        ),
    LegAllocQty(673,
        QTY
        ),
    LegAllocAcctIDSource(674,
        STRING
        ),
    LegSettlCurrency(675,
        CURRENCY
        ),
    LegBenchmarkCurveCurrency(676,
        CURRENCY
        ),
    LegBenchmarkCurveName(677,
        STRING
        ),
    LegBenchmarkCurvePoint(678,
        STRING
        ),
    LegBenchmarkPrice(679,
        PRICE
        ),
    LegBenchmarkPriceType(680,
        INT
        ),
    LegBidPx(681,
        PRICE
        ),
    LegIOIQty(682,
        STRING
        ),
    NoLegStipulations(683,
        NUMINGROUP
        ),
    LegOfferPx(684,
        PRICE
        ),
    LegOrderQty(685,
        QTY
        ),
    LegPriceType(686,
        INT
        ),
    LegQty(687,
        QTY
        ),
    LegStipulationType(688,
        STRING
        ),
    LegStipulationValue(689,
        STRING
        ),
    LegSwapType(690,
        INT
            ,new String[]{
        "1",//PAR_FOR_PAR
        "2",//MODIFIED_DURATION
        "4",//RISK
        "5",//PROCEEDS
            }
        
        ),
    Pool(691,
        STRING
        ),
    QuotePriceType(692,
        INT
            ,new String[]{
        "1",//PERCENT
        "2",//PER_SHARE
        "3",//FIXED_AMOUNT
        "4",//DISCOUNT
        "5",//PREMIUM
        "6",//SPREAD
        "7",//TED_PRICE
        "8",//TED_YIELD
        "9",//YIELD_SPREAD
        "10",//YIELD
            }
        
        ),
    QuoteRespID(693,
        STRING
        ),
    QuoteRespType(694,
        INT
            ,new String[]{
        "1",//HIT_LIFT
        "2",//COUNTER
        "3",//EXPIRED
        "4",//COVER
        "5",//DONE_AWAY
        "6",//PASS
        "7",//END_TRADE
        "8",//TIMED_OUT
            }
        
        ),
    QuoteQualifier(695,
        CHAR
        ),
    YieldRedemptionDate(696,
        LOCALMKTDATE
        ),
    YieldRedemptionPrice(697,
        PRICE
        ),
    YieldRedemptionPriceType(698,
        INT
        ),
    BenchmarkSecurityID(699,
        STRING
        ),
    ReversalIndicator(700,
        BOOLEAN
        ),
    YieldCalcDate(701,
        LOCALMKTDATE
        ),
    NoPositions(702,
        NUMINGROUP
        ),
    PosType(703,
        STRING
            ,new String[]{
        "ALC",//ALLOCATION_TRADE_QTY
        "AS",//OPTION_ASSIGNMENT
        "ASF",//AS_OF_TRADE_QTY
        "DLV",//DELIVERY_QTY
        "ETR",//ELECTRONIC_TRADE_QTY
        "EX",//OPTION_EXERCISE_QTY
        "FIN",//END_OF_DAY_QTY
        "IAS",//INTRA_SPREAD_QTY
        "IES",//INTER_SPREAD_QTY
        "PA",//ADJUSTMENT_QTY
        "PIT",//PIT_TRADE_QTY
        "SOD",//START_OF_DAY_QTY
        "SPL",//INTEGRAL_SPLIT
        "TA",//TRANSACTION_FROM_ASSIGNMENT
        "TOT",//TOTAL_TRANSACTION_QTY
        "TQ",//TRANSACTION_QUANTITY
        "TRF",//TRANSFER_TRADE_QTY
        "TX",//TRANSACTION_FROM_EXERCISE
        "XM",//CROSS_MARGIN_QTY
        "RCV",//RECEIVE_QUANTITY
        "CAA",//CORPORATE_ACTION_ADJUSTMENT
        "DN",//DELIVERY_NOTICE_QTY
        "EP",//EXCHANGE_FOR_PHYSICAL_QTY
        "PNTN",//PRIVATELY_NEGOTIATED_TRADE_QTY
        "DLT",//NET_DELTA_QTY
        "CEA",//CREDIT_EVENT_ADJUSTMENT
        "SEA",//SUCCESSION_EVENT_ADJUSTMENT
            }
        
        ),
    LongQty(704,
        QTY
        ),
    ShortQty(705,
        QTY
        ),
    PosQtyStatus(706,
        INT
            ,new String[]{
        "0",//SUBMITTED
        "1",//ACCEPTED
        "2",//REJECTED
            }
        
        ),
    PosAmtType(707,
        STRING
            ,new String[]{
        "CASH",//CASH_AMOUNT
        "CRES",//CASH_RESIDUAL_AMOUNT
        "FMTM",//FINAL_MARK_TO_MARKET_AMOUNT
        "IMTM",//INCREMENTAL_MARK_TO_MARKET_AMOUNT
        "PREM",//PREMIUM_AMOUNT
        "SMTM",//START_OF_DAY_MARK_TO_MARKET_AMOUNT
        "TVAR",//TRADE_VARIATION_AMOUNT
        "VADJ",//VALUE_ADJUSTED_AMOUNT
        "SETL",//SETTLEMENT_VALUE
        "ICPN",//INITIAL_TRADE_COUPON_AMOUNT
        "ACPN",//ACCRUED_COUPON_AMOUNT
        "CPN",//COUPON_AMOUNT
        "IACPN",//INCREMENTAL_ACCRUED_COUPON
        "CMTM",//COLLATERALIZED_MARK_TO_MARKET
        "ICMTM",//INCREMENTAL_COLLATERALIZED_MARK_TO_MARKET
        "DLV",//COMPENSATION_AMOUNT
        "BANK",//TOTAL_BANKED_AMOUNT
        "COLAT",//TOTAL_COLLATERALIZED_AMOUNT
            }
        
        ),
    PosAmt(708,
        AMT
        ),
    PosTransType(709,
        INT
            ,new String[]{
        "1",//EXERCISE
        "2",//DO_NOT_EXERCISE
        "3",//POSITION_ADJUSTMENT
        "4",//POSITION_CHANGE_SUBMISSION_MARGIN_DISPOSITION
        "5",//PLEDGE
        "6",//LARGE_TRADER_SUBMISSION
            }
        
        ),
    PosReqID(710,
        STRING
        ),
    NoUnderlyings(711,
        NUMINGROUP
        ),
    PosMaintAction(712,
        INT
            ,new String[]{
        "1",//NEW
        "2",//REPLACE
        "3",//CANCEL
        "4",//REVERSE
            }
        
        ),
    OrigPosReqRefID(713,
        STRING
        ),
    PosMaintRptRefID(714,
        STRING
        ),
    ClearingBusinessDate(715,
        LOCALMKTDATE
        ),
    SettlSessID(716,
        STRING
            ,new String[]{
        "ITD",//INTRADAY
        "RTH",//REGULAR_TRADING_HOURS
        "ETH",//ELECTRONIC_TRADING_HOURS
        "EOD",//END_OF_DAY
            }
        
        ),
    SettlSessSubID(717,
        STRING
        ),
    AdjustmentType(718,
        INT
            ,new String[]{
        "0",//PROCESS_REQUEST_AS_MARGIN_DISPOSITION
        "1",//DELTA_PLUS
        "2",//DELTA_MINUS
        "3",//FINAL
            }
        
        ),
    ContraryInstructionIndicator(719,
        BOOLEAN
        ),
    PriorSpreadIndicator(720,
        BOOLEAN
        ),
    PosMaintRptID(721,
        STRING
        ),
    PosMaintStatus(722,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "1",//ACCEPTED_WITH_WARNINGS
        "2",//REJECTED
        "3",//COMPLETED
        "4",//COMPLETED_WITH_WARNINGS
            }
        
        ),
    PosMaintResult(723,
        INT
            ,new String[]{
        "0",//SUCCESSFUL_COMPLETION
        "1",//REJECTED
        "99",//OTHER
            }
        
        ),
    PosReqType(724,
        INT
            ,new String[]{
        "0",//POSITIONS
        "1",//TRADES
        "2",//EXERCISES
        "3",//ASSIGNMENTS
        "4",//SETTLEMENT_ACTIVITY
        "5",//BACKOUT_MESSAGE
        "6",//DELTA_POSITIONS
            }
        
        ),
    ResponseTransportType(725,
        INT
            ,new String[]{
        "0",//INBAND
        "1",//OUT_OF_BAND
            }
        
        ),
    ResponseDestination(726,
        STRING
        ),
    TotalNumPosReports(727,
        INT
        ),
    PosReqResult(728,
        INT
            ,new String[]{
        "0",//VALID_REQUEST
        "1",//INVALID_OR_UNSUPPORTED_REQUEST
        "2",//NO_POSITIONS_FOUND_THAT_MATCH_CRITERIA
        "3",//NOT_AUTHORIZED_TO_REQUEST_POSITIONS
        "4",//REQUEST_FOR_POSITION_NOT_SUPPORTED
        "99",//OTHER
            }
        
        ),
    PosReqStatus(729,
        INT
            ,new String[]{
        "0",//COMPLETED
        "1",//COMPLETED_WITH_WARNINGS
        "2",//REJECTED
            }
        
        ),
    SettlPrice(730,
        PRICE
        ),
    SettlPriceType(731,
        INT
            ,new String[]{
        "1",//FINAL
        "2",//THEORETICAL
            }
        
        ),
    UnderlyingSettlPrice(732,
        PRICE
        ),
    UnderlyingSettlPriceType(733,
        INT
        ),
    PriorSettlPrice(734,
        PRICE
        ),
    NoQuoteQualifiers(735,
        NUMINGROUP
        ),
    AllocSettlCurrency(736,
        CURRENCY
        ),
    AllocSettlCurrAmt(737,
        AMT
        ),
    InterestAtMaturity(738,
        AMT
        ),
    LegDatedDate(739,
        LOCALMKTDATE
        ),
    LegPool(740,
        STRING
        ),
    AllocInterestAtMaturity(741,
        AMT
        ),
    AllocAccruedInterestAmt(742,
        AMT
        ),
    DeliveryDate(743,
        LOCALMKTDATE
        ),
    AssignmentMethod(744,
        CHAR
            ,new String[]{
        "P",//PRO_RATA
        "R",//RANDOM
            }
        
        ),
    AssignmentUnit(745,
        QTY
        ),
    OpenInterest(746,
        AMT
        ),
    ExerciseMethod(747,
        CHAR
            ,new String[]{
        "A",//AUTOMATIC
        "M",//MANUAL
            }
        
        ),
    TotNumTradeReports(748,
        INT
        ),
    TradeRequestResult(749,
        INT
            ,new String[]{
        "0",//SUCCESSFUL
        "1",//INVALID_OR_UNKNOWN_INSTRUMENT
        "2",//INVALID_TYPE_OF_TRADE_REQUESTED
        "3",//INVALID_PARTIES
        "4",//INVALID_TRANSPORT_TYPE_REQUESTED
        "5",//INVALID_DESTINATION_REQUESTED
        "8",//TRADEREQUESTTYPE_NOT_SUPPORTED
        "9",//NOT_AUTHORIZED
        "99",//OTHER
            }
        
        ),
    TradeRequestStatus(750,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "1",//COMPLETED
        "2",//REJECTED
            }
        
        ),
    TradeReportRejectReason(751,
        INT
            ,new String[]{
        "0",//SUCCESSFUL
        "1",//INVALID_PARTY_ONFORMATION
        "2",//UNKNOWN_INSTRUMENT
        "3",//UNAUTHORIZED_TO_REPORT_TRADES
        "4",//INVALID_TRADE_TYPE
        "99",//OTHER
            }
        
        ),
    SideMultiLegReportingType(752,
        INT
            ,new String[]{
        "1",//SINGLE_SECURITY
        "2",//INDIVIDUAL_LEG_OF_A_MULTILEG_SECURITY
        "3",//MULTILEG_SECURITY
            }
        
        ),
    NoPosAmt(753,
        NUMINGROUP
        ),
    AutoAcceptIndicator(754,
        BOOLEAN
        ),
    AllocReportID(755,
        STRING
        ),
    NoNested2PartyIDs(756,
        NUMINGROUP
        ),
    Nested2PartyID(757,
        STRING
        ),
    Nested2PartyIDSource(758,
        CHAR
        ),
    Nested2PartyRole(759,
        INT
        ),
    Nested2PartySubID(760,
        STRING
        ),
    BenchmarkSecurityIDSource(761,
        STRING
        ),
    SecuritySubType(762,
        STRING
        ),
    UnderlyingSecuritySubType(763,
        STRING
        ),
    LegSecuritySubType(764,
        STRING
        ),
    AllowableOneSidednessPct(765,
        PERCENTAGE
        ),
    AllowableOneSidednessValue(766,
        AMT
        ),
    AllowableOneSidednessCurr(767,
        CURRENCY
        ),
    NoTrdRegTimestamps(768,
        NUMINGROUP
        ),
    TrdRegTimestamp(769,
        UTCTIMESTAMP
        ),
    TrdRegTimestampType(770,
        INT
            ,new String[]{
        "1",//EXECUTION_TIME
        "2",//TIME_IN
        "3",//TIME_OUT
        "4",//BROKER_RECEIPT
        "5",//BROKER_EXECUTION
        "6",//DESK_RECEIPT
        "7",//SUBMISSION_TO_CLEARING
            }
        
        ),
    TrdRegTimestampOrigin(771,
        STRING
        ),
    ConfirmRefID(772,
        STRING
        ),
    ConfirmType(773,
        INT
            ,new String[]{
        "1",//STATUS
        "2",//CONFIRMATION
        "3",//CONFIRMATION_REQUEST_REJECTED
            }
        
        ),
    ConfirmRejReason(774,
        INT
            ,new String[]{
        "1",//MISMATCHED_ACCOUNT
        "2",//MISSING_SETTLEMENT_INSTRUCTIONS
        "99",//OTHER
            }
        
        ),
    BookingType(775,
        INT
            ,new String[]{
        "0",//REGULAR_BOOKING
        "1",//CFD
        "2",//TOTAL_RETURN_SWAP
            }
        
        ),
    IndividualAllocRejCode(776,
        INT
        ),
    SettlInstMsgID(777,
        STRING
        ),
    NoSettlInst(778,
        NUMINGROUP
        ),
    LastUpdateTime(779,
        UTCTIMESTAMP
        ),
    AllocSettlInstType(780,
        INT
            ,new String[]{
        "0",//USE_DEFAULT_INSTRUCTIONS
        "1",//DERIVE_FROM_PARAMETERS_PROVIDED
        "2",//FULL_DETAILS_PROVIDED
        "3",//SSI_DB_IDS_PROVIDED
        "4",//PHONE_FOR_INSTRUCTIONS
            }
        
        ),
    NoSettlPartyIDs(781,
        NUMINGROUP
        ),
    SettlPartyID(782,
        STRING
        ),
    SettlPartyIDSource(783,
        CHAR
        ),
    SettlPartyRole(784,
        INT
        ),
    SettlPartySubID(785,
        STRING
        ),
    SettlPartySubIDType(786,
        INT
        ),
    DlvyInstType(787,
        CHAR
            ,new String[]{
        "C",//CASH
        "S",//SECURITIES
            }
        
        ),
    TerminationType(788,
        INT
            ,new String[]{
        "1",//OVERNIGHT
        "2",//TERM
        "3",//FLEXIBLE
        "4",//OPEN
            }
        
        ),
    NextExpectedMsgSeqNum(789,
        SEQNUM
        ),
    OrdStatusReqID(790,
        STRING
        ),
    SettlInstReqID(791,
        STRING
        ),
    SettlInstReqRejCode(792,
        INT
            ,new String[]{
        "0",//UNABLE_TO_PROCESS_REQUEST
        "1",//UNKNOWN_ACCOUNT
        "2",//NO_MATCHING_SETTLEMENT_INSTRUCTIONS_FOUND
        "99",//OTHER
            }
        
        ),
    SecondaryAllocID(793,
        STRING
        ),
    AllocReportType(794,
        INT
            ,new String[]{
        "2",//PRELIMINARY_REQUEST_TO_INTERMEDIARY
        "3",//SELLSIDE_CALCULATED_USING_PRELIMINARY
        "4",//SELLSIDE_CALCULATED_WITHOUT_PRELIMINARY
        "5",//WAREHOUSE_RECAP
        "8",//REQUEST_TO_INTERMEDIARY
        "9",//ACCEPT
        "10",//REJECT
        "11",//ACCEPT_PENDING
        "12",//COMPLETE
        "14",//REVERSE_PENDING
            }
        
        ),
    AllocReportRefID(795,
        STRING
        ),
    AllocCancReplaceReason(796,
        INT
            ,new String[]{
        "1",//ORIGINAL_DETAILS_INCOMPLETE_INCORRECT
        "2",//CHANGE_IN_UNDERLYING_ORDER_DETAILS
        "99",//OTHER
            }
        
        ),
    CopyMsgIndicator(797,
        BOOLEAN
        ),
    AllocAccountType(798,
        INT
            ,new String[]{
        "1",//ACCOUNT_IS_CARRIED_PN_CUSTOMER_SIDE_OF_BOOKS
        "2",//ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS
        "3",//HOUSE_TRADER
        "4",//FLOOR_TRADER
        "6",//ACCOUNT_IS_CARRIED_ON_NON_CUSTOMER_SIDE_OF_BOOKS_AND_IS_CROSS_MARGINED
        "7",//ACCOUNT_IS_HOUSE_TRADER_AND_IS_CROSS_MARGINED
        "8",//JOINT_BACK_OFFICE_ACCOUNT
            }
        
        ),
    OrderAvgPx(799,
        PRICE
        ),
    OrderBookingQty(800,
        QTY
        ),
    NoSettlPartySubIDs(801,
        NUMINGROUP
        ),
    NoPartySubIDs(802,
        NUMINGROUP
        ),
    PartySubIDType(803,
        INT
            ,new String[]{
        "1",//FIRM
        "2",//PERSON
        "3",//SYSTEM
        "4",//APPLICATION
        "5",//FULL_LEGAL_NAME_OF_FIRM
        "6",//POSTAL_ADDRESS
        "7",//PHONE_NUMBER
        "8",//EMAIL_ADDRESS
        "9",//CONTACT_NAME
        "10",//SECURITIES_ACCOUNT_NUMBER
        "11",//REGISTRATION_NUMBER
        "12",//REGISTERED_ADDRESS_12
        "13",//REGULATORY_STATUS
        "14",//REGISTRATION_NAME
        "15",//CASH_ACCOUNT_NUMBER
        "16",//BIC
        "17",//CSD_PARTICIPANT_MEMBER_CODE
        "18",//REGISTERED_ADDRESS_18
        "19",//FUND_ACCOUNT_NAME
        "20",//TELEX_NUMBER
        "21",//FAX_NUMBER
        "22",//SECURITIES_ACCOUNT_NAME
        "23",//CASH_ACCOUNT_NAME
        "24",//DEPARTMENT
        "25",//LOCATION_DESK
        "26",//POSITION_ACCOUNT_TYPE
        "27",//SECURITY_LOCATE_ID
        "28",//MARKET_MAKER
        "29",//ELIGIBLE_COUNTERPARTY
        "30",//PROFESSIONAL_CLIENT
        "31",//LOCATION
        "32",//EXECUTION_VENUE
        "33",//CURRENCY_DELIVERY_IDENTIFIER
            }
        
        ),
    NoNestedPartySubIDs(804,
        NUMINGROUP
        ),
    NestedPartySubIDType(805,
        INT
        ),
    NoNested2PartySubIDs(806,
        NUMINGROUP
        ),
    Nested2PartySubIDType(807,
        INT
        ),
    AllocIntermedReqType(808,
        INT
            ,new String[]{
        "1",//PENDING_ACCEPT
        "2",//PENDING_RELEASE
        "3",//PENDING_REVERSAL
        "4",//ACCEPT
        "5",//BLOCK_LEVEL_REJECT
        "6",//ACCOUNT_LEVEL_REJECT
            }
        
        ),
    UnderlyingPx(810,
        PRICE
        ),
    PriceDelta(811,
        FLOAT
        ),
    ApplQueueMax(812,
        INT
        ),
    ApplQueueDepth(813,
        INT
        ),
    ApplQueueResolution(814,
        INT
            ,new String[]{
        "0",//NO_ACTION_TAKEN
        "1",//QUEUE_FLUSHED
        "2",//OVERLAY_LAST
        "3",//END_SESSION
            }
        
        ),
    ApplQueueAction(815,
        INT
            ,new String[]{
        "0",//NO_ACTION_TAKEN
        "1",//QUEUE_FLUSHED
        "2",//OVERLAY_LAST
        "3",//END_SESSION
            }
        
        ),
    NoAltMDSource(816,
        NUMINGROUP
        ),
    AltMDSourceID(817,
        STRING
        ),
    SecondaryTradeReportID(818,
        STRING
        ),
    AvgPxIndicator(819,
        INT
            ,new String[]{
        "0",//NO_AVERAGE_PRICING
        "1",//TRADE_IS_PART_OF_AN_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID
        "2",//LAST_TRADE_IS_THE_AVERAGE_PRICE_GROUP_IDENTIFIED_BY_THE_TRADELINKID
            }
        
        ),
    TradeLinkID(820,
        STRING
        ),
    OrderInputDevice(821,
        STRING
        ),
    UnderlyingTradingSessionID(822,
        STRING
        ),
    UnderlyingTradingSessionSubID(823,
        STRING
        ),
    TradeLegRefID(824,
        STRING
        ),
    ExchangeRule(825,
        STRING
        ),
    TradeAllocIndicator(826,
        INT
            ,new String[]{
        "0",//ALLOCATION_NOT_REQUIRED
        "1",//ALLOCATION_REQUIRED
        "2",//USE_ALLOCATION_PROVIDED_WITH_THE_TRADE
        "3",//ALLOCATION_GIVE_UP_EXECUTOR
        "4",//ALLOCATION_FROM_EXECUTOR
        "5",//ALLOCATION_TO_CLAIM_ACCOUNT
            }
        
        ),
    ExpirationCycle(827,
        INT
            ,new String[]{
        "0",//EXPIRE_ON_TRADING_SESSION_CLOSE
        "1",//EXPIRE_ON_TRADING_SESSION_OPEN
        "2",//TRADING_ELIGIBILITY_EXPIRATION_SPECIFIED_IN_THE_DATE_AND_TIME_FIELDS_EVENTDATE
            }
        
        ),
    TrdType(828,
        INT
            ,new String[]{
        "0",//REGULAR_TRADE
        "1",//BLOCK_TRADE_1
        "2",//EFP
        "3",//TRANSFER
        "4",//LATE_TRADE
        "5",//T_TRADE
        "6",//WEIGHTED_AVERAGE_PRICE_TRADE
        "7",//BUNCHED_TRADE
        "8",//LATE_BUNCHED_TRADE
        "9",//PRIOR_REFERENCE_PRICE_TRADE
        "10",//AFTER_HOURS_TRADE
        "11",//EXCHANGE_FOR_RISK
        "12",//EXCHANGE_FOR_SWAP
        "13",//EXCHANGE_OF_FUTURES_FOR
        "14",//EXCHANGE_OF_OPTIONS_FOR_OPTIONS
        "15",//TRADING_AT_SETTLEMENT
        "16",//ALL_OR_NONE
        "17",//FUTURES_LARGE_ORDER_EXECUTION
        "18",//EXCHANGE_OF_FUTURES_FOR_FUTURES
        "19",//OPTION_INTERIM_TRADE
        "20",//OPTION_CABINET_TRADE
        "22",//PRIVATELY_NEGOTIATED_TRADES
        "23",//SUBSTITUTION_OF_FUTURES_FOR_FORWARDS
        "48",//NON_STANDARD_SETTLEMENT
        "49",//DERIVATIVE_RELATED_TRANSACTION
        "50",//PORTFOLIO_TRADE
        "51",//VOLUME_WEIGHTED_AVERAGE_TRADE
        "52",//EXCHANGE_GRANTED_TRADE
        "53",//REPURCHASE_AGREEMENT
        "54",//OTC
        "55",//EXCHANGE_BASIS_FACILITY
        "24",//ERROR_TRADE
        "25",//SPECIAL_CUM_DIVIDEND
        "26",//SPECIAL_EX_DIVIDEND
        "27",//SPECIAL_CUM_COUPON
        "28",//SPECIAL_EX_COUPON
        "29",//CASH_SETTLEMENT
        "30",//SPECIAL_PRICE
        "31",//GUARANTEED_DELIVERY
        "32",//SPECIAL_CUM_RIGHTS
        "33",//SPECIAL_EX_RIGHTS
        "34",//SPECIAL_CUM_CAPITAL_REPAYMENTS
        "35",//SPECIAL_EX_CAPITAL_REPAYMENTS
        "36",//SPECIAL_CUM_BONUS
        "37",//SPECIAL_EX_BONUS
        "38",//BLOCK_TRADE_38
        "39",//WORKED_PRINCIPAL_TRADE
        "40",//BLOCK_TRADES
        "41",//NAME_CHANGE
        "42",//PORTFOLIO_TRANSFER
        "43",//PROROGATION_BUY
        "44",//PROROGATION_SELL
        "45",//OPTION_EXERCISE
        "46",//DELTA_NEUTRAL_TRANSACTION
        "47",//FINANCING_TRANSACTION
            }
        
        ),
    TrdSubType(829,
        INT
            ,new String[]{
        "0",//CMTA
        "1",//INTERNAL_TRANSFER_OR_ADJUSTMENT
        "2",//EXTERNAL_TRANSFER_OR_TRANSFER_OF_ACCOUNT
        "3",//REJECT_FOR_SUBMITTING_SIDE
        "4",//ADVISORY_FOR_CONTRA_SIDE
        "5",//OFFSET_DUE_TO_AN_ALLOCATION
        "6",//ONSET_DUE_TO_AN_ALLOCATION
        "7",//DIFFERENTIAL_SPREAD
        "8",//IMPLIED_SPREAD_LEG_EXECUTED_AGAINST_AN_OUTRIGHT
        "9",//TRANSACTION_FROM_EXERCISE
        "10",//TRANSACTION_FROM_ASSIGNMENT
        "11",//ACATS
        "33",//OFF_HOURS_TRADE
        "34",//ON_HOURS_TRADE
        "35",//OTC_QUOTE
        "36",//CONVERTED_SWAP
        "14",//AI
        "15",//B
        "16",//K
        "17",//LC
        "18",//M
        "19",//N
        "20",//NM
        "21",//NR
        "22",//P
        "23",//PA
        "24",//PC
        "25",//PN
        "26",//R
        "27",//RO
        "28",//RT
        "29",//SW
        "30",//T
        "31",//WN
        "32",//WT
        "37",//CROSSED_TRADE
        "38",//INTERIM_PROTECTED_TRADE
        "39",//LARGE_IN_SCALE
            }
        
        ),
    TransferReason(830,
        STRING
        ),
    TotNumAssignmentReports(832,
        INT
        ),
    AsgnRptID(833,
        STRING
        ),
    ThresholdAmount(834,
        PRICEOFFSET
        ),
    PegMoveType(835,
        INT
            ,new String[]{
        "0",//FLOATING
        "1",//FIXED
            }
        
        ),
    PegOffsetType(836,
        INT
            ,new String[]{
        "0",//PRICE
        "1",//BASIS_POINTS
        "2",//TICKS
        "3",//PRICE_TIER
            }
        
        ),
    PegLimitType(837,
        INT
            ,new String[]{
        "0",//OR_BETTER
        "1",//STRICT
        "2",//OR_WORSE
            }
        
        ),
    PegRoundDirection(838,
        INT
            ,new String[]{
        "1",//MORE_AGGRESSIVE
        "2",//MORE_PASSIVE
            }
        
        ),
    PeggedPrice(839,
        PRICE
        ),
    PegScope(840,
        INT
            ,new String[]{
        "1",//LOCAL
        "2",//NATIONAL
        "3",//GLOBAL
        "4",//NATIONAL_EXCLUDING_LOCAL
            }
        
        ),
    DiscretionMoveType(841,
        INT
            ,new String[]{
        "0",//FLOATING
        "1",//FIXED
            }
        
        ),
    DiscretionOffsetType(842,
        INT
            ,new String[]{
        "0",//PRICE
        "1",//BASIS_POINTS
        "2",//TICKS
        "3",//PRICE_TIER
            }
        
        ),
    DiscretionLimitType(843,
        INT
            ,new String[]{
        "0",//OR_BETTER
        "1",//STRICT
        "2",//OR_WORSE
            }
        
        ),
    DiscretionRoundDirection(844,
        INT
            ,new String[]{
        "1",//MORE_AGGRESSIVE
        "2",//MORE_PASSIVE
            }
        
        ),
    DiscretionPrice(845,
        PRICE
        ),
    DiscretionScope(846,
        INT
            ,new String[]{
        "1",//LOCAL
        "2",//NATIONAL
        "3",//GLOBAL
        "4",//NATIONAL_EXCLUDING_LOCAL
            }
        
        ),
    TargetStrategy(847,
        INT
            ,new String[]{
        "1",//VWAP
        "2",//PARTICIPATE
        "3",//MININIZE_MARKET_IMPACT
            }
        
        ),
    TargetStrategyParameters(848,
        STRING
        ),
    ParticipationRate(849,
        PERCENTAGE
        ),
    TargetStrategyPerformance(850,
        FLOAT
        ),
    LastLiquidityInd(851,
        INT
            ,new String[]{
        "1",//ADDED_LIQUIDITY
        "2",//REMOVED_LIQUIDITY
        "3",//LIQUIDITY_ROUTED_OUT
        "4",//AUCTION
            }
        
        ),
    PublishTrdIndicator(852,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    ShortSaleReason(853,
        INT
            ,new String[]{
        "0",//DEALER_SOLD_SHORT
        "1",//DEALER_SOLD_SHORT_EXEMPT
        "2",//SELLING_CUSTOMER_SOLD_SHORT
        "3",//SELLING_CUSTOMER_SOLD_SHORT_EXEMPT
        "4",//QUALIFIED_SERVICE_REPRESENTATIVE
        "5",//QSR_OR_AGU_CONTRA_SIDE_SOLD_SHORT_EXEMPT
            }
        
        ),
    QtyType(854,
        INT
            ,new String[]{
        "0",//UNITS
        "1",//CONTRACTS
        "2",//UNITS_OF_MEASURE_PER_TIME_UNIT
            }
        
        ),
    SecondaryTrdType(855,
        INT
        ),
    TradeReportType(856,
        INT
            ,new String[]{
        "0",//SUBMIT
        "1",//ALLEGED_1
        "2",//ACCEPT
        "3",//DECLINE
        "4",//ADDENDUM
        "5",//NO_WAS
        "6",//TRADE_REPORT_CANCEL
        "7",//7
        "8",//DEFAULTED
        "9",//INVALID_CMTA
        "10",//PENDED
        "11",//ALLEGED_NEW
        "12",//ALLEGED_ADDENDUM
        "13",//ALLEGED_NO_WAS
        "14",//ALLEGED_TRADE_REPORT_CANCEL
        "15",//ALLEGED_15
            }
        
        ),
    AllocNoOrdersType(857,
        INT
            ,new String[]{
        "0",//NOT_SPECIFIED
        "1",//EXPLICIT_LIST_PROVIDED
            }
        
        ),
    SharedCommission(858,
        AMT
        ),
    ConfirmReqID(859,
        STRING
        ),
    AvgParPx(860,
        PRICE
        ),
    ReportedPx(861,
        PRICE
        ),
    NoCapacities(862,
        NUMINGROUP
        ),
    OrderCapacityQty(863,
        QTY
        ),
    NoEvents(864,
        NUMINGROUP
        ),
    EventType(865,
        INT
            ,new String[]{
        "1",//PUT
        "2",//CALL
        "3",//TENDER
        "4",//SINKING_FUND_CALL
        "5",//ACTIVATION
        "6",//INACTIVIATION
        "7",//LAST_ELIGIBLE_TRADE_DATE
        "8",//SWAP_START_DATE
        "9",//SWAP_END_DATE
        "10",//SWAP_ROLL_DATE
        "11",//SWAP_NEXT_START_DATE
        "12",//SWAP_NEXT_ROLL_DATE
        "13",//FIRST_DELIVERY_DATE
        "14",//LAST_DELIVERY_DATE
        "15",//INITIAL_INVENTORY_DUE_DATE
        "16",//FINAL_INVENTORY_DUE_DATE
        "17",//FIRST_INTENT_DATE
        "18",//LAST_INTENT_DATE
        "19",//POSITION_REMOVAL_DATE
        "99",//OTHER
            }
        
        ),
    EventDate(866,
        LOCALMKTDATE
        ),
    EventPx(867,
        PRICE
        ),
    EventText(868,
        STRING
        ),
    PctAtRisk(869,
        PERCENTAGE
        ),
    NoInstrAttrib(870,
        NUMINGROUP
        ),
    InstrAttribType(871,
        INT
            ,new String[]{
        "1",//FLAT
        "2",//ZERO_COUPON
        "3",//INTEREST_BEARING
        "4",//NO_PERIODIC_PAYMENTS
        "5",//VARIABLE_RATE
        "6",//LESS_FEE_FOR_PUT
        "7",//STEPPED_COUPON
        "8",//COUPON_PERIOD
        "9",//WHEN_AND_IF_ISSUED
        "10",//ORIGINAL_ISSUE_DISCOUNT
        "11",//CALLABLE_PUTTABLE
        "12",//ESCROWED_TO_MATURITY
        "13",//ESCROWED_TO_REDEMPTION_DATE
        "14",//PRE_REFUNDED
        "15",//IN_DEFAULT
        "16",//UNRATED
        "17",//TAXABLE
        "18",//INDEXED
        "19",//SUBJECT_TO_ALTERNATIVE_MINIMUM_TAX
        "20",//ORIGINAL_ISSUE_DISCOUNT_PRICE_SUPPLY_PRICE_IN_THE_INSTRATTRIBVALUE
        "21",//CALLABLE_BELOW_MATURITY_VALUE
        "22",//CALLABLE_WITHOUT_NOTICE_BY_MAIL_TO_HOLDER_UNLESS_REGISTERED
        "23",//PRICE_TICK_RULES_FOR_SECURITY
        "24",//TRADE_TYPE_ELIGIBILITY_DETAILS_FOR_SECURITY
        "25",//INSTRUMENT_DENOMINATOR
        "26",//INSTRUMENT_NUMERATOR
        "27",//INSTRUMENT_PRICE_PRECISION
        "28",//INSTRUMENT_STRIKE_PRICE
        "29",//TRADEABLE_INDICATOR
        "99",//TEXT_SUPPLY_THE_TEXT_OF_THE_ATTRIBUTE_OR_DISCLAIMER_IN_THE_INSTRATTRIBVALUE
            }
        
        ),
    InstrAttribValue(872,
        STRING
        ),
    DatedDate(873,
        LOCALMKTDATE
        ),
    InterestAccrualDate(874,
        LOCALMKTDATE
        ),
    CPProgram(875,
        INT
            ,new String[]{
        "1",//3
        "2",//4
        "99",//OTHER
            }
        
        ),
    CPRegType(876,
        STRING
        ),
    UnderlyingCPProgram(877,
        STRING
        ),
    UnderlyingCPRegType(878,
        STRING
        ),
    UnderlyingQty(879,
        QTY
        ),
    TrdMatchID(880,
        STRING
        ),
    SecondaryTradeReportRefID(881,
        STRING
        ),
    UnderlyingDirtyPrice(882,
        PRICE
        ),
    UnderlyingEndPrice(883,
        PRICE
        ),
    UnderlyingStartValue(884,
        AMT
        ),
    UnderlyingCurrentValue(885,
        AMT
        ),
    UnderlyingEndValue(886,
        AMT
        ),
    NoUnderlyingStips(887,
        NUMINGROUP
        ),
    UnderlyingStipType(888,
        STRING
        ),
    UnderlyingStipValue(889,
        STRING
        ),
    MaturityNetMoney(890,
        AMT
        ),
    MiscFeeBasis(891,
        INT
            ,new String[]{
        "0",//ABSOLUTE
        "1",//PER_UNIT
        "2",//PERCENTAGE
            }
        
        ),
    TotNoAllocs(892,
        INT
        ),
    LastFragment(893,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    CollReqID(894,
        STRING
        ),
    CollAsgnReason(895,
        INT
            ,new String[]{
        "0",//INITIAL
        "1",//SCHEDULED
        "2",//TIME_WARNING
        "3",//MARGIN_DEFICIENCY
        "4",//MARGIN_EXCESS
        "5",//FORWARD_COLLATERAL_DEMAND
        "6",//EVENT_OF_DEFAULT
        "7",//ADVERSE_TAX_EVENT
            }
        
        ),
    CollInquiryQualifier(896,
        INT
            ,new String[]{
        "0",//TRADE_DATE
        "1",//GC_INSTRUMENT
        "2",//COLLATERAL_INSTRUMENT
        "3",//SUBSTITUTION_ELIGIBLE
        "4",//NOT_ASSIGNED
        "5",//PARTIALLY_ASSIGNED
        "6",//FULLY_ASSIGNED
        "7",//OUTSTANDING_TRADES
            }
        
        ),
    NoTrades(897,
        NUMINGROUP
        ),
    MarginRatio(898,
        PERCENTAGE
        ),
    MarginExcess(899,
        AMT
        ),
    TotalNetValue(900,
        AMT
        ),
    CashOutstanding(901,
        AMT
        ),
    CollAsgnID(902,
        STRING
        ),
    CollAsgnTransType(903,
        INT
            ,new String[]{
        "0",//NEW
        "1",//REPLACE
        "2",//CANCEL
        "3",//RELEASE
        "4",//REVERSE
            }
        
        ),
    CollRespID(904,
        STRING
        ),
    CollAsgnRespType(905,
        INT
            ,new String[]{
        "0",//RECEIVED
        "1",//ACCEPTED
        "2",//DECLINED
        "3",//REJECTED
            }
        
        ),
    CollAsgnRejectReason(906,
        INT
            ,new String[]{
        "0",//UNKNOWN_DEAL
        "1",//UNKNOWN_OR_INVALID_INSTRUMENT
        "2",//UNAUTHORIZED_TRANSACTION
        "3",//INSUFFICIENT_COLLATERAL
        "4",//INVALID_TYPE_OF_COLLATERAL
        "5",//EXCESSIVE_SUBSTITUTION
        "99",//OTHER
            }
        
        ),
    CollAsgnRefID(907,
        STRING
        ),
    CollRptID(908,
        STRING
        ),
    CollInquiryID(909,
        STRING
        ),
    CollStatus(910,
        INT
            ,new String[]{
        "0",//UNASSIGNED
        "1",//PARTIALLY_ASSIGNED
        "2",//ASSIGNMENT_PROPOSED
        "3",//ASSIGNED
        "4",//CHALLENGED
            }
        
        ),
    TotNumReports(911,
        INT
        ),
    LastRptRequested(912,
        BOOLEAN
            ,new String[]{
        "N",//NO
        "Y",//YES
            }
        
        ),
    AgreementDesc(913,
        STRING
        ),
    AgreementID(914,
        STRING
        ),
    AgreementDate(915,
        LOCALMKTDATE
        ),
    StartDate(916,
        LOCALMKTDATE
        ),
    EndDate(917,
        LOCALMKTDATE
        ),
    AgreementCurrency(918,
        CURRENCY
        ),
    DeliveryType(919,
        INT
            ,new String[]{
        "0",//VERSUS_PAYMENT_DELIVER
        "1",//FREE_DELIVER
        "2",//TRI_PARTY
        "3",//HOLD_IN_CUSTODY
            }
        
        ),
    EndAccruedInterestAmt(920,
        AMT
        ),
    StartCash(921,
        AMT
        ),
    EndCash(922,
        AMT
        ),
    UserRequestID(923,
        STRING
        ),
    UserRequestType(924,
        INT
            ,new String[]{
        "1",//LOG_ON_USER
        "2",//LOG_OFF_USER
        "3",//CHANGE_PASSWORD_FOR_USER
        "4",//REQUEST_INDIVIDUAL_USER_STATUS
            }
        
        ),
    NewPassword(925,
        STRING
        ),
    UserStatus(926,
        INT
            ,new String[]{
        "1",//LOGGED_IN
        "2",//NOT_LOGGED_IN
        "3",//USER_NOT_RECOGNISED
        "4",//PASSWORD_INCORRECT
        "5",//PASSWORD_CHANGED
        "6",//OTHER
        "7",//FORCED_USER_LOGOUT_BY_EXCHANGE
        "8",//SESSION_SHUTDOWN_WARNING
            }
        
        ),
    UserStatusText(927,
        STRING
        ),
    StatusValue(928,
        INT
            ,new String[]{
        "1",//CONNECTED
        "2",//NOT_CONNECTED_2
        "3",//NOT_CONNECTED_3
        "4",//IN_PROCESS
            }
        
        ),
    StatusText(929,
        STRING
        ),
    RefCompID(930,
        STRING
        ),
    RefSubID(931,
        STRING
        ),
    NetworkResponseID(932,
        STRING
        ),
    NetworkRequestID(933,
        STRING
        ),
    LastNetworkResponseID(934,
        STRING
        ),
    NetworkRequestType(935,
        INT
            ,new String[]{
        "1",//SNAPSHOT
        "2",//SUBSCRIBE
        "4",//STOP_SUBSCRIBING
        "8",//LEVEL_OF_DETAIL_THEN_NOCOMPIDS_BECOMES_REQUIRED
            }
        
        ),
    NoCompIDs(936,
        NUMINGROUP
        ),
    NetworkStatusResponseType(937,
        INT
            ,new String[]{
        "1",//FULL
        "2",//INCREMENTAL_UPDATE
            }
        
        ),
    NoCollInquiryQualifier(938,
        NUMINGROUP
        ),
    TrdRptStatus(939,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "1",//REJECTED
        "3",//ACCEPTED_WITH_ERRORS
            }
        
        ),
    AffirmStatus(940,
        INT
            ,new String[]{
        "1",//RECEIVED
        "2",//CONFIRM_REJECTED_IE_NOT_AFFIRMED
        "3",//AFFIRMED
            }
        
        ),
    UnderlyingStrikeCurrency(941,
        CURRENCY
        ),
    LegStrikeCurrency(942,
        CURRENCY
        ),
    TimeBracket(943,
        STRING
        ),
    CollAction(944,
        INT
            ,new String[]{
        "0",//RETAIN
        "1",//ADD
        "2",//REMOVE
            }
        
        ),
    CollInquiryStatus(945,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "1",//ACCEPTED_WITH_WARNINGS
        "2",//COMPLETED
        "3",//COMPLETED_WITH_WARNINGS
        "4",//REJECTED
            }
        
        ),
    CollInquiryResult(946,
        INT
            ,new String[]{
        "0",//SUCCESSFUL
        "1",//INVALID_OR_UNKNOWN_INSTRUMENT
        "2",//INVALID_OR_UNKNOWN_COLLATERAL_TYPE
        "3",//INVALID_PARTIES
        "4",//INVALID_TRANSPORT_TYPE_REQUESTED
        "5",//INVALID_DESTINATION_REQUESTED
        "6",//NO_COLLATERAL_FOUND_FOR_THE_TRADE_SPECIFIED
        "7",//NO_COLLATERAL_FOUND_FOR_THE_ORDER_SPECIFIED
        "8",//COLLATERAL_INQUIRY_TYPE_NOT_SUPPORTED
        "9",//UNAUTHORIZED_FOR_COLLATERAL_INQUIRY
        "99",//OTHER
            }
        
        ),
    StrikeCurrency(947,
        CURRENCY
        ),
    NoNested3PartyIDs(948,
        NUMINGROUP
        ),
    Nested3PartyID(949,
        STRING
        ),
    Nested3PartyIDSource(950,
        CHAR
        ),
    Nested3PartyRole(951,
        INT
        ),
    NoNested3PartySubIDs(952,
        NUMINGROUP
        ),
    Nested3PartySubID(953,
        STRING
        ),
    Nested3PartySubIDType(954,
        INT
        ),
    LegContractSettlMonth(955,
        MONTHYEAR
        ),
    LegInterestAccrualDate(956,
        LOCALMKTDATE
        ),
    NoStrategyParameters(957,
        NUMINGROUP
        ),
    StrategyParameterName(958,
        STRING
        ),
    StrategyParameterType(959,
        INT
            ,new String[]{
        "1",//INT
        "2",//LENGTH
        "3",//NUMINGROUP
        "4",//SEQNUM
        "5",//TAGNUM
        "6",//FLOAT
        "7",//QTY
        "8",//PRICE
        "9",//PRICEOFFSET
        "10",//AMT
        "11",//PERCENTAGE
        "12",//CHAR
        "13",//BOOLEAN
        "14",//STRING
        "15",//MULTIPLECHARVALUE
        "16",//CURRENCY
        "17",//EXCHANGE
        "18",//MONTHYEAR
        "19",//UTCTIMESTAMP
        "20",//UTCTIMEONLY
        "21",//LOCALMKTDATE
        "22",//UTCDATEONLY
        "23",//DATA
        "24",//MULTIPLESTRINGVALUE
        "25",//COUNTRY
        "26",//LANGUAGE
        "27",//TZTIMEONLY
        "28",//TZTIMESTAMP
        "29",//TENOR
            }
        
        ),
    StrategyParameterValue(960,
        STRING
        ),
    HostCrossID(961,
        STRING
        ),
    SideTimeInForce(962,
        UTCTIMESTAMP
        ),
    MDReportID(963,
        INT
        ),
    SecurityReportID(964,
        INT
        ),
    SecurityStatus(965,
        STRING
            ,new String[]{
        "1",//ACTIVE
        "2",//INACTIVE
            }
        
        ),
    SettleOnOpenFlag(966,
        STRING
        ),
    StrikeMultiplier(967,
        FLOAT
        ),
    StrikeValue(968,
        FLOAT
        ),
    MinPriceIncrement(969,
        FLOAT
        ),
    PositionLimit(970,
        INT
        ),
    NTPositionLimit(971,
        INT
        ),
    UnderlyingAllocationPercent(972,
        PERCENTAGE
        ),
    UnderlyingCashAmount(973,
        AMT
        ),
    UnderlyingCashType(974,
        STRING
            ,new String[]{
        "FIXED",//FIXED
        "DIFF",//DIFF
            }
        
        ),
    UnderlyingSettlementType(975,
        INT
            ,new String[]{
        "2",//T_PLUS_1
        "4",//T_PLUS_3
        "5",//T_PLUS_4
            }
        
        ),
    QuantityDate(976,
        LOCALMKTDATE
        ),
    ContIntRptID(977,
        STRING
        ),
    LateIndicator(978,
        BOOLEAN
        ),
    InputSource(979,
        STRING
        ),
    SecurityUpdateAction(980,
        CHAR
            ,new String[]{
        "A",//ADD
        "D",//DELETE
        "M",//MODIFY
            }
        
        ),
    NoExpiration(981,
        NUMINGROUP
        ),
    ExpirationQtyType(982,
        INT
            ,new String[]{
        "1",//AUTO_EXERCISE
        "2",//NON_AUTO_EXERCISE
        "3",//FINAL_WILL_BE_EXERCISED
        "4",//CONTRARY_INTENTION
        "5",//DIFFERENCE
            }
        
        ),
    ExpQty(983,
        QTY
        ),
    NoUnderlyingAmounts(984,
        NUMINGROUP
        ),
    UnderlyingPayAmount(985,
        AMT
        ),
    UnderlyingCollectAmount(986,
        AMT
        ),
    UnderlyingSettlementDate(987,
        LOCALMKTDATE
        ),
    UnderlyingSettlementStatus(988,
        STRING
        ),
    SecondaryIndividualAllocID(989,
        STRING
        ),
    LegReportID(990,
        STRING
        ),
    RndPx(991,
        PRICE
        ),
    IndividualAllocType(992,
        INT
            ,new String[]{
        "1",//SUB_ALLOCATE
        "2",//THIRD_PARTY_ALLOCATION
            }
        
        ),
    AllocCustomerCapacity(993,
        STRING
        ),
    TierCode(994,
        STRING
        ),
    UnitOfMeasure(996,
        STRING
            ,new String[]{
        "Bcf",//BILLION_CUBIC_FEET
        "MMbbl",//MILLION_BARRELS
        "MMBtu",//ONE_MILLION_BTU
        "MWh",//MEGAWATT_HOURS
        "Bbl",//BARRELS
        "Bu",//BUSHELS
        "lbs",//POUNDS
        "Gal",//GALLONS
        "oz_tr",//TROY_OUNCES
        "t",//METRIC_TONS
        "tn",//TONS
        "USD",//US_DOLLARS
        "Alw",//ALLOWANCES
            }
        
        ),
    TimeUnit(997,
        STRING
            ,new String[]{
        "H",//HOUR
        "Min",//MINUTE
        "S",//SECOND
        "D",//DAY
        "Wk",//WEEK
        "Mo",//MONTH
        "Yr",//YEAR
            }
        
        ),
    UnderlyingUnitOfMeasure(998,
        STRING
        ),
    LegUnitOfMeasure(999,
        STRING
        ),
    UnderlyingTimeUnit(1000,
        STRING
        ),
    LegTimeUnit(1001,
        STRING
        ),
    AllocMethod(1002,
        INT
            ,new String[]{
        "1",//AUTOMATIC
        "2",//GUARANTOR
        "3",//MANUAL
            }
        
        ),
    TradeID(1003,
        STRING
        ),
    SideTradeReportID(1005,
        STRING
        ),
    SideFillStationCd(1006,
        STRING
        ),
    SideReasonCd(1007,
        STRING
        ),
    SideTrdSubTyp(1008,
        INT
        ),
    SideLastQty(1009,
        INT
        ),
    MessageEventSource(1011,
        STRING
        ),
    SideTrdRegTimestamp(1012,
        UTCTIMESTAMP
        ),
    SideTrdRegTimestampType(1013,
        INT
        ),
    SideTrdRegTimestampSrc(1014,
        STRING
        ),
    AsOfIndicator(1015,
        CHAR
            ,new String[]{
        "0",//FALSE
        "1",//TRUE
            }
        
        ),
    NoSideTrdRegTS(1016,
        NUMINGROUP
        ),
    LegOptionRatio(1017,
        FLOAT
        ),
    NoInstrumentParties(1018,
        NUMINGROUP
        ),
    InstrumentPartyID(1019,
        STRING
        ),
    TradeVolume(1020,
        QTY
        ),
    MDBookType(1021,
        INT
            ,new String[]{
        "1",//TOP_OF_BOOK
        "2",//PRICE_DEPTH
        "3",//ORDER_DEPTH
            }
        
        ),
    MDFeedType(1022,
        STRING
        ),
    MDPriceLevel(1023,
        INT
        ),
    MDOriginType(1024,
        INT
            ,new String[]{
        "0",//BOOK
        "1",//OFF_BOOK
        "2",//CROSS
            }
        
        ),
    FirstPx(1025,
        PRICE
        ),
    MDEntrySpotRate(1026,
        FLOAT
        ),
    MDEntryForwardPoints(1027,
        PRICEOFFSET
        ),
    ManualOrderIndicator(1028,
        BOOLEAN
        ),
    CustDirectedOrder(1029,
        BOOLEAN
        ),
    ReceivedDeptID(1030,
        STRING
        ),
    CustOrderHandlingInst(1031,
        MULTIPLESTRINGVALUE
            ,new String[]{
        "ADD",//ADD_ON_ORDER
        "AON",//ALL_OR_NONE
        "CNH",//CASH_NOT_HELD
        "DIR",//DIRECTED_ORDER
        "E.W",//EXCHANGE_FOR_PHYSICAL_TRANSACTION
        "FOK",//FILL_OR_KILL
        "IO",//IMBALANCE_ONLY
        "IOC",//IMMEDIATE_OR_CANCEL
        "LOO",//LIMIT_ON_OPEN
        "LOC",//LIMIT_ON_CLOSE
        "MAO",//MARKET_AT_OPEN
        "MAC",//MARKET_AT_CLOSE
        "MOO",//MARKET_ON_OPEN
        "MOC",//MARKET_ON_CLOSE
        "MQT",//MINIMUM_QUANTITY
        "NH",//NOT_HELD
        "OVD",//OVER_THE_DAY
        "PEG",//PEGGED
        "RSV",//RESERVE_SIZE_ORDER
        "S.W",//STOP_STOCK_TRANSACTION
        "SCL",//SCALE
        "TMO",//TIME_ORDER
        "TS",//TRAILING_STOP
        "WRK",//WORK
            }
        
        ),
    OrderHandlingInstSource(1032,
        INT
            ,new String[]{
        "1",//NASD_OATS
            }
        
        ),
    DeskType(1033,
        STRING
            ,new String[]{
        "A",//AGENCY
        "AR",//ARBITRAGE
        "D",//DERIVATIVES
        "IN",//INTERNATIONAL
        "IS",//INSTITUTIONAL
        "O",//OTHER
        "PF",//PREFERRED_TRADING
        "PR",//PROPRIETARY
        "PT",//PROGRAM_TRADING
        "S",//SALES
        "T",//TRADING
            }
        
        ),
    DeskTypeSource(1034,
        INT
            ,new String[]{
        "1",//NASD_OATS
            }
        
        ),
    DeskOrderHandlingInst(1035,
        MULTIPLESTRINGVALUE
            ,new String[]{
        "ADD",//ADD_ON_ORDER
        "AON",//ALL_OR_NONE
        "CNH",//CASH_NOT_HELD
        "DIR",//DIRECTED_ORDER
        "E.W",//EXCHANGE_FOR_PHYSICAL_TRANSACTION
        "FOK",//FILL_OR_KILL
        "IO",//IMBALANCE_ONLY
        "IOC",//IMMEDIATE_OR_CANCEL
        "LOO",//LIMIT_ON_OPEN
        "LOC",//LIMIT_ON_CLOSE
        "MAO",//MARKET_AT_OPEN
        "MAC",//MARKET_AT_CLOSE
        "MOO",//MARKET_ON_OPEN
        "MOC",//MARKET_ON_CLOSE
        "MQT",//MINIMUM_QUANTITY
        "NH",//NOT_HELD
        "OVD",//OVER_THE_DAY
        "PEG",//PEGGED
        "RSV",//RESERVE_SIZE_ORDER
        "S.W",//STOP_STOCK_TRANSACTION
        "SCL",//SCALE
        "TMO",//TIME_ORDER
        "TS",//TRAILING_STOP
        "WRK",//WORK
            }
        
        ),
    ExecAckStatus(1036,
        CHAR
            ,new String[]{
        "0",//RECEIVED_NOT_YET_PROCESSED
        "1",//ACCEPTED
        "2",//DONT_KNOW
            }
        
        ),
    UnderlyingDeliveryAmount(1037,
        AMT
        ),
    UnderlyingCapValue(1038,
        AMT
        ),
    UnderlyingSettlMethod(1039,
        STRING
        ),
    SecondaryTradeID(1040,
        STRING
        ),
    FirmTradeID(1041,
        STRING
        ),
    SecondaryFirmTradeID(1042,
        STRING
        ),
    CollApplType(1043,
        INT
            ,new String[]{
        "0",//SPECIFIC_DEPOSIT
        "1",//GENERAL
            }
        
        ),
    UnderlyingAdjustedQuantity(1044,
        QTY
        ),
    UnderlyingFXRate(1045,
        FLOAT
        ),
    UnderlyingFXRateCalc(1046,
        CHAR
            ,new String[]{
        "D",//DIVIDE
        "M",//MULTIPLY
            }
        
        ),
    AllocPositionEffect(1047,
        CHAR
            ,new String[]{
        "O",//OPEN
        "C",//CLOSE
        "R",//ROLLED
        "F",//FIFO
            }
        
        ),
    DealingCapacity(1048,
        CHAR
            ,new String[]{
        "A",//AGENT
        "P",//PRINCIPAL
        "R",//RISKLESS_PRINCIPAL
            }
        
        ),
    InstrmtAssignmentMethod(1049,
        CHAR
        ),
    InstrumentPartyIDSource(1050,
        CHAR
        ),
    InstrumentPartyRole(1051,
        INT
        ),
    NoInstrumentPartySubIDs(1052,
        NUMINGROUP
        ),
    InstrumentPartySubID(1053,
        STRING
        ),
    InstrumentPartySubIDType(1054,
        INT
        ),
    PositionCurrency(1055,
        STRING
        ),
    CalculatedCcyLastQty(1056,
        QTY
        ),
    AggressorIndicator(1057,
        BOOLEAN
            ,new String[]{
        "Y",//YES
        "N",//NO
            }
        
        ),
    NoUndlyInstrumentParties(1058,
        NUMINGROUP
        ),
    UnderlyingInstrumentPartyID(1059,
        STRING
        ),
    UnderlyingInstrumentPartyIDSource(1060,
        CHAR
        ),
    UnderlyingInstrumentPartyRole(1061,
        INT
        ),
    NoUndlyInstrumentPartySubIDs(1062,
        NUMINGROUP
        ),
    UnderlyingInstrumentPartySubID(1063,
        STRING
        ),
    UnderlyingInstrumentPartySubIDType(1064,
        INT
        ),
    BidSwapPoints(1065,
        PRICEOFFSET
        ),
    OfferSwapPoints(1066,
        PRICEOFFSET
        ),
    LegBidForwardPoints(1067,
        PRICEOFFSET
        ),
    LegOfferForwardPoints(1068,
        PRICEOFFSET
        ),
    SwapPoints(1069,
        PRICEOFFSET
        ),
    MDQuoteType(1070,
        INT
            ,new String[]{
        "0",//INDICATIVE
        "1",//TRADEABLE
        "2",//RESTRICTED_TRADEABLE
        "3",//COUNTER
        "4",//INDICATIVE_AND_TRADEABLE
            }
        
        ),
    LastSwapPoints(1071,
        PRICEOFFSET
        ),
    SideGrossTradeAmt(1072,
        AMT
        ),
    LegLastForwardPoints(1073,
        PRICEOFFSET
        ),
    LegCalculatedCcyLastQty(1074,
        QTY
        ),
    LegGrossTradeAmt(1075,
        AMT
        ),
    MaturityTime(1079,
        TZTIMEONLY
        ),
    RefOrderID(1080,
        STRING
        ),
    RefOrderIDSource(1081,
        CHAR
            ,new String[]{
        "0",//SECONDARYORDERID
        "1",//ORDERID
        "2",//MDENTRYID
        "3",//QUOTEENTRYID
        "4",//ORIGINAL_ORDER_ID
            }
        
        ),
    SecondaryDisplayQty(1082,
        QTY
        ),
    DisplayWhen(1083,
        CHAR
            ,new String[]{
        "1",//IMMEDIATE
        "2",//EXHAUST
            }
        
        ),
    DisplayMethod(1084,
        CHAR
            ,new String[]{
        "1",//INITIAL
        "2",//NEW
        "3",//RANDOM
        "4",//UNDISCLOSED
            }
        
        ),
    DisplayLowQty(1085,
        QTY
        ),
    DisplayHighQty(1086,
        QTY
        ),
    DisplayMinIncr(1087,
        QTY
        ),
    RefreshQty(1088,
        QTY
        ),
    MatchIncrement(1089,
        QTY
        ),
    MaxPriceLevels(1090,
        INT
        ),
    PreTradeAnonymity(1091,
        BOOLEAN
        ),
    PriceProtectionScope(1092,
        CHAR
            ,new String[]{
        "0",//NONE
        "1",//LOCAL
        "2",//NATIONAL
        "3",//GLOBAL
            }
        
        ),
    LotType(1093,
        CHAR
            ,new String[]{
        "1",//ODD_LOT
        "2",//ROUND_LOT
        "3",//BLOCK_LOT
        "4",//ROUND_LOT_BASED_UPON_UNITOFMEASURE
            }
        
        ),
    PegPriceType(1094,
        INT
            ,new String[]{
        "1",//LAST_PEG
        "2",//MID_PRICE_PEG
        "3",//OPENING_PEG
        "4",//MARKET_PEG
        "5",//PRIMARY_PEG
        "7",//PEG_TO_VWAP
        "8",//TRAILING_STOP_PEG
        "9",//PEG_TO_LIMIT_PRICE
            }
        
        ),
    PeggedRefPrice(1095,
        PRICE
        ),
    PegSecurityIDSource(1096,
        STRING
        ),
    PegSecurityID(1097,
        STRING
        ),
    PegSymbol(1098,
        STRING
        ),
    PegSecurityDesc(1099,
        STRING
        ),
    TriggerType(1100,
        CHAR
            ,new String[]{
        "1",//PARTIAL_EXECUTION
        "2",//SPECIFIED_TRADING_SESSION
        "3",//NEXT_AUCTION
        "4",//PRICE_MOVEMENT
            }
        
        ),
    TriggerAction(1101,
        CHAR
            ,new String[]{
        "1",//ACTIVATE
        "2",//MODIFY
        "3",//CANCEL
            }
        
        ),
    TriggerPrice(1102,
        PRICE
        ),
    TriggerSymbol(1103,
        STRING
        ),
    TriggerSecurityID(1104,
        STRING
        ),
    TriggerSecurityIDSource(1105,
        STRING
        ),
    TriggerSecurityDesc(1106,
        STRING
        ),
    TriggerPriceType(1107,
        CHAR
            ,new String[]{
        "1",//BEST_OFFER
        "2",//LAST_TRADE
        "3",//BEST_BID
        "4",//BEST_BID_OR_LAST_TRADE
        "5",//BEST_OFFER_OR_LAST_TRADE
        "6",//BEST_MID
            }
        
        ),
    TriggerPriceTypeScope(1108,
        CHAR
            ,new String[]{
        "0",//NONE
        "1",//LOCAL
        "2",//NATIONAL
        "3",//GLOBAL
            }
        
        ),
    TriggerPriceDirection(1109,
        CHAR
            ,new String[]{
        "U",//TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_UP_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE
        "D",//TRIGGER_IF_THE_PRICE_OF_THE_SPECIFIED_TYPE_GOES_DOWN_TO_OR_THROUGH_THE_SPECIFIED_TRIGGER_PRICE
            }
        
        ),
    TriggerNewPrice(1110,
        PRICE
        ),
    TriggerOrderType(1111,
        CHAR
            ,new String[]{
        "1",//MARKET
        "2",//LIMIT
            }
        
        ),
    TriggerNewQty(1112,
        QTY
        ),
    TriggerTradingSessionID(1113,
        STRING
        ),
    TriggerTradingSessionSubID(1114,
        STRING
        ),
    OrderCategory(1115,
        CHAR
            ,new String[]{
        "1",//ORDER
        "2",//QUOTE
        "3",//PRIVATELY_NEGOTIATED_TRADE
        "4",//MULTILEG_ORDER
        "5",//LINKED_ORDER
        "6",//QUOTE_REQUEST
        "7",//IMPLIED_ORDER
        "8",//CROSS_ORDER
        "9",//STREAMING_PRICE
            }
        
        ),
    NoRootPartyIDs(1116,
        NUMINGROUP
        ),
    RootPartyID(1117,
        STRING
        ),
    RootPartyIDSource(1118,
        CHAR
        ),
    RootPartyRole(1119,
        INT
        ),
    NoRootPartySubIDs(1120,
        NUMINGROUP
        ),
    RootPartySubID(1121,
        STRING
        ),
    RootPartySubIDType(1122,
        INT
        ),
    TradeHandlingInstr(1123,
        CHAR
            ,new String[]{
        "0",//TRADE_CONFIRMATION
        "1",//TWO_PARTY_REPORT
        "2",//ONE_PARTY_REPORT_FOR_MATCHING
        "3",//ONE_PARTY_REPORT_FOR_PASS_THROUGH
        "4",//AUTOMATED_FLOOR_ORDER_ROUTING
        "5",//TWO_PARTY_REPORT_FOR_CLAIM
            }
        
        ),
    OrigTradeHandlingInstr(1124,
        CHAR
        ),
    OrigTradeDate(1125,
        LOCALMKTDATE
        ),
    OrigTradeID(1126,
        STRING
        ),
    OrigSecondaryTradeID(1127,
        STRING
        ),
    ApplVerID(1128,
        STRING
            ,new String[]{
        "0",//FIX27
        "1",//FIX30
        "2",//FIX40
        "3",//FIX41
        "4",//FIX42
        "5",//FIX43
        "6",//FIX44
        "7",//FIX50
        "8",//FIX50SP1
        "9",//FIX50SP2
            }
        
        ),
    CstmApplVerID(1129,
        STRING
        ),
    RefApplVerID(1130,
        STRING
        ),
    RefCstmApplVerID(1131,
        STRING
        ),
    TZTransactTime(1132,
        TZTIMESTAMP
        ),
    ExDestinationIDSource(1133,
        CHAR
            ,new String[]{
        "B",//BIC
        "C",//GENERALLY_ACCEPTED_MARKET_PARTICIPANT_IDENTIFIER
        "D",//PROPRIETARY
        "E",//ISO_COUNTRY_CODE
        "G",//MIC
            }
        
        ),
    ReportedPxDiff(1134,
        BOOLEAN
        ),
    RptSys(1135,
        STRING
        ),
    AllocClearingFeeIndicator(1136,
        STRING
        ),
    DefaultApplVerID(1137,
        STRING
        ),
    DisplayQty(1138,
        QTY
        ),
    ExchangeSpecialInstructions(1139,
        STRING
        ),
    MaxTradeVol(1140,
        QTY
        ),
    NoMDFeedTypes(1141,
        NUMINGROUP
        ),
    MatchAlgorithm(1142,
        STRING
        ),
    MaxPriceVariation(1143,
        FLOAT
        ),
    ImpliedMarketIndicator(1144,
        INT
            ,new String[]{
        "0",//NOT_IMPLIED
        "1",//IMPLIED_IN
        "2",//IMPLIED_OUT
        "3",//BOTH_IMPLIED_IN_AND_IMPLIED_OUT
            }
        
        ),
    EventTime(1145,
        UTCTIMESTAMP
        ),
    MinPriceIncrementAmount(1146,
        AMT
        ),
    UnitOfMeasureQty(1147,
        QTY
        ),
    LowLimitPrice(1148,
        PRICE
        ),
    HighLimitPrice(1149,
        PRICE
        ),
    TradingReferencePrice(1150,
        PRICE
        ),
    SecurityGroup(1151,
        STRING
        ),
    LegNumber(1152,
        INT
        ),
    SettlementCycleNo(1153,
        INT
        ),
    SideCurrency(1154,
        CURRENCY
        ),
    SideSettlCurrency(1155,
        CURRENCY
        ),
    ApplExtID(1156,
        INT
        ),
    CcyAmt(1157,
        AMT
        ),
    NoSettlDetails(1158,
        NUMINGROUP
        ),
    SettlObligMode(1159,
        INT
            ,new String[]{
        "1",//PRELIMINARY
        "2",//FINAL
            }
        
        ),
    SettlObligMsgID(1160,
        STRING
        ),
    SettlObligID(1161,
        STRING
        ),
    SettlObligTransType(1162,
        CHAR
            ,new String[]{
        "C",//CANCEL
        "N",//NEW
        "R",//REPLACE
        "T",//RESTATE
            }
        
        ),
    SettlObligRefID(1163,
        STRING
        ),
    SettlObligSource(1164,
        CHAR
            ,new String[]{
        "1",//INSTRUCTIONS_OF_BROKER
        "2",//INSTRUCTIONS_FOR_INSTITUTION
        "3",//INVESTOR
            }
        
        ),
    NoSettlOblig(1165,
        NUMINGROUP
        ),
    QuoteMsgID(1166,
        STRING
        ),
    QuoteEntryStatus(1167,
        INT
            ,new String[]{
        "0",//ACCEPTED
        "5",//REJECTED
        "6",//REMOVED_FROM_MARKET
        "7",//EXPIRED
        "12",//LOCKED_MARKET_WARNING
        "13",//CROSS_MARKET_WARNING
        "14",//CANCELED_DUE_TO_LOCK_MARKET
        "15",//CANCELED_DUE_TO_CROSS_MARKET
        "16",//ACTIVE
            }
        
        ),
    TotNoCxldQuotes(1168,
        INT
        ),
    TotNoAccQuotes(1169,
        INT
        ),
    TotNoRejQuotes(1170,
        INT
        ),
    PrivateQuote(1171,
        BOOLEAN
        ),
    RespondentType(1172,
        INT
            ,new String[]{
        "1",//ALL_MARKET_PARTICIPANTS
        "2",//SPECIFIED_MARKET_PARTICIPANTS
        "3",//ALL_MARKET_MAKERS
        "4",//PRIMARY_MARKET_MAKER
            }
        
        ),
    MDSubBookType(1173,
        INT
        ),
    SecurityTradingEvent(1174,
        INT
            ,new String[]{
        "1",//ORDER_IMBALANCE_AUCTION_IS_EXTENDED
        "2",//TRADING_RESUMES
        "3",//PRICE_VOLATILITY_INTERRUPTION
        "4",//CHANGE_OF_TRADING_SESSION
        "5",//CHANGE_OF_TRADING_SUBSESSION
        "6",//CHANGE_OF_SECURITY_TRADING_STATUS
        "7",//CHANGE_OF_BOOK_TYPE
        "8",//CHANGE_OF_MARKET_DEPTH
            }
        
        ),
    NoStatsIndicators(1175,
        NUMINGROUP
        ),
    StatsType(1176,
        INT
            ,new String[]{
        "1",//EXCHANGE_LAST
        "2",//HIGH
        "3",//AVERAGE_PRICE
        "4",//TURNOVER
            }
        
        ),
    NoOfSecSizes(1177,
        NUMINGROUP
        ),
    MDSecSizeType(1178,
        INT
            ,new String[]{
        "1",//CUSTOMER
            }
        
        ),
    MDSecSize(1179,
        QTY
        ),
    ApplID(1180,
        STRING
        ),
    ApplSeqNum(1181,
        SEQNUM
        ),
    ApplBegSeqNum(1182,
        SEQNUM
        ),
    ApplEndSeqNum(1183,
        SEQNUM
        ),
    SecurityXMLLen(1184,
        LENGTH
        ),
    SecurityXML(1185,
        XMLDATA
        ),
    SecurityXMLSchema(1186,
        STRING
        ),
    RefreshIndicator(1187,
        BOOLEAN
        ),
    Volatility(1188,
        FLOAT
        ),
    TimeToExpiration(1189,
        FLOAT
        ),
    RiskFreeRate(1190,
        FLOAT
        ),
    PriceUnitOfMeasure(1191,
        STRING
        ),
    PriceUnitOfMeasureQty(1192,
        QTY
        ),
    SettlMethod(1193,
        CHAR
            ,new String[]{
        "C",//CASH_SETTLEMENT_REQUIRED
        "P",//PHYSICAL_SETTLEMENT_REQUIRED
            }
        
        ),
    ExerciseStyle(1194,
        INT
            ,new String[]{
        "0",//EUROPEAN
        "1",//AMERICAN
        "2",//BERMUDA
            }
        
        ),
    OptPayoutAmount(1195,
        AMT
        ),
    PriceQuoteMethod(1196,
        STRING
            ,new String[]{
        "STD",//STANDARD_MONEY_PER_UNIT_OF_A_PHYSICAL
        "INX",//INDEX
        "INT",//INTEREST_RATE_INDEX
        "PCTPAR",//PERCENT_OF_PAR
            }
        
        ),
    ValuationMethod(1197,
        STRING
            ,new String[]{
        "EQTY",//PREMIUM_STYLE
        "FUT",//FUTURES_STYLE_MARK_TO_MARKET
        "FUTDA",//FUTURES_STYLE_WITH_AN_ATTACHED_CASH_ADJUSTMENT
        "CDS",//CDS_STYLE_COLLATERALIZATION_OF_MARKET_TO_MARKET_AND_COUPON
        "CDSD",//CDS_IN_DELIVERY
            }
        
        ),
    ListMethod(1198,
        INT
            ,new String[]{
        "0",//PRE_LISTED_ONLY
        "1",//USER_REQUESTED
            }
        
        ),
    CapPrice(1199,
        PRICE
        ),
    FloorPrice(1200,
        PRICE
        ),
    NoStrikeRules(1201,
        NUMINGROUP
        ),
    StartStrikePxRange(1202,
        PRICE
        ),
    EndStrikePxRange(1203,
        PRICE
        ),
    StrikeIncrement(1204,
        FLOAT
        ),
    NoTickRules(1205,
        NUMINGROUP
        ),
    StartTickPriceRange(1206,
        PRICE
        ),
    EndTickPriceRange(1207,
        PRICE
        ),
    TickIncrement(1208,
        PRICE
        ),
    TickRuleType(1209,
        INT
            ,new String[]{
        "0",//REGULAR
        "1",//VARIABLE
        "2",//FIXED
        "3",//TRADED_AS_A_SPREAD_LEG
        "4",//SETTLED_AS_A_SPREAD_LEG
            }
        
        ),
    NestedInstrAttribType(1210,
        INT
        ),
    NestedInstrAttribValue(1211,
        STRING
        ),
    LegMaturityTime(1212,
        TZTIMEONLY
        ),
    UnderlyingMaturityTime(1213,
        TZTIMEONLY
        ),
    DerivativeSymbol(1214,
        STRING
        ),
    DerivativeSymbolSfx(1215,
        STRING
        ),
    DerivativeSecurityID(1216,
        STRING
        ),
    DerivativeSecurityIDSource(1217,
        STRING
        ),
    NoDerivativeSecurityAltID(1218,
        NUMINGROUP
        ),
    DerivativeSecurityAltID(1219,
        STRING
        ),
    DerivativeSecurityAltIDSource(1220,
        STRING
        ),
    SecondaryLowLimitPrice(1221,
        PRICE
        ),
    MaturityRuleID(1222,
        STRING
        ),
    StrikeRuleID(1223,
        STRING
        ),
    LegUnitOfMeasureQty(1224,
        QTY
        ),
    DerivativeOptPayAmount(1225,
        AMT
        ),
    EndMaturityMonthYear(1226,
        MONTHYEAR
        ),
    ProductComplex(1227,
        STRING
        ),
    DerivativeProductComplex(1228,
        STRING
        ),
    MaturityMonthYearIncrement(1229,
        INT
        ),
    SecondaryHighLimitPrice(1230,
        PRICE
        ),
    MinLotSize(1231,
        QTY
        ),
    NoExecInstRules(1232,
        NUMINGROUP
        ),
    NoLotTypeRules(1234,
        NUMINGROUP
        ),
    NoMatchRules(1235,
        NUMINGROUP
        ),
    NoMaturityRules(1236,
        NUMINGROUP
        ),
    NoOrdTypeRules(1237,
        NUMINGROUP
        ),
    NoTimeInForceRules(1239,
        NUMINGROUP
        ),
    SecondaryTradingReferencePrice(1240,
        PRICE
        ),
    StartMaturityMonthYear(1241,
        MONTHYEAR
        ),
    FlexProductEligibilityIndicator(1242,
        BOOLEAN
        ),
    DerivFlexProductEligibilityIndicator(1243,
        BOOLEAN
        ),
    FlexibleIndicator(1244,
        BOOLEAN
        ),
    TradingCurrency(1245,
        CURRENCY
        ),
    DerivativeProduct(1246,
        INT
        ),
    DerivativeSecurityGroup(1247,
        STRING
        ),
    DerivativeCFICode(1248,
        STRING
        ),
    DerivativeSecurityType(1249,
        STRING
        ),
    DerivativeSecuritySubType(1250,
        STRING
        ),
    DerivativeMaturityMonthYear(1251,
        MONTHYEAR
        ),
    DerivativeMaturityDate(1252,
        LOCALMKTDATE
        ),
    DerivativeMaturityTime(1253,
        TZTIMEONLY
        ),
    DerivativeSettleOnOpenFlag(1254,
        STRING
        ),
    DerivativeInstrmtAssignmentMethod(1255,
        CHAR
        ),
    DerivativeSecurityStatus(1256,
        STRING
        ),
    DerivativeInstrRegistry(1257,
        STRING
        ),
    DerivativeCountryOfIssue(1258,
        COUNTRY
        ),
    DerivativeStateOrProvinceOfIssue(1259,
        STRING
        ),
    DerivativeLocaleOfIssue(1260,
        STRING
        ),
    DerivativeStrikePrice(1261,
        PRICE
        ),
    DerivativeStrikeCurrency(1262,
        CURRENCY
        ),
    DerivativeStrikeMultiplier(1263,
        FLOAT
        ),
    DerivativeStrikeValue(1264,
        FLOAT
        ),
    DerivativeOptAttribute(1265,
        CHAR
        ),
    DerivativeContractMultiplier(1266,
        FLOAT
        ),
    DerivativeMinPriceIncrement(1267,
        FLOAT
        ),
    DerivativeMinPriceIncrementAmount(1268,
        AMT
        ),
    DerivativeUnitOfMeasure(1269,
        STRING
        ),
    DerivativeUnitOfMeasureQty(1270,
        QTY
        ),
    DerivativeTimeUnit(1271,
        STRING
        ),
    DerivativeSecurityExchange(1272,
        EXCHANGE
        ),
    DerivativePositionLimit(1273,
        INT
        ),
    DerivativeNTPositionLimit(1274,
        INT
        ),
    DerivativeIssuer(1275,
        STRING
        ),
    DerivativeIssueDate(1276,
        LOCALMKTDATE
        ),
    DerivativeEncodedIssuerLen(1277,
        LENGTH
        ),
    DerivativeEncodedIssuer(1278,
        DATA
        ),
    DerivativeSecurityDesc(1279,
        STRING
        ),
    DerivativeEncodedSecurityDescLen(1280,
        LENGTH
        ),
    DerivativeEncodedSecurityDesc(1281,
        DATA
        ),
    DerivativeSecurityXMLLen(1282,
        LENGTH
        ),
    DerivativeSecurityXML(1283,
        DATA
        ),
    DerivativeSecurityXMLSchema(1284,
        STRING
        ),
    DerivativeContractSettlMonth(1285,
        MONTHYEAR
        ),
    NoDerivativeEvents(1286,
        NUMINGROUP
        ),
    DerivativeEventType(1287,
        INT
        ),
    DerivativeEventDate(1288,
        LOCALMKTDATE
        ),
    DerivativeEventTime(1289,
        UTCTIMESTAMP
        ),
    DerivativeEventPx(1290,
        PRICE
        ),
    DerivativeEventText(1291,
        STRING
        ),
    NoDerivativeInstrumentParties(1292,
        NUMINGROUP
        ),
    DerivativeInstrumentPartyID(1293,
        STRING
        ),
    DerivativeInstrumentPartyIDSource(1294,
        STRING
        ),
    DerivativeInstrumentPartyRole(1295,
        INT
        ),
    NoDerivativeInstrumentPartySubIDs(1296,
        NUMINGROUP
        ),
    DerivativeInstrumentPartySubID(1297,
        STRING
        ),
    DerivativeInstrumentPartySubIDType(1298,
        INT
        ),
    DerivativeExerciseStyle(1299,
        CHAR
        ),
    MarketSegmentID(1300,
        STRING
        ),
    MarketID(1301,
        EXCHANGE
        ),
    MaturityMonthYearIncrementUnits(1302,
        INT
            ,new String[]{
        "0",//MONTHS
        "1",//DAYS
        "2",//WEEKS
        "3",//YEARS
            }
        
        ),
    MaturityMonthYearFormat(1303,
        INT
            ,new String[]{
        "0",//YEARMONTH_ONLY
        "1",//YEARMONTHDAY
        "2",//YEARMONTHWEEK
            }
        
        ),
    StrikeExerciseStyle(1304,
        INT
        ),
    SecondaryPriceLimitType(1305,
        INT
        ),
    PriceLimitType(1306,
        INT
            ,new String[]{
        "0",//PRICE
        "1",//TICKS
        "2",//PERCENTAGE
            }
        
        ),
    ExecInstValue(1308,
        CHAR
        ),
    NoTradingSessionRules(1309,
        NUMINGROUP
        ),
    NoMarketSegments(1310,
        NUMINGROUP
        ),
    NoDerivativeInstrAttrib(1311,
        NUMINGROUP
        ),
    NoNestedInstrAttrib(1312,
        NUMINGROUP
        ),
    DerivativeInstrAttribType(1313,
        INT
        ),
    DerivativeInstrAttribValue(1314,
        STRING
        ),
    DerivativePriceUnitOfMeasure(1315,
        STRING
        ),
    DerivativePriceUnitOfMeasureQty(1316,
        QTY
        ),
    DerivativeSettlMethod(1317,
        CHAR
        ),
    DerivativePriceQuoteMethod(1318,
        STRING
        ),
    DerivativeValuationMethod(1319,
        STRING
        ),
    DerivativeListMethod(1320,
        INT
        ),
    DerivativeCapPrice(1321,
        PRICE
        ),
    DerivativeFloorPrice(1322,
        PRICE
        ),
    DerivativePutOrCall(1323,
        INT
        ),
    ListUpdateAction(1324,
        CHAR
        ),
    ParentMktSegmID(1325,
        STRING
        ),
    TradingSessionDesc(1326,
        STRING
        ),
    TradSesUpdateAction(1327,
        CHAR
        ),
    RejectText(1328,
        STRING
        ),
    FeeMultiplier(1329,
        FLOAT
        ),
    UnderlyingLegSymbol(1330,
        STRING
        ),
    UnderlyingLegSymbolSfx(1331,
        STRING
        ),
    UnderlyingLegSecurityID(1332,
        STRING
        ),
    UnderlyingLegSecurityIDSource(1333,
        STRING
        ),
    NoUnderlyingLegSecurityAltID(1334,
        NUMINGROUP
        ),
    UnderlyingLegSecurityAltID(1335,
        STRING
        ),
    UnderlyingLegSecurityAltIDSource(1336,
        STRING
        ),
    UnderlyingLegSecurityType(1337,
        STRING
        ),
    UnderlyingLegSecuritySubType(1338,
        STRING
        ),
    UnderlyingLegMaturityMonthYear(1339,
        MONTHYEAR
        ),
    UnderlyingLegStrikePrice(1340,
        PRICE
        ),
    UnderlyingLegSecurityExchange(1341,
        STRING
        ),
    NoOfLegUnderlyings(1342,
        NUMINGROUP
        ),
    UnderlyingLegPutOrCall(1343,
        INT
        ),
    UnderlyingLegCFICode(1344,
        STRING
        ),
    UnderlyingLegMaturityDate(1345,
        LOCALMKTDATE
        ),
    ApplReqID(1346,
        STRING
        ),
    ApplReqType(1347,
        INT
            ,new String[]{
        "0",//RETRANSMISSION_OF_APPLICATION_MESSAGES_FOR_THE_SPECIFIED_APPLICATIONS
        "1",//SUBSCRIPTION_TO_THE_SPECIFIED_APPLICATIONS
        "2",//REQUEST_FOR_THE_LAST_APPLLASTSEQNUM_PUBLISHED_FOR_THE_SPECIFIED_APPLICATIONS
        "3",//REQUEST_VALID_SET_OF_APPLICATIONS
        "4",//UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS
        "5",//CANCEL_RETRANSMISSION
        "6",//CANCEL_RETRANSMISSION_AND_UNSUBSCRIBE_TO_THE_SPECIFIED_APPLICATIONS
            }
        
        ),
    ApplResponseType(1348,
        INT
            ,new String[]{
        "0",//REQUEST_SUCCESSFULLY_PROCESSED
        "1",//APPLICATION_DOES_NOT_EXIST
        "2",//MESSAGES_NOT_AVAILABLE
            }
        
        ),
    ApplTotalMessageCount(1349,
        INT
        ),
    ApplLastSeqNum(1350,
        SEQNUM
        ),
    NoApplIDs(1351,
        NUMINGROUP
        ),
    ApplResendFlag(1352,
        BOOLEAN
        ),
    ApplResponseID(1353,
        STRING
        ),
    ApplResponseError(1354,
        INT
            ,new String[]{
        "0",//APPLICATION_DOES_NOT_EXIST
        "1",//MESSAGES_REQUESTED_ARE_NOT_AVAILABLE
        "2",//USER_NOT_AUTHORIZED_FOR_APPLICATION
            }
        
        ),
    RefApplID(1355,
        STRING
        ),
    ApplReportID(1356,
        STRING
        ),
    RefApplLastSeqNum(1357,
        SEQNUM
        ),
    LegPutOrCall(1358,
        INT
        ),
    TotNoFills(1361,
        INT
        ),
    NoFills(1362,
        NUMINGROUP
        ),
    FillExecID(1363,
        STRING
        ),
    FillPx(1364,
        PRICE
        ),
    FillQty(1365,
        QTY
        ),
    LegAllocID(1366,
        STRING
        ),
    LegAllocSettlCurrency(1367,
        CURRENCY
        ),
    TradSesEvent(1368,
        INT
            ,new String[]{
        "0",//TRADING_RESUMES
        "1",//CHANGE_OF_TRADING_SESSION
        "2",//CHANGE_OF_TRADING_SUBSESSION
        "3",//CHANGE_OF_TRADING_STATUS
            }
        
        ),
    MassActionReportID(1369,
        STRING
        ),
    NoNotAffectedOrders(1370,
        NUMINGROUP
        ),
    NotAffectedOrderID(1371,
        STRING
        ),
    NotAffOrigClOrdID(1372,
        STRING
        ),
    MassActionType(1373,
        INT
            ,new String[]{
        "1",//SUSPEND_ORDERS
        "2",//RELEASE_ORDERS_FROM_SUSPENSION
        "3",//CANCEL_ORDERS
            }
        
        ),
    MassActionScope(1374,
        INT
            ,new String[]{
        "1",//ALL_ORDERS_FOR_A_SECURITY
        "2",//ALL_ORDERS_FOR_AN_UNDERLYING_SECURITY
        "3",//ALL_ORDERS_FOR_A_PRODUCT
        "4",//ALL_ORDERS_FOR_A_CFICODE
        "5",//ALL_ORDERS_FOR_A_SECURITYTYPE
        "6",//ALL_ORDERS_FOR_A_TRADING_SESSION
        "7",//ALL_ORDERS
        "8",//ALL_ORDERS_FOR_A_MARKET
        "9",//ALL_ORDERS_FOR_A_MARKET_SEGMENT
        "10",//ALL_ORDERS_FOR_A_SECURITY_GROUP
        "11",//CANCEL_FOR_SECURITY_ISSUER
        "12",//CANCEL_FOR_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    MassActionResponse(1375,
        INT
            ,new String[]{
        "0",//REJECTED
        "1",//ACCEPTED
            }
        
        ),
    MassActionRejectReason(1376,
        INT
            ,new String[]{
        "0",//MASS_ACTION_NOT_SUPPORTED
        "1",//INVALID_OR_UNKNOWN_SECURITY
        "2",//INVALID_OR_UNKNOWN_UNDERLYING_SECURITY
        "3",//INVALID_OR_UNKNOWN_PRODUCT
        "4",//INVALID_OR_UNKNOWN_CFICODE
        "5",//INVALID_OR_UNKNOWN_SECURITYTYPE
        "6",//INVALID_OR_UNKNOWN_TRADING_SESSION
        "7",//INVALID_OR_UNKNOWN_MARKET
        "8",//INVALID_OR_UNKNOWN_MARKET_SEGMENT
        "9",//INVALID_OR_UNKNOWN_SECURITY_GROUP
        "99",//OTHER
        "10",//INVALID_OR_UNKNOWN_SECURITY_ISSUER
        "11",//INVALID_OR_UNKNOWN_ISSUER_OF_UNDERLYING_SECURITY
            }
        
        ),
    MultilegModel(1377,
        INT
            ,new String[]{
        "0",//PREDEFINED_MULTILEG_SECURITY
        "1",//USER_DEFINED_MULTLEG_SECURITY
        "2",//USER_DEFINED_NON_SECURITIZED_MULTILEG
            }
        
        ),
    MultilegPriceMethod(1378,
        INT
            ,new String[]{
        "0",//NET_PRICE
        "1",//REVERSED_NET_PRICE
        "2",//YIELD_DIFFERENCE
        "3",//INDIVIDUAL
        "4",//CONTRACT_WEIGHTED_AVERAGE_PRICE
        "5",//MULTIPLIED_PRICE
            }
        
        ),
    LegVolatility(1379,
        FLOAT
        ),
    DividendYield(1380,
        PERCENTAGE
        ),
    LegDividendYield(1381,
        PERCENTAGE
        ),
    CurrencyRatio(1382,
        FLOAT
        ),
    LegCurrencyRatio(1383,
        FLOAT
        ),
    LegExecInst(1384,
        MULTIPLECHARVALUE
        ),
    ContingencyType(1385,
        INT
            ,new String[]{
        "1",//ONE_CANCELS_THE_OTHER
        "2",//ONE_TRIGGERS_THE_OTHER
        "3",//ONE_UPDATES_THE_OTHER_3
        "4",//ONE_UPDATES_THE_OTHER_4
            }
        
        ),
    ListRejectReason(1386,
        INT
            ,new String[]{
        "0",//BROKER
        "2",//EXCHANGE_CLOSED
        "4",//TOO_LATE_TO_ENTER
        "5",//UNKNOWN_ORDER
        "6",//DUPLICATE_ORDER
        "11",//UNSUPPORTED_ORDER_CHARACTERISTIC
        "99",//OTHER
            }
        
        ),
    NoTrdRepIndicators(1387,
        NUMINGROUP
        ),
    TrdRepPartyRole(1388,
        INT
        ),
    TrdRepIndicator(1389,
        BOOLEAN
        ),
    TradePublishIndicator(1390,
        INT
            ,new String[]{
        "0",//DO_NOT_PUBLISH_TRADE
        "1",//PUBLISH_TRADE
        "2",//DEFERRED_PUBLICATION
            }
        
        ),
    UnderlyingLegOptAttribute(1391,
        CHAR
        ),
    UnderlyingLegSecurityDesc(1392,
        STRING
        ),
    MarketReqID(1393,
        STRING
        ),
    MarketReportID(1394,
        STRING
        ),
    MarketUpdateAction(1395,
        CHAR
            ,new String[]{
        "A",//ADD
        "D",//DELETE
        "M",//MODIFY
            }
        
        ),
    MarketSegmentDesc(1396,
        STRING
        ),
    EncodedMktSegmDescLen(1397,
        LENGTH
        ),
    EncodedMktSegmDesc(1398,
        DATA
        ),
    ApplNewSeqNum(1399,
        SEQNUM
        ),
    EncryptedPasswordMethod(1400,
        INT
        ),
    EncryptedPasswordLen(1401,
        LENGTH
        ),
    EncryptedPassword(1402,
        DATA
        ),
    EncryptedNewPasswordLen(1403,
        LENGTH
        ),
    EncryptedNewPassword(1404,
        DATA
        ),
    UnderlyingLegMaturityTime(1405,
        TZTIMEONLY
        ),
    RefApplExtID(1406,
        INT
        ),
    DefaultApplExtID(1407,
        INT
        ),
    DefaultCstmApplVerID(1408,
        STRING
        ),
    SessionStatus(1409,
        INT
            ,new String[]{
        "0",//SESSION_ACTIVE
        "1",//SESSION_PASSWORD_CHANGED
        "2",//SESSION_PASSWORD_DUE_TO_EXPIRE
        "3",//NEW_SESSION_PASSWORD_DOES_NOT_COMPLY_WITH_POLICY
        "4",//SESSION_LOGOUT_COMPLETE
        "5",//INVALID_USERNAME_OR_PASSWORD
        "6",//ACCOUNT_LOCKED
        "7",//LOGONS_ARE_NOT_ALLOWED_AT_THIS_TIME
        "8",//PASSWORD_EXPIRED
            }
        
        ),
    DefaultVerIndicator(1410,
        BOOLEAN
        ),
    Nested4PartySubIDType(1411,
        INT
        ),
    Nested4PartySubID(1412,
        STRING
        ),
    NoNested4PartySubIDs(1413,
        NUMINGROUP
        ),
    NoNested4PartyIDs(1414,
        NUMINGROUP
        ),
    Nested4PartyID(1415,
        STRING
        ),
    Nested4PartyIDSource(1416,
        CHAR
        ),
    Nested4PartyRole(1417,
        INT
        ),
    LegLastQty(1418,
        QTY
        ),
    UnderlyingExerciseStyle(1419,
        INT
        ),
    LegExerciseStyle(1420,
        INT
        ),
    LegPriceUnitOfMeasure(1421,
        STRING
        ),
    LegPriceUnitOfMeasureQty(1422,
        QTY
        ),
    UnderlyingUnitOfMeasureQty(1423,
        QTY
        ),
    UnderlyingPriceUnitOfMeasure(1424,
        STRING
        ),
    UnderlyingPriceUnitOfMeasureQty(1425,
        QTY
        ),
    ApplReportType(1426,
        INT
            ,new String[]{
        "0",//RESET_APPLSEQNUM_TO_NEW_VALUE_SPECIFIED_IN_APPLNEWSEQNUM
        "1",//REPORTS_THAT_THE_LAST_MESSAGE_HAS_BEEN_SENT_FOR_THE_APPLIDS_REFER_TO_REFAPPLLASTSEQNUM
        "2",//HEARTBEAT_MESSAGE_INDICATING_THAT_APPLICATION_IDENTIFIED_BY_REFAPPLID
        "3",//APPLICATION_MESSAGE_RE_SEND_COMPLETED
            }
        
        ),
    SideExecID(1427,
        STRING
        ),
    OrderDelay(1428,
        INT
        ),
    OrderDelayUnit(1429,
        INT
            ,new String[]{
        "0",//SECONDS
        "1",//TENTHS_OF_A_SECOND
        "2",//HUNDREDTHS_OF_A_SECOND
        "3",//MILLISECONDS
        "4",//MICROSECONDS
        "5",//NANOSECONDS
        "10",//MINUTES
        "11",//HOURS
        "12",//DAYS
        "13",//WEEKS
        "14",//MONTHS
        "15",//YEARS
            }
        
        ),
    VenueType(1430,
        CHAR
            ,new String[]{
        "E",//ELECTRONIC
        "P",//PIT
        "X",//EX_PIT
            }
        
        ),
    RefOrdIDReason(1431,
        INT
            ,new String[]{
        "0",//GTC_FROM_PREVIOUS_DAY
        "1",//PARTIAL_FILL_REMAINING
        "2",//ORDER_CHANGED
            }
        
        ),
    OrigCustOrderCapacity(1432,
        INT
            ,new String[]{
        "1",//MEMBER_TRADING_FOR_THEIR_OWN_ACCOUNT
        "2",//CLEARING_FIRM_TRADING_FOR_ITS_PROPRIETARY_ACCOUNT
        "3",//MEMBER_TRADING_FOR_ANOTHER_MEMBER
        "4",//ALL_OTHER
            }
        
        ),
    RefApplReqID(1433,
        STRING
        ),
    ModelType(1434,
        INT
            ,new String[]{
        "0",//UTILITY_PROVIDED_STANDARD_MODEL
        "1",//PROPRIETARY
            }
        
        ),
    ContractMultiplierUnit(1435,
        INT
            ,new String[]{
        "0",//SHARES
        "1",//HOURS
        "2",//DAYS
            }
        
        ),
    LegContractMultiplierUnit(1436,
        INT
        ),
    UnderlyingContractMultiplierUnit(1437,
        INT
        ),
    DerivativeContractMultiplierUnit(1438,
        INT
        ),
    FlowScheduleType(1439,
        INT
            ,new String[]{
        "0",//NERC_EASTERN_OFF_PEAK
        "1",//NERC_WESTERN_OFF_PEAK
        "2",//NERC_CALENDAR_ALL_DAYS_IN_MONTH
        "3",//NERC_EASTERN_PEAK
        "4",//NERC_WESTERN_PEAK
            }
        
        ),
    LegFlowScheduleType(1440,
        INT
        ),
    UnderlyingFlowScheduleType(1441,
        INT
        ),
    DerivativeFlowScheduleType(1442,
        INT
        ),
    FillLiquidityInd(1443,
        INT
        ),
    SideLiquidityInd(1444,
        INT
        ),
    NoRateSources(1445,
        NUMINGROUP
        ),
    RateSource(1446,
        INT
            ,new String[]{
        "0",//BLOOMBERG
        "1",//REUTERS
        "2",//TELERATE
        "99",//OTHER
            }
        
        ),
    RateSourceType(1447,
        INT
            ,new String[]{
        "0",//PRIMARY
        "1",//SECONDARY
            }
        
        ),
    ReferencePage(1448,
        STRING
        ),
    RestructuringType(1449,
        STRING
            ,new String[]{
        "FR",//FULL_RESTRUCTURING
        "MR",//MODIFIED_RESTRUCTURING
        "MM",//MODIFIED_MOD_RESTRUCTURING
        "XR",//NO_RESTRUCTURING_SPECIFIED
            }
        
        ),
    Seniority(1450,
        STRING
            ,new String[]{
        "SD",//SENIOR_SECURED
        "SR",//SENIOR
        "SB",//SUBORDINATED
            }
        
        ),
    NotionalPercentageOutstanding(1451,
        PERCENTAGE
        ),
    OriginalNotionalPercentageOutstanding(1452,
        PERCENTAGE
        ),
    UnderlyingRestructuringType(1453,
        STRING
        ),
    UnderlyingSeniority(1454,
        STRING
        ),
    UnderlyingNotionalPercentageOutstanding(1455,
        PERCENTAGE
        ),
    UnderlyingOriginalNotionalPercentageOutstanding(1456,
        PERCENTAGE
        ),
    AttachmentPoint(1457,
        PERCENTAGE
        ),
    DetachmentPoint(1458,
        PERCENTAGE
        ),
    UnderlyingAttachmentPoint(1459,
        PERCENTAGE
        ),
    UnderlyingDetachmentPoint(1460,
        PERCENTAGE
        ),
    NoTargetPartyIDs(1461,
        NUMINGROUP
        ),
    TargetPartyID(1462,
        STRING
        ),
    TargetPartyIDSource(1463,
        CHAR
        ),
    TargetPartyRole(1464,
        INT
        ),
    SecurityListID(1465,
        STRING
        ),
    SecurityListRefID(1466,
        STRING
        ),
    SecurityListDesc(1467,
        STRING
        ),
    EncodedSecurityListDescLen(1468,
        LENGTH
        ),
    EncodedSecurityListDesc(1469,
        DATA
        ),
    SecurityListType(1470,
        INT
            ,new String[]{
        "1",//INDUSTRY_CLASSIFICATION
        "2",//TRADING_LIST
        "3",//MARKET
        "4",//NEWSPAPER_LIST
            }
        
        ),
    SecurityListTypeSource(1471,
        INT
            ,new String[]{
        "1",//ICB
        "2",//NAICS
        "3",//GICS
            }
        
        ),
    NewsID(1472,
        STRING
        ),
    NewsCategory(1473,
        INT
            ,new String[]{
        "0",//COMPANY_NEWS
        "1",//MARKETPLACE_NEWS
        "2",//FINANCIAL_MARKET_NEWS
        "3",//TECHNICAL_NEWS
        "99",//OTHER_NEWS
            }
        
        ),
    LanguageCode(1474,
        LANGUAGE
        ),
    NoNewsRefIDs(1475,
        NUMINGROUP
        ),
    NewsRefID(1476,
        STRING
        ),
    NewsRefType(1477,
        INT
            ,new String[]{
        "0",//REPLACEMENT
        "1",//OTHER_LANGUAGE
        "2",//COMPLIMENTARY
            }
        
        ),
    StrikePriceDeterminationMethod(1478,
        INT
            ,new String[]{
        "1",//FIXED_STRIKE
        "2",//STRIKE_SET_AT_EXPIRATION_TO_UNDERLYING_OR_OTHER_VALUE
        "3",//STRIKE_SET_TO_AVERAGE_OF_UNDERLYING_SETTLEMENT_PRICE_ACROSS_THE_LIFE_OF_THE_OPTION
        "4",//STRIKE_SET_TO_OPTIMAL_VALUE
            }
        
        ),
    StrikePriceBoundaryMethod(1479,
        INT
            ,new String[]{
        "1",//LESS_THAN_UNDERLYING_PRICE_IS_IN_THE_MONEY
        "2",//LESS_THAN_OR_EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY
        "3",//EQUAL_TO_THE_UNDERLYING_PRICE_IS_IN_THE_MONEY
        "4",//GREATER_THAN_OR_EQUAL_TO_UNDERLYING_PRICE_IS_IN_THE_MONEY
        "5",//GREATER_THAN_UNDERLYING_IS_IN_THE_MONEY
            }
        
        ),
    StrikePriceBoundaryPrecision(1480,
        PERCENTAGE
        ),
    UnderlyingPriceDeterminationMethod(1481,
        INT
            ,new String[]{
        "1",//REGULAR
        "2",//SPECIAL_REFERENCE
        "3",//OPTIMAL_VALUE
        "4",//AVERAGE_VALUE
            }
        
        ),
    OptPayoutType(1482,
        INT
            ,new String[]{
        "1",//VANILLA
        "2",//CAPPED
        "3",//BINARY
            }
        
        ),
    NoComplexEvents(1483,
        NUMINGROUP
        ),
    ComplexEventType(1484,
        INT
            ,new String[]{
        "1",//CAPPED
        "2",//TRIGGER
        "3",//KNOCK_IN_UP
        "4",//KOCK_IN_DOWN
        "5",//KNOCK_OUT_UP
        "6",//KNOCK_OUT_DOWN
        "7",//UNDERLYING
        "8",//RESET_BARRIER
        "9",//ROLLING_BARRIER
            }
        
        ),
    ComplexOptPayoutAmount(1485,
        AMT
        ),
    ComplexEventPrice(1486,
        PRICE
        ),
    ComplexEventPriceBoundaryMethod(1487,
        INT
            ,new String[]{
        "1",//LESS_THAN_COMPLEXEVENTPRICE
        "2",//LESS_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE
        "3",//EQUAL_TO_COMPLEXEVENTPRICE
        "4",//GREATER_THAN_OR_EQUAL_TO_COMPLEXEVENTPRICE
        "5",//GREATER_THAN_COMPLEXEVENTPRICE
            }
        
        ),
    ComplexEventPriceBoundaryPrecision(1488,
        PERCENTAGE
        ),
    ComplexEventPriceTimeType(1489,
        INT
            ,new String[]{
        "1",//EXPIRATION
        "2",//IMMEDIATE
        "3",//SPECIFIED_DATE_TIME
            }
        
        ),
    ComplexEventCondition(1490,
        INT
            ,new String[]{
        "1",//AND
        "2",//OR
            }
        
        ),
    NoComplexEventDates(1491,
        NUMINGROUP
        ),
    ComplexEventStartDate(1492,
        UTCTIMESTAMP
        ),
    ComplexEventEndDate(1493,
        UTCTIMESTAMP
        ),
    NoComplexEventTimes(1494,
        NUMINGROUP
        ),
    ComplexEventStartTime(1495,
        UTCTIMEONLY
        ),
    ComplexEventEndTime(1496,
        UTCTIMEONLY
        ),
    StreamAsgnReqID(1497,
        STRING
        ),
    StreamAsgnReqType(1498,
        INT
            ,new String[]{
        "1",//STREAM_ASSIGNMENT_FOR_NEW_CUSTOMER
        "2",//STREAM_ASSIGNMENT_FOR_EXISTING_CUSTOMER
            }
        
        ),
    NoAsgnReqs(1499,
        NUMINGROUP
        ),
    MDStreamID(1500,
        STRING
        ),
    StreamAsgnRptID(1501,
        STRING
        ),
    StreamAsgnRejReason(1502,
        INT
            ,new String[]{
        "0",//UNKNOWN_CLIENT
        "1",//EXCEEDS_MAXIMUM_SIZE
        "2",//UNKNOWN_OR_INVALID_CURRENCY_PAIR
        "3",//NO_AVAILABLE_STREAM
        "99",//OTHER
            }
        
        ),
    StreamAsgnAckType(1503,
        INT
            ,new String[]{
        "0",//ASSIGNMENT_ACCEPTED
        "1",//ASSIGNMENT_REJECTED
            }
        
        ),
    RelSymTransactTime(1504,
        UTCTIMESTAMP
        ),
    StreamAsgnType(1617,
        INT
            ,new String[]{
        "1",//ASSIGNMENT
        "2",//REJECTED
        "3",//TERMINATE_UNASSIGN
            }
        
        ),
    
        ;

        private final int tag;
        private final DataType type;
        private final String[] enumValues;

        private static final HashMap<Integer,FieldType> TYPES = new HashMap<Integer,FieldType>();

        static {
            for (FieldType fieldType : FieldType.values()) {
                if (fieldType.tag > 0) {
                    TYPES.put(fieldType.tag, fieldType);
                }
            }
        }

        public static FieldType forTag(int tag) {
            FieldType fieldType = TYPES.get(tag);
            return (fieldType != null) ? fieldType : UNKNOWN;
        }

        private FieldType(int tag, DataType type) {
            this.tag = tag;
            this.type = type;
            this.enumValues = null;
        }

        private FieldType(int tag, DataType type, String[] enumValues) {
            this.tag = tag;
            this.type = type;
            this.enumValues = enumValues;
        }

        public int tag() {
            return tag;
        }

        public DataType type() {
            return type;
        }

        public String[] enumValues() {
            return enumValues;
        }
    }
    